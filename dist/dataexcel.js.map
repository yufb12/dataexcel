{"version":3,"file":"dataexcel.js","sources":["../src/Base/ArrayList.ts","../src/Base/CellHeaderStyle.ts","../src/Base/ConstantValue.ts","../src/Base/ConvertHelper.ts","../src/Base/Cursors.ts","../src/Base/DataExcelConsole.ts","../src/Base/Dictionary.ts","../src/Base/EventView.ts","../src/Base/ImageLayout.ts","../src/Base/MouseButtons.ts","../src/Base/NextType.ts","../src/Base/Point.ts","../src/Base/SelectMode.ts","../src/Control/SizeChangRect.ts","../src/Edit/DataExcelCellEditBase.ts","../src/Edit/DataExcelCellEditColumnHeader.ts","../src/Edit/DataExcelCellEditRowHeader.ts","../src/Base/Tool.ts","../src/Control/EventObserver2.ts","../src/Control/Events.ts","../src/Plus/HScrollerSkin.ts","../src/Plus/VScrollerSkin.ts","../src/Control/ScrollerView.ts","../src/Drawing/Graphics.ts","../src/Edit/DataExcelCellEditEdit.ts","../src/View/MoveView.ts","../src/View/ReSizeView.ts","../src/Plus/Chart.ts","../src/Plus/ChartList.ts","../src/Plus/Displayable/Displayable.ts","../src/Plus/Displayable/DisplayableCircle.ts","../src/Plus/Displayable/DisplayableImage.ts","../src/Plus/Displayable/DisplayableLine.ts","../src/Plus/Displayable/DisplayablePolygon.ts","../src/Plus/Displayable/DisplayableRect.ts","../src/Plus/Displayable/DisplayableSector.ts","../src/Plus/Displayable/DisplayableText.ts","../src/Plus/Displayable/DisplayableBuild.ts","../src/Plus/Displayable/DisplayableList.ts","../src/Plus/Primitive.ts","../src/Plus/PrimitiveList.ts","../src/Base/StringAlignment.ts","../src/main/DataExcelBackCell.ts","../src/main/DataExcelBackCellList.ts","../src/Base/EditMode.ts","../src/main/DataExcelCell.ts","../src/main/DataExcelCellList.ts","../src/main/DataExcelColumn.ts","../src/main/DataExcelColumnCollection.ts","../src/main/DataExcelColumnList.ts","../src/main/DataExcelMergeCell.ts","../src/main/DataExcelMergeCellList.ts","../src/main/DataExcelCellCollection.ts","../src/main/DataExcelRow.ts","../src/main/DataExcelRowCollection.ts","../src/main/DataExcelRowList.ts","../src/main/SelectAddRectCollection.ts","../src/main/SelectCellCollection.ts","../src/main/DataExcel.ts","../src/main/DataExcelMergecell.ts","../src/plus/Displayable/Displayable.ts","../src/plus/Displayable/DisplayableCircle.ts","../src/plus/Displayable/DisplayableLine.ts","../src/plus/Displayable/DisplayablePolygon.ts","../src/plus/Displayable/DisplayableRect.ts","../src/plus/Displayable/DisplayableSector.ts","../src/plus/Displayable/DisplayableText.ts","../src/plus/Displayable/DisplayableBuild.ts","../src/plus/Displayable/DisplayableImage.ts","../src/plus/Chart.ts","../src/plus/Displayable/DisplayableList.ts","../src/plus/Primitive.ts"],"sourcesContent":["export class List<T> extends Array<T>\r\n{ \r\n    constructor()\r\n    {\r\n        super(); \r\n    };\r\n\r\n    size(): number\r\n    {\r\n        return this.length;\r\n    }\r\n    add(value:T)\r\n    { \r\n        this.push(value); \r\n        return this;\r\n    }\r\n    get(index:any):T\r\n    {\r\n        return this[index];\r\n    }\r\n    removeIndex(index:any)\r\n    {\r\n        this.splice(index, 1);\r\n    }\r\n    remove(obj:any)\r\n    {\r\n        this.removeIndex(this.indexOf(obj));\r\n    }\r\n    indexOf(obj:any)\r\n    {\r\n        for (var i = 0; i < this.length; i++)\r\n        {\r\n            if (this[i] === obj)\r\n            {\r\n                return i;\r\n            };\r\n        }\r\n        return -1;\r\n    }\r\n    isEmpty(): boolean\r\n    {\r\n        return this.length == 0;\r\n    }\r\n    clear()\r\n    {\r\n        this.length = 0;\r\n    }\r\n    contains(obj:any): boolean\r\n    {\r\n        return this.indexOf(obj) != -1;\r\n    }\r\n    Add(value: T)\r\n    {\r\n        this.push(value);\r\n        return this;\r\n    }\r\n    Remove(obj:any)\r\n    {\r\n        this.removeIndex(this.indexOf(obj));\r\n    }\r\n    public get Count()\r\n    {\r\n        return this.length;\r\n    }\r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n\r\n    Contains(obj:any): boolean\r\n    {\r\n        return this.indexOf(obj) != -1;\r\n    }\r\n}","var CellHeaderStyle = { Font: \"13px 宋体\", Color: \"black\", textPos: \"inside\", BackColor: \"#DCDCDC\", SelectBackColor: \"#DAA520\" }\r\nvar SelectStyle = {\r\n    FouscedCellSelectBorderColor: \"gray\",\r\n\r\n}\r\n\r\nvar SelectCellsStyle = {\r\n    fill: \"MediumAquaMarine\",\r\n    lineWidth: 2,\r\n    stroke: \"black\",\r\n    opacity: 0.3\r\n};\r\n\r\n\r\nvar SelectCellsStyleAdd = {\r\n    fill: \"MediumAquaMarine\",\r\n    lineWidth: 1,\r\n    stroke: \"MediumAquaMarine\",\r\n};\r\n\r\n\r\nvar SelectCellsAddStyle = {\r\n    fill: \"LightSteelBlue\",\r\n    lineWidth: 2,\r\n    stroke: \"white\",\r\n    opacity: 0.3\r\n};\r\n\r\nvar FocusedCellStyle = {\r\n    fill: \"gray\",\r\n    opacity: 0.3\r\n};\r\n\r\nvar GridLineStyle = {\r\n    stroke: \"#C0C0C0\"\r\n}\r\nvar Palette = {\r\n    AliceBlue: \"AliceBlue\",\r\n    A3399FF80: \"#3399FF80\",\r\n}\r\nexport {CellHeaderStyle,SelectStyle,SelectCellsStyle,SelectCellsStyleAdd,SelectCellsAddStyle,FocusedCellStyle}\r\nexport{GridLineStyle,Palette}","var ConstantValue =\r\n{\r\n\r\n    MinRowIndex: 1,\r\n    MinColumnIndex: 1,\r\n    DATAEXCEL: 0x1301,\r\n    DATAEXCEL_VSERION: 0x2101,\r\n    DATAEXCEL_UPGRADE: 7,\r\n    CopySplitSymbolRow: \"\\n\",\r\n    CopySplitSymbolColumn: \"\\t\",\r\n\r\n    NullValueIndex: -1,\r\n    NullSize: -1,\r\n    RowHeaderSplit: 5,\r\n    ColumnHeaderSplit: 5,\r\n    ErrorValue: \"#Error\",\r\n    DateTimeDeafultFormat: \"yyyy-MM-dd\",\r\n    ZeroLen: 0,\r\n\r\n}\r\n\r\nvar Border =\r\n{\r\n    all: \"all\",\r\n    left: \"left\",\r\n    right: \"right\",\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n}\r\n\r\nvar TextAlgin = {\r\n    left: 'left',\r\n    right: 'right',\r\n    top: 'top',\r\n    bottom: 'bottom',\r\n    topleft: 'topleft',\r\n    topright: 'topright',\r\n    bottomleft: 'bottomleft',\r\n    bottomright: 'bottomright'\r\n}\r\n\r\nvar FormatType =\r\n{\r\n    Null: \"\",\r\n    Date: \"Date\",\r\n    Num: \"Num\"\r\n}\r\n\r\nvar CheckState = {\r\n    Check: 1,\r\n    Unkown: 2,\r\n    UnCheck: 0\r\n}\r\n\r\nexport {ConstantValue,Border,TextAlgin,FormatType,CheckState}","﻿import { FormatType } from \"./ConstantValue\";\r\n\r\nexport class ConvertHelper {\r\n    public static IsNumber(value: any): boolean {\r\n        if (typeof (value) == 'number') {\r\n            return true;\r\n        }\r\n        if (!isNaN(value)) {\r\n            return true;\r\n        }\r\n        let num = parseInt(value);\r\n        if (!isNaN(num)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public static StringIsNullOrEmpty(text: string): boolean {\r\n        if (text == null)\r\n            return true;\r\n        if (text == \"\")\r\n            return true;\r\n        return false;\r\n    }\r\n    public static ToInt(txt: string): number {\r\n        return parseInt(txt);\r\n    }\r\n    public static ToDateTime(value: any): Date {\r\n        let date: Date;\r\n        if (value instanceof Date) {\r\n            date = value;\r\n            return date;\r\n        }\r\n        else {\r\n            let datevalue = Date.parse(value);\r\n            date = new Date(datevalue);\r\n        }\r\n        return date;\r\n    }\r\n    public static InsertString(txt: string, index: number, str: string) {\r\n        return txt.slice(0, index) + str + txt.slice(index);\r\n    }\r\n    public static DeleteString(txt: string, index: number, len: number) {\r\n        return txt.slice(0, index) + txt.slice(index + len);\r\n    }\r\n    public static NumberToString(value: number, format: string): string {\r\n        if (format == null)\r\n            return value.toString();\r\n        //let type = typeof (value);\r\n        let num = Number(value);\r\n        let txt = \"\";\r\n        if (format.startsWith(\"¥\")) {\r\n\r\n            txt = num.toFixed(2);\r\n            let index = txt.lastIndexOf(\".\");\r\n            let str = txt.substring(index);\r\n            for (var i = 1; i < index; i++) {\r\n                if (i % 3 == 0) {\r\n                    str = \",\" + txt[index - i] + str;\r\n                }\r\n                else {\r\n                    str = txt[index - i] + str;\r\n                }\r\n            }\r\n            return \"¥\" + txt;\r\n        }\r\n        let len = format.length;\r\n        if (format.endsWith(\"%\")) {\r\n            len = (format.length - 1);\r\n            txt = (num * 100).toFixed(len) + \"%\";\r\n            return txt;\r\n\r\n        }\r\n        txt = num.toFixed(len);\r\n        return txt;\r\n    }\r\n    public static DateTimeToString(value: any, format: string): string {\r\n        let date: Date;\r\n        date = ConvertHelper.ToDateTime(value);\r\n        if (date == null)\r\n            return \"\";\r\n        if (format == null)\r\n            return date.toString();\r\n        let txt = date.toString();\r\n        switch (format) {\r\n            case \"yyyyMMdd\":\r\n                txt = date.getFullYear() + \"\" + date.getMonth() + \"\" + date.getDay();\r\n                break;\r\n            case \"MM-dd\":\r\n                txt = date.getMonth() + \"-\" + date.getDay();\r\n                break;\r\n            case \"yyyy-MM-dd\":\r\n                txt = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDay();\r\n                break;\r\n            case \"HH:mm:ss\":\r\n                txt = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n                break;\r\n            case \"HH:mm\":\r\n                txt = date.getHours() + \":\" + date.getMinutes();\r\n                break;\r\n            case \"yyyy-MM-dd HH:mm:ss\":\r\n                txt = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDay();\r\n                txt = txt + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return txt;\r\n    }\r\n    public static GetFromatString(value: any, format: any, formattype: any) {\r\n        switch (formattype) {\r\n            case FormatType.Date:\r\n                return ConvertHelper.DateTimeToString(value, format);\r\n            case FormatType.Num:\r\n                return ConvertHelper.NumberToString(value, format);\r\n            default:\r\n                return value + \"\";\r\n        }\r\n    }\r\n}","\r\nvar Cursors =\r\n{\r\n    auto: \"auto\",\r\n    no_drop: \"no-drop\",\r\n    col_resize: \"col-resize\",\r\n    row_resize: \"row-resize\",\r\n    _default: \"default\",\r\n    not_allowed: \"not-allowed\",\r\n    crosshair: \"crosshair\",\r\n    pointer: \"pointer\",\r\n    move: \"move\",\r\n    e_resize: \"e-resize\",\r\n    ne_resize: \"ne-resize\",\r\n    nw_resize: \"nw-resize\",\r\n    n_resize: \"n-resize\",\r\n    se_resize: \"se-resize\",\r\n    sw_resize: \"sw-resize\",\r\n    s_resize: \"s-resize\",\r\n    w_resize: \"w-resize\",\r\n    wait: \"wait\",\r\n    help: \"help\"\r\n}\r\n\r\n\r\nexport {Cursors}","var DataExcelConsole = {\r\n    log: function (title: string, e: any)\r\n    {\r\n        console.log(title + new Date().toLocaleTimeString());\r\n        console.log(e);\r\n    }\r\n};\r\nexport{DataExcelConsole}","export class Dictionary<K, V> extends Map<K, V>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    add(k:K,v:V)\r\n    {\r\n        this.set(k,v);\r\n    }\r\n    Remove(k: K)\r\n    {\r\n        this.delete(k);\r\n    }\r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Sort()\r\n    {\r\n\r\n    }\r\n}","import { Point, Size } from \"./Point\";\r\n\r\nexport class EventView\r\n{\r\n    offsetPoint: Point;\r\n    Size: Size;\r\n    Canvas: any;\r\n    Dom: any;\r\n    Touches: any; \r\n    NeedRePaint: boolean = false;\r\n    CurrentEvent: any; \r\n    constructor()\r\n    {\r\n        \r\n    }\r\n}\r\n ","var ImageLayout =\r\n{\r\n    None: 0,\r\n    Tile: 1,\r\n    Center: 2,\r\n    Stretch: 3,\r\n    Zoom: 4,\r\n    Clip: 5,\r\n    ZoomClip: 6,\r\n}\r\nexport { ImageLayout }","var MouseButtons = { Left: 0, Right: 2, None: -1 };\r\nvar DataExcelDefaultValue = { dafaultRowHeight: 20, defaultColumnWidth: 72 }\r\nexport {MouseButtons,DataExcelDefaultValue}","enum NextType\r\n{\r\n    Left,\r\n    Up,\r\n    Right,\r\n    Down\r\n}\r\nexport {NextType}","export class Point {\r\n    X: number = 0;\r\n    Y: number = 0;\r\n    constructor(x?: number, y?: number) {\r\n        if (x != null) {\r\n            this.X = x;\r\n        }\r\n        if (y != null) {\r\n            this.Y = y;\r\n        }\r\n    }\r\n}\r\nexport class Size {\r\n    Width: number = 0;\r\n    Height: number = 0;\r\n    constructor(width?: number, height?: number) {\r\n        if (width != null) {\r\n            this.Width = width;\r\n        }\r\n        if (height != null) {\r\n            this.Height = height;\r\n        }\r\n    }\r\n}\r\nexport class Rect {\r\n    get Location() {\r\n        let pt = new Point();\r\n        pt.X = this.X;\r\n        pt.Y = this.Y;\r\n        return pt;\r\n    }\r\n    X: number = 0;\r\n    Y: number = 0;\r\n    Width: number = 0;\r\n    Height: number = 0;\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.X = x;\r\n        this.Y = y;\r\n        this.Width = w;\r\n        this.Height = h;\r\n    }\r\n    Init(x: number, y: number, w: number, h: number) {\r\n        this.X = x;\r\n        this.Y = y;\r\n        this.Width = w;\r\n        this.Height = h;\r\n    }\r\n    Contains(point: Point): boolean {\r\n        if (point == null) {\r\n            return false;\r\n        }\r\n        if (point.X >= this.X && point.X <= (this.X + this.Width)) {\r\n            if (point.Y >= this.Y && point.Y <= (this.Y + this.Height)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    get Bottom() {\r\n        return this.Y + this.Height;\r\n    }\r\n\r\n    get Right() {\r\n        return this.X + this.Width;\r\n    }\r\n    get Left() {\r\n        return this.X;\r\n    }\r\n\r\n    get Top() {\r\n        return this.Y;\r\n    }\r\n}\r\n\r\n\r\nexport class Zoom {\r\n    Type: string = \"\";\r\n    Width: number = 0;\r\n    Height: number = 0;\r\n    constructor(width?: number, height?: number) {\r\n        if (width != null) {\r\n            this.Width = width;\r\n        }\r\n        if (height != null) {\r\n            this.Height = height;\r\n        }\r\n        this.Type = \"\";\r\n    }\r\n}\r\n\r\n","var SelectMode =\r\n{ \r\n    Null: 0,\r\n    RowHeaderSelected: 1,\r\n    RowHeaderSplitSelected: 2,\r\n    FullRowSelected: 3,\r\n    ColumnHeaderSelected: 4,\r\n    ColumnHeaderSplitSelected: 5,\r\n    FullColumnSelected: 6,\r\n    CellAddSelected: 7,\r\n    CellSelected: 8,\r\n    MergeCellSelected: 9,\r\n    ImageCellSelected: 10,\r\n    TextCellSelected: 11,\r\n    MergeCellAddSelected: 12,\r\n    ImageCellSizeRectSelected: 13,\r\n    ExtendCellSizeRectSelected: 14,\r\n    VScrollMoveSelected: 15,\r\n    HScrollMoveSelected: 16,\r\n    VDataTableScrollerMoveSelected: 17,\r\n    ChangedSize: 18,\r\n    Drag: 19,\r\n    CellRangeFunctionCellSelected: 20,\r\n    TouchMove: 21, \r\n};\r\n\r\nexport {SelectMode}\r\n","﻿import { Point, Size } from \"../Base/Point\";\r\n\r\nexport class SizeChangRect  \r\n{\r\n    constructor()\r\n    { \r\n    }\r\n    MouseDownPoint: Point;\r\n    Size: Size;\r\n    GetChangedWidth(newpoint: Point)\r\n    {\r\n        let w = newpoint.X - this.MouseDownPoint.X;\r\n        w = w + this.Size.Width;\r\n        return w;\r\n    }\r\n    GetChangedHeight(newpoint: Point)\r\n    {\r\n        let h = newpoint.Y - this.MouseDownPoint.Y;\r\n        h = h + this.Size.Height;\r\n        return h;\r\n    }\r\n}\r\n \r\n","﻿import { EventView } from \"../Base/EventView\";\r\nimport { IViewEvent } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCell } from \"../main/DataExcelCell\";\r\n\r\n \r\nexport class DataExcelCellEditBase implements IViewEvent\r\n{\r\n    public Cell: DataExcelCell;\r\n    private _Name: string;\r\n    public get Name(): string {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string) {\r\n        this._Name = value;\r\n    }\r\n    constructor()\r\n    {\r\n \r\n    }\r\n    OnDraw(sender:any, g:Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n    InitEdit()\r\n    {\r\n \r\n    }\r\n    EndEdit()\r\n    {\r\n \r\n    }\r\n\r\n    OnMouseDown(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseUp(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender:any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender:any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    OnTouchStart(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    Clone()\r\n    {\r\n\r\n    }\r\n}","﻿import { CellHeaderStyle } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { Point, Rect, Size } from \"../Base/Point\";\r\nimport { SelectMode } from \"../Base/SelectMode\";\r\nimport { HeaderSplit } from \"../Base/Tool\";\r\nimport { SizeChangRect } from \"../Control/SizeChangRect\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCell } from \"../main/DataExcelCell\";\r\nimport { DataExcelCellEditBase } from \"./DataExcelCellEditBase\";\r\n\r\n \r\n\r\nexport class DataExcelCellColumnHeader extends DataExcelCellEditBase\r\n{\r\n    public Cell: DataExcelCell;\r\n    public get Name(): string\r\n    {\r\n        return \"ColumnHeader\";\r\n    }\r\n    public set Name(value: string)\r\n    { \r\n    }\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    OnDraw(sender:any, g: Graphics)\r\n    {\r\n\r\n        let cell = this.Cell;\r\n        let backcolor = CellHeaderStyle.BackColor;\r\n        if (cell.Column.CellSelect)\r\n        {\r\n            backcolor = CellHeaderStyle.SelectBackColor;\r\n        }\r\n        let isprint = false;\r\n        if (!isprint)\r\n        {\r\n            if (cell.Row.Index == 0 && cell.Column.Index == 0)\r\n            {\r\n                var ForwardDiagonal = null;\r\n                g.FillRectangle(backcolor,\r\n                    cell.Left, cell.Top, cell.Width, cell.Height);\r\n            }\r\n            else\r\n            {\r\n                g.FillRectangle(backcolor,\r\n                    cell.Left, cell.Top, cell.Width, cell.Height);\r\n            }\r\n        }\r\n        this.OnDrawText(g);\r\n\r\n        let rect = new Rect(\r\n            this.Cell.Right - HeaderSplit.ColumnHeaderSplit,\r\n            this.Cell.Top, HeaderSplit.ColumnHeaderSplit, this.Cell.Height);\r\n        g.FillRectangleColor(backcolor, rect, Cursors.col_resize, 0.01);\r\n        cell.OnDrawGridLine(this, g);\r\n        return true;\r\n    }\r\n    OnDrawText(g: Graphics)\r\n    {\r\n        let cell = this.Cell;\r\n        let text = cell.Column.Name;\r\n        if (!ConvertHelper.StringIsNullOrEmpty(cell.Column.Caption))\r\n        {\r\n            text = cell.Column.Caption;\r\n        }\r\n        if (text != \"\")\r\n        {\r\n            //if (cell.Grid.ShowCheckBox)\r\n            //{\r\n            //    bool check = cell.Row.Checked;\r\n            //    GraphicsHelper.DrawCheckBox(g.Graphics, bounds, check ? 1 : 0, text, sf, cell.ForeColor, cell.Font);\r\n            //}\r\n            let left = cell.Left + cell.Width / 2;\r\n            let top = cell.Top + cell.Height / 2 - 4;\r\n            //g.DrawText(CellHeaderStyle.Font, CellHeaderStyle.Color, text, left, top, \"center\");\r\n            g.DrawTextRect(CellHeaderStyle.Font, CellHeaderStyle.Color, text,\r\n                cell.Left, cell.Top, cell.Width, cell.Height, CellHeaderStyle.textPos);\r\n        }\r\n    }\r\n    InitEdit()\r\n    {\r\n\r\n    }\r\n    SelectMode: number = SelectMode.Null;\r\n    private sizechangrect: SizeChangRect;\r\n    private donwtime: Date;\r\n    OnMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        let hasin = this.ContainsSplit(this.Cell, pt);\r\n        let result = false;\r\n        if (hasin)\r\n        {\r\n            this.SelectMode = SelectMode.ColumnHeaderSplitSelected;\r\n            this.sizechangrect = new SizeChangRect();\r\n            this.sizechangrect.MouseDownPoint = pt;\r\n            this.sizechangrect.Size = new Size(this.Cell.Width, this.Cell.Height);\r\n            result = true; \r\n        }\r\n        else\r\n        {\r\n            let fullselect = this.Cell.Rect.Contains(pt);\r\n            if (fullselect)\r\n            {\r\n                this.SelectMode = SelectMode.FullColumnSelected;\r\n                result = true;\r\n            }\r\n        }\r\n        if (result)\r\n        {\r\n            ve.CurrentEvent = this;\r\n        }\r\n        return result; \r\n    }\r\n    OnMouseUp(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        this.SelectMode = SelectMode.Null;\r\n        ve.CurrentEvent = null;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e: MouseEvent, ve:EventView): boolean\r\n    {\r\n        let result = false;\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        if (this.SelectMode == SelectMode.ColumnHeaderSplitSelected)\r\n        {\r\n            let w = this.sizechangrect.GetChangedWidth(pt);\r\n            this.Cell.Column.Width = w;\r\n            this.Cell.Grid.Refresh();\r\n            this.Cell.Grid.RePaint();\r\n            result = true;\r\n        }\r\n        else\r\n        {\r\n            let hasin = this.ContainsSplit(this.Cell, pt);\r\n            if (hasin)\r\n            {\r\n                this.Cell.Grid.BeginSetCursor(Cursors.col_resize);\r\n                result = true\r\n            }\r\n        }\r\n        if (result)\r\n        {\r\n            ve.CurrentEvent = this;\r\n        }\r\n        return result;\r\n    }\r\n    ContainsSplit(cell: DataExcelCell, pt: Point): boolean\r\n    {\r\n        let bolIn = false; \r\n        let rect = new Rect(\r\n            cell.Right - HeaderSplit.ColumnHeaderSplit,\r\n            cell.Top, HeaderSplit.ColumnHeaderSplit, cell.Height);\r\n        bolIn = rect.Contains(pt);\r\n        return bolIn;\r\n    }\r\n\r\n    OnTouchStart(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        let result = false;\r\n\r\n        if (e.touches.length == 1)\r\n        { \r\n            this.donwtime = new Date();\r\n            let point = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.SelectMode = SelectMode.ColumnHeaderSplitSelected;\r\n            this.sizechangrect = new SizeChangRect();\r\n            this.sizechangrect.MouseDownPoint = point;\r\n            this.sizechangrect.Size = new Size(this.Cell.Width, this.Cell.Height);\r\n            result = true;\r\n            ve.CurrentEvent = this; \r\n        }\r\n\r\n        return result;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        let result = false;\r\n         \r\n        if (this.SelectMode == SelectMode.ColumnHeaderSplitSelected)\r\n        {\r\n            let touche = e.touches[0];\r\n            let time = new Date();\r\n            let sec = (time.getTime() - this.donwtime.getTime()) / 1000;\r\n            let point = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            let d = Math.abs(this.sizechangrect.MouseDownPoint.X - point.X);\r\n            let w = this.sizechangrect.GetChangedWidth(point);\r\n            if ((d / sec) < 60)\r\n            {\r\n                this.Cell.Column.Width = w;\r\n                this.Cell.Grid.Refresh();\r\n                this.Cell.Grid.RePaint();\r\n                result = true;\r\n                ve.NeedRePaint = true; \r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        this.SelectMode = SelectMode.Null; \r\n        return false;\r\n    }\r\n\r\n    Clone()\r\n    {\r\n        return new DataExcelCellColumnHeader();\r\n    }\r\n}","﻿import { CellHeaderStyle } from \"../Base/CellHeaderStyle\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { Point, Rect, Size } from \"../Base/Point\";\r\nimport { SelectMode } from \"../Base/SelectMode\";\r\nimport { HeaderSplit } from \"../Base/Tool\";\r\nimport { SizeChangRect } from \"../Control/SizeChangRect\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCell } from \"../main/DataExcelCell\";\r\nimport { DataExcelCellEditBase } from \"./DataExcelCellEditBase\";\r\n\r\nexport class DataExcelCellRowHeader extends DataExcelCellEditBase {\r\n    public Cell: DataExcelCell;\r\n    public get Name(): string {\r\n        return \"RowHeader\";\r\n    }\r\n    public set Name(value: string) {\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    OnDraw(sender: any, g: Graphics) {\r\n        let cell = this.Cell;\r\n        let backcolor = CellHeaderStyle.BackColor;\r\n\r\n        if (cell.Row.CellSelect) {\r\n            backcolor = CellHeaderStyle.SelectBackColor;\r\n        }\r\n        var isprint = false;\r\n        if (!isprint) {\r\n            if (cell.Row.Index == 0 && cell.Column.Index == 0) {\r\n                var ForwardDiagonal = null;\r\n                //g.FillRectangleLinearGradient(g.Graphics, backcolor,\r\n                //    cell.Left, cell.Top, cell.Width, cell.Height, ForwardDiagonal);\r\n                g.FillRectangle(backcolor,\r\n                    cell.Left, cell.Top, cell.Width, cell.Height);\r\n            }\r\n            else {\r\n                g.FillRectangle(backcolor,\r\n                    cell.Left, cell.Top, cell.Width, cell.Height);\r\n                //g.FillRectangleLinearGradient(backcolor,\r\n                //    cell.Left, cell.Top, cell.Width, cell.Height, ForwardDiagonal);\r\n            }\r\n        }\r\n        this.OnDrawText(g);\r\n        let rect = new Rect(\r\n            cell.Left, cell.Bottom - HeaderSplit.RowHeaderSplit,\r\n            cell.Width, HeaderSplit.RowHeaderSplit);\r\n        g.FillRectangleColor(backcolor, rect, Cursors.row_resize, 0.01);\r\n        cell.OnDrawGridLine(this, g);\r\n        return true;\r\n    }\r\n    OnDrawText(g: Graphics) {\r\n        var cell = this.Cell;\r\n        var text = cell.Row.Name;\r\n        if (text != \"\") {\r\n            g.DrawTextRect(CellHeaderStyle.Font, CellHeaderStyle.Color, text,\r\n                cell.Left, cell.Top, cell.Width, cell.Height, CellHeaderStyle.textPos);\r\n        }\r\n    }\r\n    InitEdit() {\r\n\r\n    }\r\n    SelectMode: number = SelectMode.Null;\r\n    private sizechangrect: SizeChangRect;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        let hasin = this.ContainsSplit(this.Cell, pt);\r\n        let result = false;\r\n        if (hasin) {\r\n            this.SelectMode = SelectMode.RowHeaderSplitSelected;\r\n            this.sizechangrect = new SizeChangRect();\r\n            this.sizechangrect.MouseDownPoint = pt;\r\n            this.sizechangrect.Size = new Size(this.Cell.Width, this.Cell.Height);\r\n            result = true;\r\n        }\r\n        else {\r\n            let fullselect = this.Cell.Rect.Contains(pt);\r\n            if (fullselect) {\r\n                this.SelectMode = SelectMode.FullColumnSelected;\r\n                result = true;\r\n            }\r\n        }\r\n        if (result) {\r\n            ve.CurrentEvent = this;\r\n        }\r\n        return result;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        this.SelectMode = SelectMode.Null;\r\n        ve.CurrentEvent = null;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        let result = false;\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        if (this.SelectMode == SelectMode.RowHeaderSplitSelected) {\r\n            let h = this.sizechangrect.GetChangedHeight(pt);\r\n            this.Cell.Row.Height = h;\r\n            this.Cell.Grid.Refresh();\r\n            this.Cell.Grid.RePaint();\r\n            result = true;\r\n        }\r\n        else {\r\n            let hasin = this.ContainsSplit(this.Cell, pt);\r\n            if (hasin) {\r\n                this.Cell.Grid.BeginSetCursor(Cursors.row_resize);\r\n                result = true\r\n            }\r\n        }\r\n        if (result) {\r\n            ve.CurrentEvent = this;\r\n        }\r\n        return result;\r\n    }\r\n    ContainsSplit(cell: DataExcelCell, pt: Point): boolean {\r\n        let bolIn = false;\r\n        let rect = new Rect(\r\n            cell.Left, cell.Bottom - HeaderSplit.RowHeaderSplit,\r\n            cell.Width, HeaderSplit.RowHeaderSplit);\r\n        bolIn = rect.Contains(pt);\r\n\r\n        return bolIn;\r\n    }\r\n\r\n    private donwtime: Date;\r\n\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        let result = false;\r\n\r\n        if (e.touches.length == 1) {\r\n            this.donwtime = new Date();\r\n            let point = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.SelectMode = SelectMode.RowHeaderSplitSelected;\r\n            this.sizechangrect = new SizeChangRect();\r\n            this.sizechangrect.MouseDownPoint = point;\r\n            this.sizechangrect.Size = new Size(this.Cell.Width, this.Cell.Height);\r\n            result = true;\r\n            ve.CurrentEvent = this;\r\n        }\r\n\r\n        return result;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        let result = false;\r\n\r\n        if (this.SelectMode == SelectMode.RowHeaderSplitSelected) {\r\n            let touche = e.touches[0];\r\n            let time = new Date();\r\n            let sec = (time.getTime() - this.donwtime.getTime()) / 1000;\r\n            let point = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            let d = Math.abs(this.sizechangrect.MouseDownPoint.Y - point.Y);\r\n\r\n            if ((d / sec) < 60) {\r\n                let h = this.sizechangrect.GetChangedHeight(point);\r\n                this.Cell.Row.Height = h;\r\n                this.Cell.Grid.Refresh();\r\n                this.Cell.Grid.RePaint();\r\n                result = true;\r\n                ve.NeedRePaint = true;\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        this.SelectMode = SelectMode.Null;\r\n        return false;\r\n    }\r\n\r\n    Clone() {\r\n        return new DataExcelCellRowHeader();\r\n    }\r\n}\r\n\r\n","import { DataExcelCellColumnHeader } from \"../Edit/DataExcelCellEditColumnHeader\";\r\nimport { DataExcelCellRowHeader } from \"../Edit/DataExcelCellEditRowHeader\";\r\nimport { DataExcelCell } from \"../main/DataExcelCell\";\r\nimport { DataExcelConsole } from \"./DataExcelConsole\";\r\n\r\nvar Tool =\r\n{\r\n    GetColumnHeaderByColumnIndex: (index: number) =>\r\n    {\r\n        let columnheader = \"\";\r\n        while (index > 0)\r\n        {\r\n            let m = index % 26;\r\n            if (m == 0)\r\n            {\r\n                m = 26;\r\n            }\r\n            columnheader = String.fromCharCode(m + 64) + columnheader;\r\n            index = (index - m) / 26;\r\n        }\r\n        return columnheader;\r\n    }\r\n}\r\n \r\nvar DefaultEdit = {\r\n    GetDefauleEdit: function (cell: DataExcelCell) \r\n    {\r\n        if (cell.Column == null)\r\n        {\r\n            DataExcelConsole.log(\"GetDefauleEdit\", \"column is null\");\r\n            return null;\r\n        }\r\n        if (cell.Row.Index == 0 && cell.Column.Index > 0)\r\n        {\r\n            let edit = new DataExcelCellColumnHeader();\r\n            edit.Cell = cell;\r\n            return edit;\r\n        }\r\n        if (cell.Column.Index == 0 && cell.Row.Index > 0)\r\n        {\r\n            let edit = new DataExcelCellRowHeader();\r\n            edit.Cell = cell;\r\n            return edit;\r\n        }\r\n        if (cell.Row.Index == 0 && cell.Column.Index == 0)\r\n        {\r\n            let edit = new DataExcelCellColumnHeader();\r\n            edit.Cell = cell;\r\n            return edit;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nvar HeaderSplit = { ColumnHeaderSplit: 5, RowHeaderSplit: 5 }\r\nexport {Tool,DefaultEdit,HeaderSplit}","﻿import { List } from \"../Base/ArrayList\";\r\nimport { Dictionary } from \"../Base/Dictionary\";\r\n\r\nexport class EventMap\r\n{\r\n    public Dics: Dictionary<string, List<any>>;\r\n    constructor()\r\n    { \r\n        this.Dics = new Dictionary<string, List<any>>();\r\n\r\n    } \r\n}\r\nexport class Observer\r\n{\r\n    private eventMap: EventMap;\r\n    constructor()\r\n    {\r\n        this.eventMap = new EventMap();\r\n    }\r\n \r\n    on(event: string, fn:any)\r\n    { \r\n        let funs = this.eventMap.Dics.get(event) as List<any>;\r\n        if (funs == null)\r\n        {\r\n            funs = new List<any>();\r\n            this.eventMap.Dics.add(event, funs);\r\n        }\r\n        funs.Add(fn)\r\n    }\r\n \r\n    emit(event: string, ...args: any[])\r\n    {\r\n        let funs = this.eventMap.Dics.get(event) as List<any>; \r\n        if (funs == null)\r\n            return;\r\n        funs.forEach(fn =>\r\n        {\r\n            try\r\n            {\r\n                fn.apply(null, args)\r\n            } catch (e)\r\n            {\r\n\r\n            }\r\n        });\r\n        \r\n    }\r\n \r\n    off(event: string, fn:any)\r\n    {\r\n        let funs = this.eventMap.Dics.get(event) as List<any>;\r\n        if (funs == null)\r\n            return;\r\n        funs.Remove(fn);\r\n    } \r\n}\r\n"," \r\n var Events = {\r\n    FirstDisplayRowChanged: \"FirstDisplayRowChanged\", \r\n    FirstDisplayColumnChanged: \"FirstDisplayCclumnChanged\",\r\n    CellInitEdit: \"CellInitEdit\",\r\n    FocusedCellChanged: \"FocusedCellChanged\",\r\n    SelectChanged: \"SelectChanged\",\r\n    EndEdit:\"EndEdit\",\r\n    CellValueChanged: \"CellValueChanged\",\r\n}; \r\nexport {Events}","﻿import { Rect } from \"../Base/Point\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\n\r\nvar HScrollerSkin =\r\n{\r\n    DrawArea(g: Graphics, rect:any)\r\n    {\r\n        g.FillRectangleColor(\"GhostWhite\", rect);\r\n    },\r\n\r\n    DrawThumdBack(g:Graphics, rect:any, MoveSelected:any)\r\n    {\r\n        g.FillRectangleColor(\"white\", rect);\r\n    },\r\n\r\n    DrawThumd(g:Graphics, rect: Rect, Thickness:any)\r\n    {\r\n        g.FillRectangleColor(\"Silver\", rect);\r\n \r\n    },\r\n\r\n    DrawUpArrow(g: Graphics, rect: Rect)\r\n    { \r\n        g.FillRectangleColor(\"Gainsboro\", rect);\r\n        let x1 = rect.X;\r\n        let y1 = rect.Y;\r\n        \r\n        let shape = g.GetPolyline({\r\n            scale: [1, 1],\r\n            style: {\r\n                opacity: 1, \r\n                fill:\"gray\",\r\n                stroke: \"gray\",\r\n            },\r\n            shape: {\r\n                //points: [[x1 + 4, y1 + 22], [x1 + 8, y1 + 18], [x1 + 12, y1 + 22], [x1 + 4, y1 + 22]]\r\n                points: [[x1 + 22, y1 + 4], [x1 + 18, y1 + 8], [x1 + 22, y1 + 12], [x1 + 22, y1 + 4]]\r\n            },\r\n        });\r\n        g.ZR.add(shape); \r\n    },\r\n\r\n    DrawDownArrow(g:Graphics, rect: Rect)\r\n    {  \r\n        g.FillRectangleColor(\"Gainsboro\", rect);\r\n        let x1 = rect.X;\r\n        let y1 = rect.Y;\r\n\r\n        let shape =  g.GetPolyline({\r\n            scale: [1, 1],\r\n            style: {\r\n                opacity: 1,\r\n                fill: \"gray\",\r\n                stroke: \"gray\",\r\n            },\r\n            shape: {\r\n                //points: [[x1 + 4, y1 + 8], [x1 + 8, y1 + 12], [x1 + 12, y1 + 8], [x1 + 4, y1 + 8]]\r\n                points: [[x1 + 8, y1 + 4], [x1 + 12, y1 + 8], [x1 + 8, y1 + 12], [x1 + 8, y1 + 4]]\r\n            },\r\n        });\r\n        g.ZR.add(shape); \r\n    }\r\n}\r\nexport {HScrollerSkin}","﻿import { Rect } from \"../Base/Point\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\n\r\nvar VScrollerSkin =\r\n{\r\n    DrawArea(g: Graphics, rect:any)\r\n    {\r\n        g.FillRectangleColor(\"GhostWhite\", rect);\r\n    },\r\n\r\n    DrawThumdBack(g:Graphics, rect:any, MoveSelected:any)\r\n    {\r\n        g.FillRectangleColor(\"white\", rect);\r\n    },\r\n\r\n    DrawThumd(g:Graphics, rect: Rect, Thickness:any)\r\n    {\r\n        g.FillRectangleColor(\"Silver\", rect);\r\n \r\n    },\r\n\r\n    DrawUpArrow(g: Graphics, rect: Rect)\r\n    { \r\n        g.FillRectangleColor(\"Gainsboro\", rect);\r\n        let x1 = rect.X;\r\n        let y1 = rect.Y;\r\n        \r\n        let shape = g.GetPolyline({\r\n            scale: [1, 1],\r\n            style: {\r\n                opacity: 1, \r\n                fill:\"gray\",\r\n                stroke: \"gray\",\r\n            },\r\n            shape: {\r\n                points: [[x1 + 4, y1 + 22], [x1 + 8, y1 + 18], [x1 + 12, y1 + 22], [x1 + 4, y1 + 22]]\r\n            },\r\n        });\r\n        g.ZR.add(shape); \r\n    },\r\n\r\n    DrawDownArrow(g:Graphics, rect: Rect)\r\n    {  \r\n        g.FillRectangleColor(\"Gainsboro\", rect);\r\n        let x1 = rect.X;\r\n        let y1 = rect.Y;\r\n\r\n        let shape = g.GetPolyline({\r\n            scale: [1, 1],\r\n            style: {\r\n                opacity: 1,\r\n                fill: \"gray\",\r\n                stroke: \"gray\",\r\n            },\r\n            shape: {\r\n                points: [[x1 + 4, y1 + 8], [x1 + 8, y1 + 12], [x1 + 12, y1 + 8], [x1 + 4, y1 + 8]]\r\n            },\r\n        });\r\n        g.ZR.add(shape); \r\n    }\r\n}\r\n\r\nexport {VScrollerSkin}","﻿import { DataExcel } from \"../main/DataExcel\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { Rect, Size, Point } from \"../Base/Point\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { HScrollerSkin } from \"../Plus/HScrollerSkin\";\r\nimport { VScrollerSkin } from \"../Plus/VScrollerSkin\";\r\nimport { Events } from \"./Events\";\r\nimport { IViewEvent } from \"./IViewEvent\";\r\n\r\nexport class ScrollerView  \r\n{ \r\n    private _min = 1;\r\n    private _max = 100;\r\n    private _thickness = 10;\r\n\r\n    protected _height = 0;\r\n    public get Height()\r\n    {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value)\r\n    {\r\n        this._height = value;\r\n    }\r\n \r\n    public get Right()\r\n    {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom()\r\n    {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n\r\n    public get Left()\r\n    {\r\n\r\n        return this._left;\r\n    }\r\n\r\n    public set Left(value)\r\n    {\r\n        this._left = value;\r\n    }\r\n \r\n    protected _top = 0;\r\n\r\n    public get Top()\r\n    {\r\n        return this._top;\r\n    }\r\n    public set Top(value)\r\n    {\r\n        this._top = value;\r\n    }\r\n\r\n\r\n    protected _width = 0;\r\n\r\n    public get Width()\r\n    {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value)\r\n    {\r\n        this._width = value;\r\n    }\r\n\r\n\r\n    public get Thickness(): number\r\n    {\r\n        return this._thickness;\r\n    }\r\n    public set Thickness(value: number)\r\n    {\r\n        this._thickness = value;\r\n    }\r\n    private _scrolltop = 0;\r\n\r\n    public get ScrollTop(): number\r\n    {\r\n        return this._scrolltop;\r\n    }\r\n    public set ScrollTop(value: number)\r\n    {\r\n        this._scrolltop = value;\r\n    }\r\n\r\n    private _Header: number;\r\n    public get Header(): number {\r\n        return this._Header;\r\n    }\r\n    public set Header(value: number) {\r\n        this._Header = value;\r\n    }\r\n\r\n    public get Max()\r\n    {\r\n        return this._max;\r\n    }\r\n    public set Max(value)\r\n    {\r\n        this._max = value;\r\n        if (this._max < 1)\r\n        {\r\n            this._max = 0;\r\n        }\r\n        this.RefreshScrollThumd();\r\n\r\n    }\r\n\r\n    public get Min()\r\n    {\r\n        return this._min;\r\n    }\r\n    public set Min(value)\r\n    {\r\n        this._min = value;\r\n    }\r\n\r\n    private _value = 1;\r\n\r\n    public get Value()\r\n    {\r\n        return this._value;\r\n    }\r\n    public set Value(value)\r\n    {\r\n        if (value == this.Value)\r\n        {\r\n            return;\r\n        }\r\n \r\n        if (value < this.Min)\r\n        {\r\n            value = this.Min;\r\n        }\r\n\r\n        this._value = value;\r\n        this.OnValueChanged(this._value);\r\n        this.RefreshScrollThumd(); \r\n    }\r\n\r\n    private _smallchange = 1;\r\n\r\n    public get SmallChange()\r\n    {\r\n        return this._smallchange;\r\n    }\r\n    public set SmallChange(value)\r\n    {\r\n        this._smallchange = value;\r\n    }\r\n\r\n    private _largechange = 3;\r\n    public get LargeChange()\r\n    {\r\n        return this._largechange;\r\n    }\r\n    public set LargeChange(value)\r\n    {\r\n        this._largechange = value;\r\n        this.RefreshScrollThumd(); \r\n    }\r\n\r\n    public get Rect()\r\n    {\r\n        let left = this.Left;\r\n        let top = this.Top;\r\n        let width = this.Width;\r\n        let height = this.Height;\r\n        return new Rect(left, top, width, height);\r\n\r\n    }\r\n\r\n    private _visible = true;\r\n    public get Visible()\r\n    {\r\n        return this._visible;\r\n    }\r\n    public set Visible(value)\r\n    {\r\n        this._visible = value;\r\n    }\r\n    private _MoveSelected = false;\r\n    public get MoveSelected()\r\n    {\r\n        return this._MoveSelected;\r\n    }\r\n    public set MoveSelected(value)\r\n    {\r\n        this._MoveSelected = value;\r\n    }\r\n    public get Count()\r\n    {\r\n        return this.Max - this.Min;\r\n\r\n    }\r\n    public ProvPage()\r\n    {\r\n        let value = this._value - this.LargeChange;\r\n        this.Value = value < this._min ? this._min : value;\r\n    }\r\n    public Prov()\r\n    {\r\n        let value = this._value - this._smallchange;\r\n        this.Value = value < this._min ? this._min : value;\r\n    }\r\n    public NextPage()\r\n    {\r\n        let value = this._value + this.LargeChange;\r\n        this.Value = value > this._max ? this._max : value;\r\n    }\r\n    public Next()\r\n    {\r\n        let value = this._value + this._smallchange;\r\n        this.Value = value > this._max ? this._max : value;\r\n    }\r\n    public Home()\r\n    {\r\n        this.Value = this._min;\r\n    }\r\n    public End()\r\n    {\r\n        this.Value = this._max;\r\n    }\r\n    public Clear()\r\n    {\r\n        this._min = 0;\r\n        this._max = 0;\r\n        this._smallchange = 1;\r\n        this._value = 0;\r\n        this._thickness = 10;\r\n        this._scrolltop = 0;\r\n    }\r\n    public OnDraw(g:Graphics)\r\n    {\r\n        return false;\r\n    }\r\n    public RefreshScrollThumd()\r\n    {\r\n        let count = this.Count;\r\n        if (count < 1)\r\n        {\r\n            count = 1;\r\n        }\r\n        let height = this.BodyArea.Height;\r\n        let large = this.LargeChange;\r\n        let thickness = 1 * height * (1 / (count + 1) * 1);\r\n        if (thickness < 36) \r\n        {\r\n            thickness = 36;\r\n        }\r\n        this.Thickness = thickness;\r\n        let smallwidth = 1 * (height - thickness) / count;\r\n\r\n\r\n        let top = ((this.Value - this.Min) * smallwidth);\r\n        if ((top + thickness) > height)\r\n        {\r\n            top = height - thickness;\r\n        }\r\n        this.ScrollTop = top;\r\n    }\r\n\r\n\r\n    private downpoint: any;\r\n    private downsize: any;\r\n\r\n    public DoOnMouseMove(pt:any)\r\n    {\r\n\r\n        if (this.MoveSelected)\r\n        {\r\n            let pd = this.GetMovePoint(pt, this.downsize);\r\n            this.PointToIndex(pd);\r\n            this.RefreshScrollThumd();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public DoOnMouseClick(pt:any)\r\n    {\r\n        if (this.MoveSelected)\r\n            return false;\r\n        if (this.UpArrowArea.Contains(pt))\r\n        {\r\n            this.Prov();\r\n            //if (this.UpArrowAreaClick != null)\r\n            //{\r\n            //    this.UpArrowAreaClick(this, pt);\r\n            //}\r\n            return true;\r\n        }\r\n        if (this.DownArrowArea.Contains(pt))\r\n        {\r\n            this.Next();\r\n            //if (this.DownArrowAreaClick != null)\r\n            //{\r\n            //    this.DownArrowAreaClick(this, pt);\r\n            //}\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    public DoOnMouseDown(pt:any)\r\n    {\r\n\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            if (this.ThumdArea.Contains(pt))\r\n            {\r\n                this.downpoint = pt;\r\n                let pth = this.ThumdArea.Location;\r\n                this.downsize = new Size(pt.X - pth.X, pt.Y - pth.Y);\r\n                this.MoveSelected = true;\r\n                //if (this.ThumdAreaClick != null)\r\n                //{\r\n                //    this.ThumdAreaClick(this, pt);\r\n                //}\r\n                return true;\r\n            }\r\n            if (this.BodyArea.Contains(pt))\r\n            {\r\n                this.PointToIndex(pt);\r\n            }\r\n            if (this.DownArrowArea.Contains(pt))\r\n            {\r\n                this.Next();\r\n            }\r\n            if (this.UpArrowArea.Contains(pt))\r\n            {\r\n                this.Prov();\r\n            }\r\n            return true;\r\n\r\n        }\r\n        return false;\r\n    }\r\n    public DoOnMouseUp()\r\n    {\r\n        this.MoveSelected = false;\r\n        return false;\r\n    }\r\n \r\n    public OnValueChanged(value:any)\r\n    {\r\n        //if (ValueChanged != null)\r\n        //{\r\n        //    ValueChanged(this, value);\r\n        //}\r\n    }\r\n\r\n\r\n    public PointToIndex(pt:any)\r\n    {\r\n        let count = this.Count;\r\n        let height = this.BodyArea.Height;\r\n        let large = this.LargeChange;\r\n        let thickness = (1 * height * large / count);\r\n        let smallwidth = 1 * (height - thickness) / count;\r\n        let pheight = pt.Y - this.Top - this.Header;\r\n        let topcount = pheight / smallwidth;\r\n        let i = topcount;\r\n        this.Value = this.Min + i;\r\n    }\r\n    public GetMovePoint(pt:any, sf:any)\r\n    {\r\n        let pd = new Point(pt.X, pt.Y - sf.Height);\r\n        return pd;\r\n    }\r\n\r\n    public get BodyArea()\r\n    {\r\n        return new Rect(this.Left, this.Top + this.Header, this.Width, this.Height - this.Header - this.Header);\r\n    }\r\n    public get UpArrowArea()\r\n    {\r\n        let rects = this.Rect;\r\n        return new Rect(rects.X, rects.Y, rects.Width, this.Header);\r\n\r\n    }\r\n    public get DownArrowArea()\r\n    {\r\n        let rects = this.Rect;\r\n        return new Rect(rects.X, rects.Bottom - this.Header, rects.Width, this.Header);\r\n\r\n    }\r\n    public get ThumdArea()\r\n    {\r\n        let rects = this.Rect;\r\n        return new Rect(rects.X, rects.Y + this.Header + this.ScrollTop, this.Rect.Width - 2, this.Thickness);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class VScrollerView extends ScrollerView\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    public get Width()\r\n    {\r\n        if (this._width < 18)\r\n        { return 18; }\r\n        return this._width;\r\n    }\r\n    set Width(value)\r\n    {\r\n        this._width = value;\r\n    }\r\n\r\n    private DrawArrow(g:Graphics)\r\n    {\r\n        this.DrawUpArrow(g);\r\n        this.DrawDownArrow(g);\r\n    }\r\n    private DrawArea(g:Graphics)\r\n    {\r\n        let rect = this.Rect;\r\n        VScrollerSkin.DrawArea(g, rect);\r\n    }\r\n    private DrawBorder(g:Graphics)\r\n    {\r\n        return;\r\n\r\n    }\r\n    private DrawThumdBack(g:Graphics)\r\n    {\r\n        if (this.Thickness <= 0)\r\n            return;\r\n        VScrollerSkin.DrawThumdBack(g, this.ThumdArea, this.MoveSelected);\r\n\r\n    }\r\n    private DrawThumd(g:Graphics)\r\n    {\r\n        VScrollerSkin.DrawThumd(g, this.ThumdArea, this.Thickness);\r\n    }\r\n    private DrawUpArrow(g:Graphics)\r\n    {\r\n        let rects = this.Rect;\r\n        let rectt = new Rect(rects.X, rects.Y, rects.Width, this.Header);\r\n\r\n        VScrollerSkin.DrawUpArrow(g, rectt);\r\n    }\r\n    private DrawDownArrow(g:Graphics)\r\n    {\r\n        let rects = this.Rect;\r\n        let rectt = new Rect(rects.X, rects.Height - this.Header, rects.Width, this.Header);\r\n        VScrollerSkin.DrawDownArrow(g, rectt);\r\n    }\r\n    public OnDraw(g:Graphics)\r\n    {\r\n        if (this.Visible)\r\n        {\r\n            this.DrawArea(g);\r\n            this.DrawThumdBack(g);\r\n            this.DrawArrow(g);\r\n            this.DrawThumd(g);\r\n            this.DrawBorder(g);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class DataExcelViewVScroll extends VScrollerView  implements IViewEvent\r\n{\r\n    public constructor(grid: DataExcel)\r\n    {\r\n        super();\r\n        this._Grid = grid;\r\n        grid.On(Events.FirstDisplayRowChanged, this.Grid_FirstDisplayRowChanged);\r\n    }\r\n\r\n    Grid_FirstDisplayRowChanged(args:any)\r\n    {\r\n        try\r\n        {\r\n            let sender = args[0];\r\n            let target = args[1];\r\n            let index  = args[2];\r\n            if (index > target.Max)\r\n            {\r\n                target.Max = index;\r\n            }\r\n            target.Value = index;\r\n            target.RefreshScrollThumd();\r\n        }\r\n        catch (ex)\r\n        {\r\n            DataExcelConsole.log(\"Grid_FirstDisplayRowChanged\", ex);\r\n        }\r\n    }\r\n    private _Grid: DataExcel;\r\n    public get Grid(): DataExcel\r\n    {\r\n        return this._Grid;\r\n    }\r\n     \r\n    public get Header(): number\r\n    {\r\n        return this.Grid.ContentTop;\r\n    }\r\n \r\n    public get Height(): number\r\n    {\r\n        return this.Grid.Height - this.Width - this.Top;\r\n    }\r\n\r\n    public get Left(): number\r\n    {\r\n        return this.Grid.Width - this.Width;\r\n    }\r\n\r\n    public get Rect()\r\n    {\r\n        return new Rect(this.Left, this.Top, this.Width, this.Height);\r\n    }\r\n\r\n    public get Top(): number\r\n    {\r\n        return 0;\r\n    }\r\n    public lck: boolean = false;\r\n    //public OnValueChanged(value: number)\r\n    //{\r\n    //    if (!this.Visible)\r\n    //        return;\r\n    //    try\r\n    //    {\r\n    //        if (this.lck)\r\n    //            return;\r\n    //        this.lck = true;\r\n    //        let position = value;\r\n    //        this.Grid.FirstDisplayedRowIndex = (position);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"OnValueChanged\", ex);\r\n\r\n    //    }\r\n    //    finally\r\n    //    {\r\n    //        this.lck = false;\r\n    //    }\r\n    //}\r\n     \r\n\r\n    public OnMouseDown(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        //let pt = point;// this.Grid.PointControlToView(e.Location);\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            return this.DoOnMouseDown(pt);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public OnMouseUp(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n        this.MoveSelected = false;\r\n        return this.DoOnMouseUp();\r\n    }\r\n\r\n    public OnMouseMove(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n        //let pt = this.Grid.PointControlToView(e.Location);\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        //if (this.Rect.Contains(pt) && this.MoveSelected)\r\n        if (this.MoveSelected)\r\n        { \r\n            let res = this.DoOnMouseMove(pt);\r\n            if (res)\r\n            {\r\n                this.Grid.FirstDisplayedRowIndex = Math.round(this.Value);\r\n                this.Grid.Refresh();\r\n                this.Grid.RePaint();\r\n            }\r\n            return res;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public OnMouseClick(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n        let pt = this.Grid.PointControlToView(ve.offsetPoint);\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            return this.DoOnMouseClick(pt);\r\n        }\r\n        return false;\r\n    }\r\n    OnTouchStart(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    //OnMouseDown(sender, e, ve): boolean\r\n    //OnMouseUp(sender, e, ve): boolean\r\n    //OnMouseMove(sender, e, ve): boolean\r\n    OnMouseDoubleClick(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        if (!this.Visible)\r\n            return false; \r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnKeyPress(sender:any, e: KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender:any, e: KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    public Next()\r\n    {\r\n        let value = this.Value + this.SmallChange;\r\n        this.Value = value;// value > this.Max ? this.Max : value;\r\n    }\r\n}\r\n\r\nexport class HScrollerView extends ScrollerView\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    public get Height()\r\n    {\r\n        if (this._height < 18)\r\n        { return 18; }\r\n        return this._height;\r\n    }\r\n    set Height(value)\r\n    {\r\n        this._height = value;\r\n    }\r\n\r\n    private DrawArrow(g:Graphics)\r\n    {\r\n        this.DrawUpArrow(g);\r\n        this.DrawDownArrow(g);\r\n    }\r\n    private DrawArea(g:Graphics)\r\n    {\r\n        let rect = this.Rect;\r\n        HScrollerSkin.DrawArea(g, rect);\r\n    }\r\n    private DrawBorder(g:Graphics)\r\n    {\r\n        return;\r\n\r\n    }\r\n    private DrawThumdBack(g:Graphics)\r\n    {\r\n        if (this.Thickness <= 0)\r\n            return;\r\n        HScrollerSkin.DrawThumdBack(g, this.ThumdArea, this.MoveSelected);\r\n\r\n    }\r\n    private DrawThumd(g:Graphics)\r\n    {\r\n        HScrollerSkin.DrawThumd(g, this.ThumdArea, this.Thickness);\r\n    }\r\n    private DrawUpArrow(g:Graphics)\r\n    {\r\n        let rect = this.UpArrowArea; \r\n\r\n        HScrollerSkin.DrawUpArrow(g, rect);\r\n    }\r\n    private DrawDownArrow(g:Graphics)\r\n    {\r\n        let rect = this.DownArrowArea; \r\n        HScrollerSkin.DrawDownArrow(g, rect);\r\n    }\r\n    public OnDraw(g:Graphics)\r\n    {\r\n        if (this.Visible)\r\n        {\r\n            this.DrawArea(g);\r\n            this.DrawThumdBack(g);\r\n            this.DrawArrow(g);\r\n            this.DrawThumd(g);\r\n            this.DrawBorder(g);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public RefreshScrollThumd()\r\n    {\r\n        let count = this.Count;\r\n        if (count < 1)\r\n        {\r\n            count = 1;\r\n        }\r\n        let width = this.BodyArea.Width;\r\n        let large = this.LargeChange;\r\n        let thickness = 1 * width * (1 / (count + 1) * 1);\r\n        if (thickness < 36) \r\n        {\r\n            thickness = 36;\r\n        }\r\n        this.Thickness = thickness;\r\n        let smallwidth = 1 * (width - thickness) / count;\r\n\r\n\r\n        let top = ((this.Value - this.Min) * smallwidth);\r\n        if ((top + thickness) > width)\r\n        {\r\n            top = width - thickness;\r\n        }\r\n        this.ScrollTop = top;\r\n    }\r\n    public PointToIndex(pt: Point)\r\n    {\r\n        let count = this.Count;\r\n        let width = this.BodyArea.Width;\r\n        let large = this.LargeChange;\r\n        let thickness = (1 * width * large / count);\r\n        let smallwidth = 1 * (width - thickness) / count;\r\n        let pheight = pt.X - this.Left - this.Header;\r\n        let topcount = pheight / smallwidth;\r\n        let i = topcount;\r\n        this.Value = this.Min + i;\r\n    }\r\n    public GetMovePoint(pt:any, sf: Size)\r\n    {\r\n        let pd = new Point(pt.X - sf.Width, pt.Y );\r\n        return pd;\r\n    }\r\n\r\n    public get BodyArea()\r\n    {\r\n        return new Rect(this.Left + this.Header, this.Top, this.Width - this.Header - this.Header, this.Height);\r\n    }\r\n    public get UpArrowArea()\r\n    {\r\n        let rects = this.Rect;\r\n        return new Rect(rects.X, rects.Y, this.Header, rects.Height);\r\n\r\n    }\r\n    public get DownArrowArea()\r\n    {\r\n        let rects = this.Rect;\r\n        return new Rect(rects.Right - this.Header, rects.Y , this.Header, rects.Height);\r\n\r\n    }\r\n    public get ThumdArea()\r\n    {\r\n        let rects = this.Rect;\r\n        return new Rect(rects.X + this.Header + this.ScrollTop, rects.Y, this.Thickness, this.Rect.Height - 2);\r\n\r\n    }\r\n}\r\n\r\nexport class DataExcelViewHScroll extends HScrollerView implements IViewEvent\r\n{\r\n    public constructor(grid: DataExcel)\r\n    {\r\n        super();\r\n        this._Grid = grid;\r\n        grid.On(Events.FirstDisplayColumnChanged, this.Grid_FirstDisplayRowChanged);\r\n    }\r\n\r\n    Grid_FirstDisplayRowChanged(args:any)\r\n    {\r\n        try\r\n        {\r\n            let sender = args[0];\r\n            let target = args[1];\r\n            let index = args[2];\r\n            if (index > target.Max)\r\n            {\r\n                target.Max = index;\r\n            }\r\n            target.Value = index;\r\n            target.RefreshScrollThumd();\r\n\r\n        }\r\n        catch (ex)\r\n        {\r\n            DataExcelConsole.log(\"Grid_FirstDisplayRowChanged\", ex);\r\n        }\r\n    }\r\n    private _Grid: DataExcel;\r\n    public get Grid(): DataExcel\r\n    {\r\n        return this._Grid;\r\n    }\r\n\r\n    public get Header(): number\r\n    {\r\n        return this.Grid.ContentLeft;\r\n    }\r\n\r\n    public get Width(): number\r\n    {\r\n        return this.Grid.Width - this.Height - this.Left;\r\n    }\r\n\r\n    public get Left(): number\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    public get Rect()\r\n    {\r\n        return new Rect(this.Left, this.Top, this.Width, this.Height);\r\n    }\r\n\r\n    public get Top(): number\r\n    {\r\n        return this.Grid.Height - this.Height;\r\n    }\r\n    public lck: boolean = false;\r\n    public OnValueChanged(value: number)\r\n    {\r\n        //if (!this.Visible)\r\n        //    return;\r\n        //try\r\n        //{\r\n        //    if (this.lck)\r\n        //        return;\r\n        //    this.lck = true;\r\n        //    let position = value;\r\n        //    this.Grid.FirstDisplayedRowIndex = (position);\r\n        //}\r\n        //catch (ex)\r\n        //{\r\n        //    DataExcelConsole.log(\"OnValueChanged\", ex);\r\n\r\n        //}\r\n        //finally\r\n        //{\r\n        //    this.lck = false;\r\n        //}\r\n    }\r\n     \r\n\r\n    public OnMouseDown(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        //let pt = point;// this.Grid.PointControlToView(e.Location);\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            return this.DoOnMouseDown(pt);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public OnMouseUp(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n        this.MoveSelected = false;\r\n        return this.DoOnMouseUp();\r\n    }\r\n\r\n    public OnMouseMove(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n        //let pt = this.Grid.PointControlToView(e.Location);\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        //if (this.Rect.Contains(pt) && this.MoveSelected)\r\n        if (this.MoveSelected)\r\n        {\r\n            let res = this.DoOnMouseMove(pt);\r\n            if (res)\r\n            {\r\n                this.Grid.FirstDisplayedColumnIndex = Math.round(this.Value);\r\n                this.Grid.Refresh();\r\n                this.Grid.RePaint();\r\n            }\r\n            return res;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public OnMouseClick(sender:any, e:MouseEvent, ve:EventView)\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n        let pt = this.Grid.PointControlToView(ve.offsetPoint);\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            return this.DoOnMouseClick(pt);\r\n        }\r\n        return false;\r\n    }\r\n    OnTouchStart(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    //OnMouseDown(sender, e, ve): boolean\r\n    //OnMouseUp(sender, e, ve): boolean\r\n    //OnMouseMove(sender, e, ve): boolean\r\n    OnMouseDoubleClick(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        if (!this.Visible)\r\n            return false;\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        if (this.Rect.Contains(pt))\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnKeyPress(sender:any, e: KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender:any, e: KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    public Next()\r\n    {\r\n        let value = this.Value + this.SmallChange;\r\n        this.Value = value;// value > this.Max ? this.Max : value;\r\n    }\r\n}","import { TextAlgin } from \"../Base/ConstantValue\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { Rect } from \"../Base/Point\";\r\n\r\ndeclare var zrender: any;\r\nexport class Graphics {\r\n    public drawTimes: number = 0;\r\n    private zr: any;\r\n    public get ZR() {\r\n        return this.zr;\r\n    }\r\n\r\n\r\n    constructor(zren: any) {\r\n        this.zr = zren;\r\n    };\r\n    AddDrawTimes() {\r\n        this.drawTimes = this.drawTimes + 1;\r\n        if (this.drawTimes > 65526) {\r\n            this.drawTimes = 1;\r\n        }\r\n    }\r\n    DrawLineStyle(style1: any, x1: any, y1: any, x2: any, y2: any) {\r\n        var shape = new zrender.Line({\r\n            //position: [0, 0],\r\n            scale: [1, 1],\r\n            shape: {\r\n                x1: x1,\r\n                y1: y1,\r\n                x2: x2,\r\n                y2: y2\r\n            },\r\n            style: style1\r\n        });\r\n        shape.cursor = null;\r\n        this.zr.add(shape);\r\n    }\r\n    DrawLine(color: any, x1: any, y1: any, x2: any, y2: any) {\r\n        //this.Ctx.strokeStyle = color;\r\n        //this.Ctx.beginPath();\r\n        //this.Ctx.moveTo(x1, y1);\r\n        //this.Ctx.lineTo(x2, y2);\r\n        //this.Ctx.stroke();\r\n        var curve = new zrender.Line({\r\n            //position: [0, 0],\r\n            scale: [1, 1],\r\n            shape: {\r\n                x1: x1,\r\n                y1: y1,\r\n                cpx1: 0,\r\n                cpy1: 0,\r\n                cpx2: 0,\r\n                cpy2: 0,\r\n                x2: x2,\r\n                y2: y2\r\n            },\r\n            style: {\r\n                stroke: color\r\n            }\r\n        });\r\n        curve.cursor = null;\r\n        this.zr.add(curve);\r\n    }\r\n\r\n\r\n    DrawTextColor(font: any, color: any, text: any, x1: any, y1: any) {\r\n        var curve = new zrender.Text({\r\n            //position: [0, 0],\r\n            scale: [1, 1],\r\n            draggable: true,\r\n            style:\r\n            {\r\n                x: x1,\r\n                y: y1,\r\n                text: text,\r\n                font: font,\r\n                textAlign: \"left\",\r\n                fill: color,\r\n            }\r\n\r\n        });\r\n        this.zr.add(curve);\r\n    }\r\n    DrawText(font: any, color: any, text: any, x1: any, y1: any, width1: any, height1: any, align: CanvasTextAlign, opacity1?: any) {\r\n        //if (align == null)\r\n        //{\r\n\r\n        //}\r\n        //this.Ctx.font = font;\r\n        //this.Ctx.textAlign = align;\r\n        //this.Ctx.fillStyle = color;\r\n        //this.Ctx.fillText(text, x, y);\r\n        var curve = new zrender.Text({\r\n            //position: [0, 0],\r\n            scale: [1, 1],\r\n            draggable: true,\r\n            style:\r\n            {\r\n                x: x1,\r\n                y: y1,\r\n                text: text,\r\n                font: font,\r\n                textAlign: align,\r\n                fill: color,\r\n            },\r\n            opacity: opacity1,\r\n\r\n        });\r\n        var clip = new zrender.Rect({\r\n            scale: [1, 1],\r\n            shape: {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            }\r\n        });\r\n        //this.zr.add(curve);\r\n        var g1 = new zrender.Group();\r\n        g1.add(curve);\r\n        g1.setClipPath(clip);\r\n        this.zr.add(g1);\r\n    }\r\n    DrawTextRect(font: any, color: any, text: any, x1: any, y1: any, width1: any, height1: any, textPos: any) {\r\n        //if (align == null)\r\n        //{\r\n\r\n        //}\r\n        //this.Ctx.font = font;\r\n        //this.Ctx.textAlign = align;\r\n        //this.Ctx.fillStyle = color;\r\n        //this.Ctx.fillText(text, x, y, width);\r\n\r\n        var shape = new zrender.Rect({\r\n            scale: [1, 1],\r\n            style: {\r\n                fill: null,\r\n            },\r\n            textContent: new zrender.Text({\r\n                scale: [1, 1],\r\n                style: {\r\n                    text: text,\r\n                    fill: color,\r\n                    font: font\r\n                }\r\n            }),\r\n            textConfig: {\r\n                position: textPos\r\n            },\r\n            shape: {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            }\r\n        });\r\n        var g1 = new zrender.Group();\r\n        g1.add(shape);\r\n        g1.setClipPath(shape);\r\n        this.zr.add(g1);\r\n    }\r\n    DrawTextRectStyle(text: any, x1: any, y1: any, width1: any, height1: any, style: any) {\r\n        var enText = new zrender.Text(\r\n            {\r\n                scale: [1, 1],\r\n                position: [x1, y1],\r\n                draggable: true,\r\n            }\r\n        );\r\n        enText.style = style;\r\n        enText.style.overflow = 'break';\r\n        var shape = new zrender.Rect({\r\n            scale: [1, 1],\r\n            style: {\r\n                fill: null,\r\n            },\r\n            shape: {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            },\r\n            textConfig: {\r\n                position: TextAlgin.bottomleft\r\n            },\r\n        });\r\n        var g1 = new zrender.Group();\r\n        g1.add(enText);\r\n        g1.setClipPath(shape);\r\n        this.zr.add(g1);\r\n    }\r\n    DrawTextRectStyle2(text: any, x1: any, y1: any, width1: any, height1: any, style: any) {\r\n        var g = new zrender.Group();\r\n        //let s = {\r\n        //    text: 'position[100, 200],rotation: -1scarotation: -1scale: 0.5align: middleverticalAlign: bottomorle: 0.5align: middleverticalAlign: bottomorigin:[0, 50]',\r\n        //    width: width,\r\n        //    height: height,\r\n        //    fill: '#c0f',\r\n        //    font: '18px Microsoft Yahei',\r\n        //    align: 'right',\r\n        //    verticalAlign: 'bottom',\r\n        //    overflow: 'break'\r\n\r\n        //}\r\n        let width = 0;\r\n        let height = 0;\r\n        style.width = width1;\r\n        style.height = height1;\r\n        style.text = text;\r\n        let align = style.align;\r\n        if (align == 'right') {\r\n            width = width1;\r\n        }\r\n        if (align == 'center') {\r\n            width = width1 / 2;\r\n        }\r\n        let verticalAlign = style.verticalAlign;\r\n        if (verticalAlign == 'bottom') {\r\n            height = height1;\r\n        }\r\n        if (verticalAlign == 'middle') {\r\n            height = height1 / 2;\r\n        }\r\n        g.add(new zrender.Text({\r\n            scale: [1, 1],\r\n            position: [x1 + width, y1 + height],\r\n            style: style,\r\n            draggable: true\r\n        }));\r\n        let clip = new zrender.Rect({\r\n            shape:\r\n            {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            },\r\n            draggable: true\r\n        })\r\n        g.setClipPath(clip);\r\n        this.zr.add(g);\r\n    }\r\n\r\n    DrawTextClipRectStyle2(text: any, x1: any, y1: any, width1: any, height1: any, clipx1: any, clipy1: any, clipwidth1: any, clipheight1: any, style: any) {\r\n        var g = new zrender.Group();\r\n        //let s = {\r\n        //    text: 'position[100, 200],rotation: -1scarotation: -1scale: 0.5align: middleverticalAlign: bottomorle: 0.5align: middleverticalAlign: bottomorigin:[0, 50]',\r\n        //    width: width,\r\n        //    height: height,\r\n        //    fill: '#c0f',\r\n        //    font: '18px Microsoft Yahei',\r\n        //    align: 'right',\r\n        //    verticalAlign: 'bottom',\r\n        //    overflow: 'break'\r\n\r\n        //}\r\n        let width = 0;\r\n        let height = 0;\r\n        style.width = width1;\r\n        style.height = height1;\r\n        style.text = text;\r\n        let align = style.align;\r\n        if (align == 'right') {\r\n            width = width1;\r\n        }\r\n        if (align == 'center') {\r\n            width = width1 / 2;\r\n        }\r\n        let verticalAlign = style.verticalAlign;\r\n        if (verticalAlign == 'bottom') {\r\n            height = height1;\r\n        }\r\n        if (verticalAlign == 'middle') {\r\n            height = height1 / 2;\r\n        }\r\n        g.add(new zrender.Text({\r\n            scale: [1, 1],\r\n            position: [x1 + width, y1 + height],\r\n            style: style,\r\n            draggable: true\r\n        }));\r\n        let clip = new zrender.Rect({\r\n            shape:\r\n            {\r\n                x: clipx1,\r\n                y: clipy1,\r\n                width: clipwidth1,\r\n                height: clipheight1\r\n            },\r\n            draggable: true\r\n        })\r\n        g.setClipPath(clip);\r\n        this.zr.add(g);\r\n    }\r\n    DrawTextClipRect(font: any, color: any, text: any, x1: any, y1: any, clipx1: any, clipy1: any, clipwidth1: any, clipheight1: any, align: any) {\r\n        var curve = new zrender.Text({\r\n            //position: [0, 0],\r\n            scale: [1, 1],\r\n            draggable: true,\r\n            style:\r\n            {\r\n                x: x1,\r\n                y: y1,\r\n                text: text,\r\n                font: font,\r\n                textAlign: align,\r\n                textFill: color,\r\n            }\r\n\r\n        });\r\n        var clip = new zrender.Rect({\r\n            scale: [1, 1],\r\n            shape: {\r\n                x: clipx1,\r\n                y: clipy1,\r\n                width: clipwidth1,\r\n                height: clipheight1\r\n            }\r\n        });\r\n        //this.zr.add(curve);\r\n        var g1 = new zrender.Group();\r\n        g1.add(curve);\r\n        g1.setClipPath(clip);\r\n        this.zr.add(g1);\r\n    }\r\n    DrawRectangle(color: any, x1: any, y1: any, width1: any, height1: any) {\r\n        //this.Ctx.strokeStyle = color;\r\n        //this.Ctx.strokeRect(x, y, width, height);\r\n        var curve = new zrender.Rect({\r\n            scale: [1, 1],\r\n            style:\r\n            {\r\n                stroke: color,\r\n                fill: null\r\n            },\r\n            shape:\r\n            {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            }\r\n        });\r\n\r\n        curve.cursor = null;\r\n        this.zr.add(curve);\r\n    }\r\n    DrawRect(color: any, rect: Rect) {\r\n        //this.Ctx.strokeStyle = color;\r\n        //this.Ctx.strokeRect(x, y, width, height);\r\n        var curve = new zrender.Rect({\r\n            scale: [1, 1],\r\n            shape: {\r\n                x: rect.X,\r\n                y: rect.Y,\r\n                width: rect.Width,\r\n                height: rect.Height\r\n            },\r\n            style:\r\n            {\r\n                stroke: color\r\n            }\r\n        });\r\n\r\n        this.zr.add(curve);\r\n    }\r\n    FillRectangleLinearGradient(color: any, x1: any, y1: any, width1: any, height1: any, forwarddiagonal: any) {\r\n        var curve = new zrender.Rect({\r\n            draggable: true,\r\n            style:\r\n            {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            }\r\n        });\r\n\r\n        this.zr.add(curve);\r\n    }\r\n    FillRectangle(color: any, x1: any, y1: any, width1: any, height1: any) {\r\n        var shape = new zrender.Rect({\r\n            scale: [1, 1],\r\n            style: {\r\n                fill: color,\r\n            },\r\n            shape: {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            },\r\n            cursor: \"\"\r\n        });\r\n        this.zr.add(shape);\r\n    }\r\n    FillRect(fillcolor: any, x1: any, y1: any, width1: any, height1: any, opacity1?: any, stroke1?: any, lineWidth1?: any) {\r\n        //this.Ctx.fillStyle = color;\r\n        //this.Ctx.fillRect(x, y, width, height);\r\n        //if (align == null)\r\n        //{\r\n\r\n        //}\r\n        //this.Ctx.font = font;\r\n        //this.Ctx.textAlign = align;\r\n        //this.Ctx.fillStyle = color;\r\n        //this.Ctx.fillText(text, x, y, width);\r\n\r\n        var shape = new zrender.Rect({\r\n            scale: [1, 1],\r\n            style: {\r\n                lineWidth: lineWidth1,\r\n                opacity: opacity1,\r\n                stroke: stroke1,\r\n                fill: fillcolor,\r\n            },\r\n            shape: {\r\n                x: x1,\r\n                y: y1,\r\n                width: width1,\r\n                height: height1\r\n            }\r\n        });\r\n        this.zr.add(shape);\r\n    }\r\n    FillRectStyle(style1: any, x1: any, y1: any, width1: any, height1: any, cursor1?: any, zlevel1?: any) {\r\n        var shape = new zrender.Rect({\r\n            position: [x1, y1],\r\n            scale: [1, 1],\r\n            shape: {\r\n                x: 0,\r\n                y: 0,\r\n                width: width1,\r\n                height: height1\r\n            },\r\n            zlevel: zlevel1\r\n        });\r\n        //if (cursor1 != null)\r\n        //{\r\n        shape.cursor = cursor1;\r\n        //}\r\n        shape.style = style1;\r\n        this.zr.add(shape);\r\n    }\r\n    FillRectangleStyle(style1: any, rect: Rect) {\r\n        var shape = new zrender.Rect({\r\n            scale: [1, 1],\r\n            shape: {\r\n                x: rect.X,\r\n                y: rect.Y,\r\n                width: rect.Width,\r\n                height: rect.Height\r\n            }\r\n        });\r\n        shape.style = style1;\r\n        shape.cursor = null;\r\n        this.zr.add(shape);\r\n    }\r\n    FillRectangleColor(color: any, rect: Rect, cursor?: any, opacity1?: any) {\r\n        var shape = new zrender.Rect({\r\n            scale: [1, 1],\r\n            style: {\r\n                fill: color,\r\n            },\r\n            shape: {\r\n                x: rect.X,\r\n                y: rect.Y,\r\n                width: rect.Width,\r\n                height: rect.Height\r\n            },\r\n            opacity: opacity1,\r\n            cursor: cursor\r\n\r\n        });\r\n\r\n        this.zr.add(shape);\r\n    }\r\n    FillRectangleImage(image1: any, rect: Rect, imagelayout: any, cursor1?: any, opacity1?: any) {\r\n        var image = new zrender.Image({\r\n            position: [rect.X, rect.Y],\r\n            scale: [1, 1],\r\n            style: {\r\n                //x: 0,\r\n                //y: 0,\r\n                //width: rect.Width,\r\n                //height: rect.Height,\r\n                image: image1,\r\n                opacity: opacity1,\r\n                cursor: cursor1\r\n            },\r\n        });\r\n        if (imagelayout == ImageLayout.Clip) {\r\n            let clip = new zrender.Rect({\r\n                shape:\r\n                {\r\n                    x: rect.X,\r\n                    y: rect.Y,\r\n                    width: rect.Width,\r\n                    height: rect.Height\r\n                },\r\n            })\r\n            var g = new zrender.Group();\r\n            g.add(image);\r\n            g.setClipPath(clip);\r\n            this.zr.add(g);\r\n        }\r\n        else if (imagelayout == ImageLayout.ZoomClip) {\r\n            let clip = new zrender.Rect({\r\n                shape:\r\n                {\r\n                    x: rect.X,\r\n                    y: rect.Y,\r\n                    width: rect.Width,\r\n                    height: rect.Height\r\n                },\r\n            })\r\n\r\n            image.style.width = rect.Width;\r\n            var g = new zrender.Group();\r\n            g.add(image);\r\n            g.setClipPath(clip);\r\n            this.zr.add(g);\r\n        }\r\n        else if (imagelayout == ImageLayout.Zoom) {\r\n            image.style.width = rect.Width;\r\n            this.zr.add(image);\r\n        }\r\n        else if (imagelayout == ImageLayout.Stretch) {\r\n            image.style.width = rect.Width;\r\n            image.style.height = rect.Height;\r\n            this.zr.add(image);\r\n        }\r\n        else {\r\n            this.zr.add(image);\r\n        }\r\n\r\n    }\r\n\r\n    FillRectangleImageClip(image1: any, x1: any, y1: any, width1: any, height1: any, clipx1: any, clipy1: any, clipwidth1: any, clipheight1: any, cursor1?: any, opacity1?: any) {\r\n        var g = new zrender.Group();\r\n\r\n        var image = new zrender.Image({\r\n            position: [x1, y1],\r\n            scale: [1, 1],\r\n            style: {\r\n                image: image1,\r\n                //x: 0,\r\n                //y: 0,\r\n                width: width1,\r\n                height: height1,\r\n                opacity: opacity1,\r\n                cursor: cursor1\r\n            },\r\n        });\r\n        g.add(image);\r\n        let clip = new zrender.Rect({\r\n            shape:\r\n            {\r\n                x: clipx1,\r\n                y: clipy1,\r\n                width: clipwidth1,\r\n                height: clipheight1\r\n            },\r\n        })\r\n        g.setClipPath(clip);\r\n        this.zr.add(g);\r\n    }\r\n\r\n    DrawGroup(group: any) {\r\n        this.zr.add(group);\r\n    }\r\n    DrawPolyPolygon(style: any) {\r\n        let display = new zrender.Polygon({\r\n            style: style.option.style,\r\n            shape: style.option.shape,\r\n        });\r\n\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n    DrawPolyline(style: any) {\r\n        let display = new zrender.Polyline({\r\n            style: style.option.style,\r\n            shape: style.option.shape,\r\n        });\r\n\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n    DrawPrimitiveRect(style: any) {\r\n        let display = new zrender.Rect({\r\n            style: style.option.style,\r\n            shape: style.option.shape,\r\n        });\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n    DrawPrimitiveImage(style: any) {\r\n        let display = new zrender.Image({\r\n            style: style.option.style\r\n        });\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n    DrawPrimitiveCircle(style: any) {\r\n        let display = new zrender.Circle({\r\n            style: style.option.style,\r\n            shape: style.option.shape\r\n        });\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n    DrawPrimitiveSector(style: any) {\r\n        let display = new zrender.Sector({\r\n            style: style.option.style,\r\n            shape: style.option.shape\r\n        });\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n    DrawPrimitiveText(style: any) {\r\n        let display = new zrender.Text({\r\n            style: style.option.style,\r\n            rotation: style.option.rotation,\r\n            position: style.option.position\r\n        });\r\n        if (style.animate != null) {\r\n            this.AppendAnimate(display, style.animate);\r\n        }\r\n\r\n        this.zr.add(display);\r\n    }\r\n\r\n    AppendAnimate(display: any, animatees: any) {\r\n        if (animatees != null) {\r\n            for (var i = 0; i < animatees.length; i++) {\r\n                let animate = animatees[i];\r\n                if (!animate.hide) {\r\n                    let ani = display.animate(animate.type, true);\r\n                    let wh = ani.when(animate.interval, animate.value);\r\n                    wh = this.AppendWhen(wh, animate.animate);\r\n                    wh.start();\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    AppendWhen(wh: any, animate: any) {\r\n        wh = wh.when(animate.interval, animate.value);\r\n        if (animate.animate != null) {\r\n            wh = this.AppendWhen(wh, animate.animate);\r\n        }\r\n        return wh;\r\n    }\r\n    GetPolyline(opt: any):any {\r\n        let polyline = new zrender.Polyline();\r\n        return polyline;\r\n    }\r\n    Clip(x: any, y: any, width: any, height: any) {\r\n        //this.Ctx.rect(x, y, width, height);\r\n        //this.Ctx.clip();\r\n    }\r\n    MeasureText(text: any, font: any): any {\r\n        //this.Ctx.font = font;\r\n        //return this.Ctx.measureText(text);\r\n    }\r\n    Translate(x: any, y: any) {\r\n        //this.Ctx.translate(x, y);\r\n    }\r\n\r\n    Save() {\r\n\r\n    }\r\n    Restore() {\r\n\r\n    }\r\n    Clear() {\r\n        this.zr.clear();\r\n    }\r\n}\r\n","﻿import { Events } from \"../Control/Events\";\r\nimport { DataExcelCell } from \"../main/DataExcelCell\";\r\nimport { DataExcelCellEditBase } from \"./DataExcelCellEditBase\";\r\n\r\nexport class DataExcelCellEditEdit extends DataExcelCellEditBase \r\n{\r\n    public Cell: DataExcelCell;\r\n \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n      \r\n    InitEdit()\r\n    {\r\n        //this.Grid.RePaint();\r\n        let grid = this.Cell.Grid;\r\n        let cell = this.Cell;\r\n        if (cell.OwnMergeCell != null)\r\n        {\r\n            cell = cell.OwnMergeCell;\r\n        }\r\n        var edit = grid.editcontrol;\r\n        edit[\"cell\"] = this;\r\n        grid.editcontrol.value = \"\";\r\n        if (cell.Text != null)\r\n        {\r\n            grid.editcontrol.value = cell.Text;\r\n        }\r\n        //this.Grid.editcontrol.removeEventListener(\"input\", this.OnInput);\r\n        //this.Grid.editcontrol.removeEventListener(\"change\", this.OnChange);\r\n        grid.editcontrol.addEventListener(\"input\", this.OnInput);\r\n        grid.editcontrol.addEventListener(\"change\", this.OnChange);\r\n        grid.editcontrol.style.width = cell.Width + \"px\";\r\n        grid.editcontrol.style.height = cell.Height + \"px\";\r\n        grid.editcontrol.style.left = (cell.Left) + \"px\";\r\n        grid.editcontrol.style.top = (cell.Top) + \"px\";\r\n        grid.editcontrol.style.visibility = \"visible\";\r\n        grid.editcontrol.focus();\r\n\r\n    }\r\n\r\n    EndEdit()\r\n    {\r\n        let grid = this.Cell.Grid; \r\n        grid.editcontrol.style.visibility = \"hidden\";\r\n        grid.editcontrol.removeEventListener(\"input\", this.OnInput);\r\n        grid.editcontrol.removeEventListener(\"change\", this.OnChange);\r\n        this.Cell.EndEdit()\r\n    }\r\n\r\n    OnInput(e:any): void\r\n    {\r\n        let edit = this[\"cell\"] as DataExcelCellEditEdit;\r\n        let cell = edit.Cell;\r\n        cell.Text = this[\"value\"];\r\n        cell.Value = this[\"value\"];\r\n        cell.Grid.emit(Events.CellValueChanged, cell.Grid, cell);\r\n        cell.Grid.graphic.Clear();\r\n        cell.Grid.RePaint(e);\r\n    }\r\n    OnChange(e: Event)\r\n    {\r\n        //var cell = this[\"cell\"];\r\n        //cell.Text = this[\"value\"];\r\n        //cell.Grid.Context.clearRect(0, 0, cell.Grid.Control.width, cell.Grid.Control.height);\r\n        //cell.Grid.RePaint();\r\n        let edit = this[\"cell\"] as DataExcelCellEditEdit;\r\n        let cell = edit.Cell;\r\n        cell.Text = this[\"value\"]; \r\n        cell.Value = this[\"value\"];\r\n        cell.Grid.RePaint(e);\r\n        edit.EndEdit();\r\n\r\n    }\r\n\r\n    Clone()\r\n    {\r\n        return new DataExcelCellEditEdit();\r\n    }\r\n} \r\n","﻿import { EventView } from \"../Base/EventView\";\r\nimport { Point, Rect } from \"../Base/Point\";\r\nimport { IViewEvent } from \"../Control/IViewEvent\";\r\n\r\nexport enum StateMode\r\n{\r\n    NULL = 0,\r\n    MOVE = 1,\r\n    SIZE=2\r\n\r\n}\r\nexport class MoveView implements IViewEvent\r\n{\r\n    protected _height = 0;\r\n    public get Height()\r\n    {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value)\r\n    {\r\n        this._height = value;\r\n    }\r\n    public get Right()\r\n    {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom()\r\n    {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left()\r\n    {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value)\r\n    {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n\r\n    public get Top()\r\n    {\r\n        return this._top;\r\n    }\r\n    public set Top(value)\r\n    {\r\n        this._top = value;\r\n    }\r\n\r\n\r\n    protected _width = 0;\r\n\r\n    public get Width()\r\n    {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value)\r\n    {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point\r\n    {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point)\r\n    {\r\n        this._MouseDownPoint = value;\r\n    }\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode\r\n    {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode)\r\n    {\r\n        this._StateMode_1 = value;\r\n    }\r\n    public constructor()\r\n    {\r\n\r\n    } \r\n\r\n    OnMouseDown(sender: any, e: any, ve: any): boolean\r\n    {\r\n        if (this.Rect.Contains(ve.ViewPoint))\r\n        {\r\n            this.MouseDownPoint = ve.Point;\r\n            this.StateMode = StateMode.MOVE;\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: any, ve: any): boolean\r\n    {\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: any, ve: EventView): boolean\r\n    {\r\n        if (this.StateMode == StateMode.MOVE)\r\n        {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            this.Left = this.Left + x;\r\n            this.Top = this.Top + y;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: any, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender: any, e: KeyboardEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender: any, e: KeyboardEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n     \r\n\r\n}","﻿import { EventView } from \"../Base/EventView\";\r\nimport { Point, Rect, Size } from \"../Base/Point\";\r\nimport { IViewEvent } from \"../Control/IViewEvent\";\r\nimport { StateMode } from \"./MoveView\";\r\n\r\n export  enum SizeChangMode\r\n{\r\n    Null,\r\n    TopLeft,\r\n    TopRight,\r\n    MidLeft,\r\n    MidRight,\r\n    BoomLeft,\r\n    BoomRight,\r\n    MidTop,\r\n    MidBoom\r\n}\r\nexport class ReSizeView implements IViewEvent\r\n{\r\n    protected _height = 0;\r\n    public get Height()\r\n    {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value)\r\n    {\r\n        this._height = value;\r\n    }\r\n    public get Right()\r\n    {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom()\r\n    {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left()\r\n    {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value)\r\n    {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n\r\n    public get Top()\r\n    {\r\n        return this._top;\r\n    }\r\n    public set Top(value)\r\n    {\r\n        this._top = value;\r\n    }\r\n\r\n\r\n    protected _width = 0;\r\n\r\n    public get Width()\r\n    {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value)\r\n    {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point\r\n    {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point)\r\n    {\r\n        this._MouseDownPoint = value;\r\n    }\r\n    private _MouseDownsize: Size;\r\n    public get MouseDownsize(): Size {\r\n        return this._MouseDownsize;\r\n    }\r\n    public set MouseDownsize(value: Size) {\r\n        this._MouseDownsize = value;\r\n    }\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode\r\n    {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode)\r\n    {\r\n        this._StateMode_1 = value;\r\n    }\r\n    public constructor()\r\n    {\r\n\r\n    }\r\n\r\n    OnMouseDown(sender: any, e: any, ve: any): boolean\r\n    {\r\n        if (this.Rect.Contains(ve.ViewPoint))\r\n        {\r\n            this.MouseDownPoint = ve.Point;\r\n            this.StateMode = StateMode.MOVE;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: any, ve: any): boolean\r\n    {\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: any, ve: EventView): boolean\r\n    {\r\n        if (this.StateMode == StateMode.MOVE)\r\n        {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            this.Left = this.Left + x;\r\n            this.Top = this.Top + y;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: any, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender: any, e: KeyboardEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender: any, e: KeyboardEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: any): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    SetDataExcelMouseDown(ve: EventView)\r\n    {\r\n        let pt = ve.offsetPoint;\r\n        this.MouseDownPoint = ve.offsetPoint;\r\n        this.MouseDownsize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    ChangedSize(ve: EventView)\r\n    {\r\n        let location = ve.offsetPoint;// e.Location;\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n\r\n        switch (this.SizeChangMode)\r\n        {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n \r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size\r\n    {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size)\r\n    {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode\r\n    {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode)\r\n    {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: 6;\r\n    public get TopLeft(): Rect\r\n    {\r\n\r\n        let rectf = this.Rect;\r\n\r\n        rectf = new Rect(rectf.Left, rectf.Top, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect\r\n    {\r\n\r\n        let rectf = this.Rect;\r\n\r\n        rectf = new Rect(rectf.Right - this._SelectBorderWidth, rectf.Top, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect\r\n    {\r\n\r\n        let rectf = this.Rect;\r\n\r\n        rectf = new Rect(rectf.Left, rectf.Bottom - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect\r\n    {\r\n\r\n        let rectf = this.Rect;\r\n\r\n        rectf = new Rect(rectf.Right - this._SelectBorderWidth, rectf.Bottom - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect\r\n    {\r\n        let rectf = this.Rect;\r\n\r\n\r\n        rectf = new Rect(\r\n            rectf.Left + rectf.Width / 2 - this._SelectBorderWidth / 2,\r\n            rectf.Top,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect\r\n    {\r\n\r\n        let rectf = this.Rect;\r\n\r\n        rectf = new Rect(rectf.Left + rectf.Width / 2 - this._SelectBorderWidth / 2, rectf.Bottom - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect\r\n    {\r\n        let rectf = this.Rect;\r\n        rectf = new Rect(rectf.Left, rectf.Top + rectf.Height / 2 - this._SelectBorderWidth / 2, this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect\r\n    {\r\n        let rectf = this.Rect;\r\n        rectf = new Rect(rectf.Right - this._SelectBorderWidth, rectf.Top + rectf.Height / 2 - this._SelectBorderWidth / 2, this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n}","﻿import { Palette } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { Point, Rect, Size, Zoom } from \"../Base/Point\";\r\nimport { Events } from \"../Control/Events\";\r\nimport { IViewEvent, IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcel } from \"../main/DataExcel\";\r\nimport { StateMode } from \"../View/MoveView\";\r\nimport { SizeChangMode } from \"../View/ReSizeView\";\r\n\r\ndeclare var echarts: any;\r\nexport class Chart implements IViewEvent, IZoom {\r\n    public Grid: DataExcel;\r\n    private _Name: string;\r\n    public get Name(): string {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string) {\r\n        this._Name = value;\r\n    }\r\n    private _offsetX: number = 0;\r\n    public get offsetX(): number {\r\n        return this._offsetX;\r\n    }\r\n    public set offsetX(value: number) {\r\n        this._offsetX = value;\r\n    }\r\n    private _offsetY: number = 0;\r\n    public get offsetY(): number {\r\n        return this._offsetY;\r\n    }\r\n    public set offsetY(value: number) {\r\n        this._offsetY = value;\r\n    }\r\n\r\n    protected _height = 0;\r\n    public get Height() {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value) {\r\n        this._height = value;\r\n    }\r\n    public get Right() {\r\n        return this.Left + this.Width;\r\n    }\r\n\r\n    public get Bottom() {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left() {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value) {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public set Top(value) {\r\n        this._top = value;\r\n    }\r\n    protected _width = 0;\r\n\r\n    public get Width() {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value) {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left + this.offsetX;\r\n        rect.Y = this.Top + this.offsetY;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    public get Bound(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string) {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number) {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point) {\r\n        this._MouseDownPoint = value;\r\n    }\r\n\r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size) {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode) {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: number = 6;\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode) {\r\n        this._StateMode_1 = value;\r\n    }\r\n\r\n    public Selected: boolean;\r\n    public get TopLeft(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.offsetY - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect {\r\n        let rectf = new Rect(this.Right + this.offsetX + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.offsetY - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Bottom + this.offsetY + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect {\r\n        let rectf = new Rect(this.Right + this.offsetX + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Bottom + this.offsetY + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect {\r\n        let rectf = new Rect(\r\n            this.Left + this.offsetX + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Top + this.offsetY - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Bottom + this.offsetY + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.offsetY + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect {\r\n        let rectf = new Rect(this.Right + this.offsetX + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.offsetY + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        try {\r\n            let data = {\r\n                name: this.Name,\r\n                backcolor: this.BackColor,\r\n                backimage: this.BackImage,\r\n                backimageimagelayout: this.BackImageImageLayout,\r\n                height: this.Height,\r\n                left: this.Left,\r\n                top: this.Top,\r\n                width: this.Width,\r\n                offsetx: this.offsetX,\r\n                offsety: this.offsetY,\r\n                chartdata: this.DSC\r\n            };\r\n            return data;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"dataexcelcell GetData\", e);\r\n        }\r\n        return {};\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        try {\r\n            this.Name = data.name;\r\n            this.BackColor = data.backcolor;\r\n            this.BackImage = data.backimage;\r\n            this.BackImageImageLayout = data.backimageimagelayout;\r\n            this.Height = data.height;\r\n            this.Left = data.left;\r\n            this.Top = data.top;\r\n            this.Width = data.width;\r\n            this.DSC = data.chartdata;\r\n\r\n            this.offsetX = data.offsetx;\r\n            this.offsetY = data.offsety;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"dataexcelcell SetData\", e);\r\n        }\r\n\r\n    }\r\n    constructor() {\r\n        this._SelectBorderWidth = 6;\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n\r\n    //Init\r\n    dom: HTMLDivElement;\r\n    chart: any;\r\n    Init() {\r\n        if (this.dom == null) {\r\n            this.dom = document.createElement(\"div\");\r\n            this.dom.style.position = \"absolute\";\r\n            this.dom.style.left = this.Left + \"px\";\r\n            this.dom.style.top = this.Top + \"px\";\r\n            this.dom.style.width = this.Width + \"px\";\r\n            this.dom.style.height = this.Height + \"px\";\r\n            this.Grid.maindom.appendChild(this.dom);\r\n\r\n            this.dom[\"chart\"] = this;\r\n            //this.dom.addEventListener(\"mousedown\", this.DoOnMouseDown);\r\n            //this.dom.addEventListener(\"mouseup\", this.DoOnMouseUp);\r\n            //this.dom.addEventListener(\"mousemove\", this.DoOnMouseMove);\r\n            //window[\"chart\"] = this;\r\n            //window.addEventListener(\"mousemove\", this.DoOnMouseMove);\r\n            this.chart = echarts.init(this.dom);\r\n\r\n            let option = this.DSC.style.option;\r\n            this.chart.setOption(option);\r\n        }\r\n    }\r\n    InitDefaultOption() {\r\n        let option;\r\n        option = {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n                    type: 'line',\r\n                    smooth: true\r\n                }\r\n            ]\r\n        };\r\n        this.DSC.style.option = option;\r\n        this.chart.setOption(option);\r\n    }\r\n    Refresh() {\r\n        this.offsetX = this.Grid.ContentLeft;\r\n        this.offsetY = this.Grid.ContentTop;\r\n\r\n        this.dom.style.left = this.offsetX + this.Left + \"px\";\r\n        this.dom.style.top = this.offsetY + this.Top + \"px\";\r\n        this.dom.style.width = this.Width + \"px\";\r\n        this.dom.style.height = this.Height + \"px\";\r\n        let option = this.DSC.style.option;\r\n        this.chart.setOption(option, true);\r\n        this.chart.resize();\r\n    }\r\n    RefreshData() {\r\n\r\n    }\r\n    Clear() {\r\n        try {\r\n            if (this.dom != null) {\r\n                this.Grid.maindom.removeChild(this.dom);\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"Chart Clear\", e);\r\n        }\r\n\r\n    }\r\n    //DoOnMouseDown(evt: MouseEvent): void\r\n    //{\r\n    //    let obj2 = this[\"chart\"] as any;\r\n    //    let obj = obj2 as Chart;\r\n    //    let ev = new EventView();\r\n    //    try\r\n    //    {\r\n    //        ev.Canvas = evt.target;\r\n    //        let dom = evt.target as HTMLElement;\r\n    //        ev.Dom = dom;\r\n    //        let vertex = dom.getBoundingClientRect();\r\n    //        let x = evt.offsetX;\r\n    //        let y = evt.offsetY;\r\n    //        ev.Point = new Point(x, y);\r\n    //        obj.OnChartMouseDown(this, evt, ev);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"dom.OnMouseDown\", ex);\r\n    //    }\r\n    //    finally\r\n    //    {\r\n\r\n    //    }\r\n    //}\r\n    //DoOnMouseUp(evt: MouseEvent): void\r\n    //{\r\n    //    let obj2 = this[\"chart\"] as any;\r\n    //    let obj = obj2 as Chart;\r\n    //    let ev = new EventView();\r\n    //    try\r\n    //    {\r\n    //        ev.Canvas = evt.target;\r\n    //        let dom = evt.target as HTMLElement;\r\n    //        ev.Dom = dom;\r\n    //        let x = evt.offsetX;\r\n    //        let y = evt.offsetY;\r\n    //        ev.Point = new Point(x, y);\r\n    //        obj.OnChartMouseUp(this, evt, ev);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"dom.OnMouseUp\", ex);\r\n    //    }\r\n    //    finally\r\n    //    {\r\n\r\n    //    }\r\n    //}\r\n    //DoOnMouseMove(evt: MouseEvent): void\r\n    //{\r\n    //    let obj2 = this[\"chart\"] as any;\r\n    //    let obj = obj2 as Chart;\r\n    //    let ev = new EventView();\r\n    //    try\r\n    //    {\r\n    //        ev.Canvas = evt.target;\r\n    //        let dom = evt.target as HTMLElement;\r\n    //        ev.Dom = dom;\r\n    //        let x = evt.offsetX;\r\n    //        let y = evt.offsetY;\r\n    //        ev.Point = new Point(x, y);\r\n    //        obj.OnChartMouseMove(this, evt, ev);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"dom.click\", ex);\r\n    //    }\r\n    //    finally\r\n    //    {\r\n\r\n    //    }\r\n    //}\r\n\r\n    //OnChartMouseDown(sender: any, e: any, ve: EventView): boolean\r\n    //{\r\n    //    if (this.Bound.Contains(ve.Point))\r\n    //    {\r\n    //        this.MouseDownPoint = ve.Point; \r\n    //        this.StateMode = StateMode.MOVE;\r\n    //        this.Grid.ClearSelect();\r\n    //        this.Selected = true;\r\n    //        this.Grid.CellEvent = this;\r\n    //        this.Grid.RePaint();\r\n    //        return true;\r\n    //    }\r\n    //    return false;\r\n    //}\r\n    //OnChartMouseUp(sender: any, e: any, ve: EventView): boolean\r\n    //{\r\n    //    this.StateMode = StateMode.NULL;\r\n    //    return false;\r\n    //}\r\n    //OnChartMouseMove(sender: any, e: any, ve: EventView): boolean\r\n    //{ \r\n    //    if (this.StateMode == StateMode.MOVE)\r\n    //    {\r\n    //        let x = ve.Point.X - this.MouseDownPoint.X;\r\n    //        let y = ve.Point.Y - this.MouseDownPoint.Y;\r\n    //        this.Left = this.Left + x;\r\n    //        this.Top = this.Top + y;\r\n    //        this.dom.style.left = this.Left + \"px\";\r\n    //        this.dom.style.top = this.Top + \"px\";\r\n    //        this.Refresh();\r\n    //        this.Grid.RePaint();\r\n    //        return true;\r\n    //    } \r\n    //    return false;\r\n    //}\r\n    //Over\r\n    OnMouseDown(sender: any, e: any, ve: EventView): boolean {\r\n        if (this.Rect.Contains(ve.offsetPoint)) {\r\n            this.MouseDownPoint = ve.offsetPoint;\r\n            this.MouseDownSize = new Size(this.Left, this.Top);\r\n            this.StateMode = StateMode.MOVE;\r\n            this.Grid.ClearSelect();\r\n            this.Selected = true;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        if (this.SizeChangedMouseDown(ve)) {\r\n            this.StateMode = StateMode.SIZE;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: any, ve: EventView): boolean {\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: any, ve: EventView): boolean {\r\n        if (this.StateMode == StateMode.MOVE) {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            this.Left = this.MouseDownSize.Width + x;\r\n            this.Top = this.MouseDownSize.Height + y;\r\n            this.dom.style.left = this.offsetX + this.Left + \"px\";\r\n            this.dom.style.top = this.offsetY + this.Top + \"px\";\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.StateMode == StateMode.SIZE) {\r\n            this.ChangedSize(ve);\r\n            this.dom.style.left = this.offsetX + this.Left + \"px\";\r\n            this.dom.style.top = this.offsetY + this.Top + \"px\";\r\n            this.dom.style.width = this.Width + \"px\";\r\n            this.dom.style.height = this.Height + \"px\";\r\n            this.chart.resize();\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        else if (this.SizeChangedMouseDown(ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    SetCursor(cursor: any) {\r\n        this.Grid.maindom.style.cursor = cursor;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: any, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics) {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, this.Left + this.offsetX, this.Top, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRect(Palette.A3399FF80, this.Left + this.offsetX, this.Top + this.offsetY, this.Width, this.Height);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRectangleColor(\"gray\", this.TopLeft, Cursors.nw_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomRight, Cursors.nw_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.TopRight, Cursors.ne_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomLeft, Cursors.ne_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidRight, Cursors.e_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidLeft, Cursors.e_resize);\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidTop, Cursors.n_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidBottom, Cursors.n_resize);\r\n        }\r\n    }\r\n    SizeChangedMouseDown(ve: EventView) {\r\n        let pt = ve.offsetPoint;\r\n        this.MouseDownPoint = ve.offsetPoint;\r\n        this.MouseDownSize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            this.SetCursor(Cursors.nw_resize);\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            this.SetCursor(Cursors.ne_resize);\r\n\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            this.SetCursor(Cursors.ne_resize);\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            this.SetCursor(Cursors.nw_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            this.SetCursor(Cursors.n_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            this.SetCursor(Cursors.n_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            this.SetCursor(Cursors.e_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            this.SetCursor(Cursors.e_resize);\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    ChangedSize(ve: EventView) {\r\n        let location = ve.offsetPoint;// e.Location;\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n\r\n        switch (this.SizeChangMode) {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}","import { List } from \"../Base/ArrayList\";\r\nimport { Chart } from \"./Chart\";\r\n\r\n\r\nexport class ChartList extends List<Chart>\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    Clear()\r\n    {\r\n        this.forEach((chart: Chart) =>\r\n        {\r\n            chart.Clear();\r\n        });\r\n        this.clear();\r\n    }\r\n    Refresh()\r\n    {\r\n        for (var i in this)\r\n        {\r\n            let cell = this[i] as Chart;\r\n            cell.Refresh();\r\n        }\r\n    }\r\n}\r\n","import { ConvertHelper } from \"../../Base/ConvertHelper\";\r\nimport { Cursors } from \"../../Base/Cursors\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { ImageLayout } from \"../../Base/ImageLayout\";\r\nimport { Point, Rect, Size, Zoom } from \"../../Base/Point\";\r\nimport { IViewEvent, IZoom } from \"../../Control/IViewEvent\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { StateMode } from \"../../View/MoveView\";\r\nimport { SizeChangMode } from \"../../View/ReSizeView\";\r\nimport { Primitive } from \"../Primitive\";\r\n\r\nexport class Displayable implements IViewEvent, IZoom\r\n{\r\n    private _Grid: DataExcel;\r\n    public get Grid(): DataExcel\r\n    {\r\n        return this._Grid;\r\n    }\r\n    public set Grid(value: DataExcel)\r\n    {\r\n        this._Grid = value;\r\n    }\r\n    private _Primitive: Primitive;\r\n    public get Primitive(): Primitive\r\n    {\r\n        return this._Primitive;\r\n    }\r\n    public set Primitive(value: Primitive)\r\n    {\r\n        this._Primitive = value;\r\n    }\r\n\r\n    public get TypeName(): string\r\n    {\r\n        return \"\";\r\n    }\r\n    private _Name: string;\r\n    public get Name(): string\r\n    {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string)\r\n    {\r\n        this._Name = value;\r\n    }\r\n\r\n    protected _height = 0;\r\n    public get Height()\r\n    {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value)\r\n    {\r\n        this._height = value;\r\n    }\r\n    public get Right()\r\n    {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom()\r\n    {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left()\r\n    {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value)\r\n    {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n    public get Top()\r\n    {\r\n        return this._top;\r\n    }\r\n    public set Top(value)\r\n    {\r\n        this._top = value;\r\n    }\r\n    protected _width = 0;\r\n\r\n    public get Width()\r\n    {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value)\r\n    {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    public get Bound(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any\r\n    {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any)\r\n    {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string\r\n    {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string)\r\n    {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number\r\n    {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number)\r\n    {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point\r\n    {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point)\r\n    {\r\n        this._MouseDownPoint = value;\r\n    }\r\n\r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size\r\n    {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size)\r\n    {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode\r\n    {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode)\r\n    {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: number = 6;\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode\r\n    {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode)\r\n    {\r\n        this._StateMode_1 = value;\r\n    }\r\n\r\n    private _Selected: boolean;\r\n    public get Selected(): boolean {\r\n        return this._Selected;\r\n    }\r\n    public set Selected(value: boolean) {\r\n        this._Selected = value;\r\n    }\r\n\r\n\r\n    private _DesignMode: boolean = false;\r\n    public get DesignMode(): boolean\r\n    {\r\n        return this._DesignMode;\r\n    }\r\n    public set DesignMode(value: boolean)\r\n    {\r\n        this._DesignMode = value;\r\n    }\r\n\r\n    public get TopLeft(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect\r\n    {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect\r\n    {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect\r\n    {\r\n        let rectf = new Rect(\r\n            this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect\r\n    {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public GetData()\r\n    {\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n    }\r\n    constructor()\r\n    {\r\n    }\r\n    Refresh()\r\n    {\r\n        this.Grid.RePaint();\r\n    }\r\n    OnDraw(sender:any, g:Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    DoDraw(sender:any, g:Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n    DoDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n\r\n        if (this.BackColor != null)\r\n        {\r\n            g.FillRect(this.BackColor, this.Left, this.Top, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage))\r\n        {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n        if (this.Selected)\r\n        {\r\n            g.FillRectangleColor(\"gray\", this.TopLeft, Cursors.nw_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomRight, Cursors.nw_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.TopRight, Cursors.ne_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomLeft, Cursors.ne_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidRight, Cursors.e_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidLeft, Cursors.e_resize);\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidTop, Cursors.n_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidBottom, Cursors.n_resize);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    OnMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    OnMouseUp(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender:any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender:any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    Clone()\r\n    {\r\n\r\n    }\r\n    DoMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n\r\n        if (this.MouseDownSizeChanged(ve))\r\n        {\r\n            this.StateMode = StateMode.SIZE;\r\n            return true;\r\n        }\r\n\r\n        if (this.MouseDownMove(ve))\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    DoMouseUp(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    DoMouseMove(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.StateMode == StateMode.SIZE)\r\n        {\r\n            this.ChangedSize(ve);\r\n            this.Grid.RePaint();\r\n        }\r\n\r\n        if (this.StateMode == StateMode.MOVE)\r\n        {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            let ptorg = new Point(this.Left, this.Top);\r\n            this.Left = this.MouseDownSize.Width + x;\r\n            this.Top = this.MouseDownSize.Height + y;\r\n            let pttar = new Point(this.Left, this.Top);\r\n            this.LocationChanged(ptorg, pttar);\r\n            this.Grid.RePaint();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    MouseDownSizeChanged(ve: EventView)\r\n    {\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        this.MouseDownPoint = pt;\r\n        this.MouseDownSize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    MouseDownMove(ve: EventView): boolean\r\n    {\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (this.Bound.Contains(pt))\r\n        {\r\n            this.MouseDownPoint = pt;\r\n            this.MouseDownSize = new Size(this.Left, this.Top);\r\n            this.StateMode = StateMode.MOVE;\r\n            this.Grid.ClearSelect();\r\n            this.Selected = true;\r\n            this.Grid.RePaint();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ChangedSize(ve: EventView)\r\n    {\r\n        let location = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n        let ptorg = new Point(this.Left, this.Top);\r\n        let szieorg = new Size(this.Width, this.Height);\r\n        switch (this.SizeChangMode)\r\n        {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                let w1 = this.MouseDownSize.Width - sf.Width;\r\n                let h1 = this.MouseDownSize.Height - sf.Height;\r\n                if (w1 > 10 && h1 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width - sf.Width;\r\n                    this.Height = this.MouseDownSize.Height - sf.Height;\r\n                    this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                    this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                let w2 = this.MouseDownSize.Width + sf.Width;\r\n                let h2 = this.MouseDownSize.Height - sf.Height;\r\n                if (w2 > 10 && h2 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width + sf.Width;\r\n                    this.Height = this.MouseDownSize.Height - sf.Height;\r\n                    this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                let w3 = this.MouseDownSize.Width - sf.Width;\r\n                if (w3 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width - sf.Width;\r\n                    this.Left = this.MouseDownPoint.X + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                let w4 = this.MouseDownSize.Width + sf.Width;\r\n                if (w4 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                let w5 = this.MouseDownSize.Width - sf.Width;\r\n                let h5 = this.MouseDownSize.Height + sf.Height;\r\n                if (w5 > 10 && h5 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width - sf.Width;\r\n                    this.Height = this.MouseDownSize.Height + sf.Height;\r\n                    this.Left = this.MouseDownPoint.X + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n                let w6 = this.MouseDownSize.Width + sf.Width;\r\n                let h6 = this.MouseDownSize.Height + sf.Height;\r\n                if (w6 > 10 && h6 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width + sf.Width;\r\n                    this.Height = this.MouseDownSize.Height + sf.Height;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                let h7 = this.MouseDownSize.Height - sf.Height;\r\n                if (h7 > 10)\r\n                {\r\n                    this.Height = this.MouseDownSize.Height - sf.Height;\r\n                    this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                let h8 = this.MouseDownSize.Height + sf.Height;\r\n                if (h8 > 10)\r\n                {\r\n                    this.Height = this.MouseDownSize.Height + sf.Height;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let pttar = new Point(this.Left, this.Top);\r\n        this.LocationChanged(ptorg, pttar);\r\n        let szietar = new Size(this.Width, this.Height);\r\n        this.SizeChanged(szieorg, szietar);\r\n    }\r\n    //OnTimerInterval(): boolean\r\n    //{\r\n    //    this.Primitive.CloseTime();\r\n    //    return false;\r\n    //}\r\n    LocationChanged(ptorg: Point, pttar: Point)\r\n    {\r\n\r\n    }\r\n    SizeChanged(sizeorg: Size, sizetar: Size)\r\n    {\r\n\r\n    }\r\n    LocationOffset(x:any,y:any)\r\n    {\r\n        //let ptorg = new Point(this.Left, this.Top);\r\n        //this.Left = this.Left + x;\r\n        //this.Top = this.Top + y;\r\n        //let pttar = new Point(this.Left, this.Top);\r\n        //this.LocationChanged(ptorg, pttar);\r\n    }\r\n    SizeOffset(x:any, y:any)\r\n    {\r\n\r\n    }\r\n    SetZoom(zoom: Zoom): boolean\r\n    { \r\n        return false;\r\n    }\r\n    GetZoom(): Zoom\r\n    {\r\n        return null;\r\n    }\r\n\r\n\r\n}\r\n","import { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\n\r\nexport class DisplayableCircle extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.circ;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: { fill: '#33AECC', lineWidth: 5 },\r\n                shape: { r: 30, cx: 200, cy: 200 },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { fill: 'white' }, animate:\r\n                        { interval: 6000, value: { fill: '#33AECC' } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { r: 60 }, animate:\r\n                        { interval: 6000, value: { r: 30 } }\r\n                }]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n\r\n            this.DSC.style.option.shape.cx = this.Left + this.Width / 2;\r\n            this.DSC.style.option.shape.cy = this.Top + this.Width / 2;\r\n            this.DSC.style.option.shape.r = Math.abs(this.Width / 2);\r\n\r\n            g.DrawPrimitiveCircle(this.DSC.style);\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableCircle OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","import { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableImage extends Displayable   \r\n{\r\n    public get TypeName(): string\r\n    {\r\n        return DisplayableBuild.imag;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any\r\n    {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any)\r\n    {\r\n        this._dsc = value;\r\n    }\r\n\r\n    public GetData()\r\n    {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                    fill: 'rgba(255, 255, 255, 0)',\r\n                    image: './image/test/test.png',\r\n                } \r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: {\r\n                        interval: 6000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\", }\r\n                    }\r\n                } \r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.Width = 20;\r\n        this.Height = 20;\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        try\r\n        {\r\n            if (this.DoDrawBack(sender, g))\r\n            {\r\n                return true;\r\n            }\r\n            if (this.Selected)\r\n            {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            if (this.DSC == null)\r\n            {\r\n                this.DSC = {\r\n                    data: {\r\n\r\n                    },\r\n                    style: {\r\n                        option: {\r\n                            shape: {}\r\n                        }\r\n                    },\r\n                    controller: {\r\n\r\n                    },\r\n                };\r\n            }\r\n            this.DSC.style.option.style.x = this.Left;\r\n            this.DSC.style.option.style.y = this.Top;\r\n            this.DSC.style.option.style.width = this.Width;\r\n            this.DSC.style.option.style.height = this.Height;\r\n            g.DrawPrimitiveImage(this.DSC.style);\r\n\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"DisplayableLine OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.DoMouseDown(sender, e, ve))\r\n        {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint))\r\n        {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init)\r\n        {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender:any, e: MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.DoMouseUp(sender, e, ve))\r\n        {\r\n            return true;\r\n        }\r\n        if (this.DesignMode)\r\n        {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e: MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.DoMouseMove(sender, e, ve))\r\n        {\r\n            return true;\r\n        }\r\n        if (this.DesignMode)\r\n        {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom ;\r\n    SetZoom(zoom: Zoom): boolean\r\n    {\r\n        try\r\n        {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom\r\n    {\r\n        return this._zoom;\r\n    }\r\n}\r\n","\r\nimport { List } from \"../../Base/ArrayList\";\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { MouseButtons } from \"../../Base/MouseButtons\";\r\nimport { Point, Size, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableLine extends Displayable {\r\n    public Points: List<Point>;\r\n    private lastpoint: Point | null = null;\r\n    //private lasttime: Date;\r\n\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.line;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n            points: [] as any[],\r\n        };\r\n        let points: any[] = [];\r\n        if (this.Points != null) {\r\n            this.Points.forEach((point) => {\r\n                points.push([point.X, point.Y]);\r\n            });\r\n        }\r\n        data.points = points;\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n\r\n        let len = data.points.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let itemdata = data.points[i];\r\n            let x = itemdata[0];\r\n            let y = itemdata[1];\r\n            if (this.Points != null) {\r\n                this.Points.add(new Point(x, y));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.Points = new List<Point>();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                },\r\n                shape: {\r\n                    points: [] as any[],\r\n                    smooth: 0\r\n                },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 2500, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: { interval: 5000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\" } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { smooth: 1 },\r\n                    animate: { interval: 6000, value: { smooth: 0 } }\r\n                }\r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            let points: any[] = [];\r\n            let zoomx = 1;\r\n            let zoomy = 1;\r\n            if (this.Points != null) {\r\n                this.Points.forEach((point) => {\r\n                    points.push([(point.X * zoomx), (point.Y * zoomy)]);\r\n                });\r\n            }\r\n            if (this.DesignMode) {\r\n                if (this.lastpoint != null) {\r\n                    points.push([(this.lastpoint.X * zoomx), (this.lastpoint.Y * zoomy)]);\r\n                }\r\n            }\r\n            this.DSC.style.option.shape.points = points;\r\n            g.DrawPolyline(this.DSC.style);\r\n\r\n\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableLine OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (e.button == MouseButtons.Right) {\r\n            if (this.DesignMode) {\r\n                this.DesignMode = false;\r\n                this.RefreshRectSize();\r\n                return true;\r\n            }\r\n        }\r\n        if (this.init) {\r\n            this.init = false;\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            if (this.Points != null) {\r\n                this.Points.Add(pt);\r\n            }\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            if (this.Points != null) {\r\n                this.Points.Add(pt);\r\n            }\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            this.lastpoint = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DesignMode) {\r\n            this.DesignMode = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    RefreshRectSize() {\r\n        //let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        //this.Points.Add(pt);\r\n        let minx = 100000000;\r\n        let miny = 100000000;\r\n        let maxx = 0;\r\n        let maxy = 0;\r\n        let width = 0;\r\n        let height = 0;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            if (minx > pt.X) {\r\n                minx = pt.X;\r\n            }\r\n            if (miny > pt.Y) {\r\n                miny = pt.Y;\r\n            }\r\n\r\n            if (maxx < pt.X) {\r\n                maxx = pt.X;\r\n            }\r\n            if (maxy < pt.Y) {\r\n                maxy = pt.Y;\r\n            }\r\n        }\r\n        width = maxx - minx;\r\n        if (width < 6) {\r\n            width = 6;\r\n        }\r\n        height = maxy - miny;\r\n        if (height < 6) {\r\n            height = 6;\r\n        }\r\n        this.Left = minx;\r\n        this.Top = miny;\r\n        this.Width = width;\r\n        this.Height = height;\r\n    }\r\n\r\n    LocationChanged(ptorg: Point, pttar: Point) {\r\n        let w = pttar.X - ptorg.X;\r\n        let h = pttar.Y - ptorg.Y;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = pt.X + w;\r\n            pt.Y = pt.Y + h;\r\n        }\r\n    }\r\n    SizeChanged(sizeorg: Size, sizetar: Size) {\r\n        let w = sizetar.Width / sizeorg.Width;\r\n        let h = sizetar.Height / sizeorg.Height;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = (pt.X - this.Left) * w + this.Left;\r\n            pt.Y = (pt.Y - this.Top) * h + this.Top;\r\n        }\r\n    }\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            for (var i = 0; i < this.Points.Count; i++) {\r\n                let pt = this.Points.get(i);\r\n                pt.X = pt.X * zoom.Width;\r\n                pt.Y = pt.Y * zoom.Height;\r\n            }\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n    //public static timeuse = 600;\r\n    //OnTimerInterval(): boolean\r\n    //{\r\n    //    if (this.DesignMode)\r\n    //    {\r\n    //        if (this.lastpoint != null)\r\n    //        {\r\n    //            let time = (new Date().getTime() - this.lasttime.getTime());\r\n    //            if (time > DisplayableLine.timeuse)\r\n    //            {\r\n    //                let pt = this.lastpoint;\r\n    //                this.Points.Add(pt);\r\n    //                this.lasttime = new Date();\r\n    //                this.lastpoint = null;\r\n    //                this.Grid.RePaint();\r\n    //            }\r\n    //        }\r\n    //        return true;\r\n    //    }\r\n    //    this.Primitive.CloseTime();\r\n    //    return false;\r\n    //}\r\n\r\n}\r\n","\r\n\r\nimport { List } from \"../../Base/ArrayList\";\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { MouseButtons } from \"../../Base/MouseButtons\";\r\nimport { Point, Size, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayablePolygon extends Displayable {\r\n    public Points: List<Point>;\r\n    private lastpoint: Point | null = null;\r\n    //private lasttime: Date;\r\n\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.line;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n            points: [] as any[],\r\n        };\r\n        let points: any[] = [];\r\n        this.Points.forEach((point) => {\r\n            points.push([point.X, point.Y]);\r\n        });\r\n        data.points = points;\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n\r\n        let len = data.points.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let itemdata = data.points[i];\r\n            let x = itemdata[0];\r\n            let y = itemdata[1];\r\n            this.Points.add(new Point(x, y));\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.Points = new List<Point>();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                },\r\n                shape: {\r\n                    points: [] as any[],\r\n                    smooth: 0\r\n                },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 2500, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: { interval: 5000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\" } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { smooth: 1 },\r\n                    animate: { interval: 6000, value: { smooth: 0 } }\r\n                }\r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            let points: any[] = [];\r\n            let zoomx = 1;\r\n            let zoomy = 1;\r\n            this.Points.forEach((point) => {\r\n                points.push([(point.X * zoomx), (point.Y * zoomy)]);\r\n            });\r\n            if (this.DesignMode) {\r\n                if (this.lastpoint != null) {\r\n                    points.push([(this.lastpoint.X * zoomx), (this.lastpoint.Y * zoomy)]);\r\n                }\r\n            }\r\n            this.DSC.style.option.shape.points = points;\r\n            g.DrawPolyPolygon(this.DSC.style);\r\n\r\n\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DrawPolyPolygon OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (e.button == MouseButtons.Right) {\r\n            if (this.DesignMode) {\r\n                this.DesignMode = false;\r\n                this.RefreshRectSize();\r\n                return true;\r\n            }\r\n        }\r\n        if (this.init) {\r\n            this.init = false;\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Points.Add(pt);\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Points.Add(pt);\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            this.lastpoint = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DesignMode) {\r\n            this.DesignMode = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    RefreshRectSize() {\r\n        //let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        //this.Points.Add(pt);\r\n        let minx = 100000000;\r\n        let miny = 100000000;\r\n        let maxx = 0;\r\n        let maxy = 0;\r\n        let width = 0;\r\n        let height = 0;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            if (minx > pt.X) {\r\n                minx = pt.X;\r\n            }\r\n            if (miny > pt.Y) {\r\n                miny = pt.Y;\r\n            }\r\n\r\n            if (maxx < pt.X) {\r\n                maxx = pt.X;\r\n            }\r\n            if (maxy < pt.Y) {\r\n                maxy = pt.Y;\r\n            }\r\n        }\r\n        width = maxx - minx;\r\n        if (width < 6) {\r\n            width = 6;\r\n        }\r\n        height = maxy - miny;\r\n        if (height < 6) {\r\n            height = 6;\r\n        }\r\n        this.Left = minx;\r\n        this.Top = miny;\r\n        this.Width = width;\r\n        this.Height = height;\r\n    }\r\n\r\n    LocationChanged(ptorg: Point, pttar: Point) {\r\n        let w = pttar.X - ptorg.X;\r\n        let h = pttar.Y - ptorg.Y;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = pt.X + w;\r\n            pt.Y = pt.Y + h;\r\n        }\r\n    }\r\n    SizeChanged(sizeorg: Size, sizetar: Size) {\r\n        let w = sizetar.Width / sizeorg.Width;\r\n        let h = sizetar.Height / sizeorg.Height;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = (pt.X - this.Left) * w + this.Left;\r\n            pt.Y = (pt.Y - this.Top) * h + this.Top;\r\n        }\r\n    }\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            for (var i = 0; i < this.Points.Count; i++) {\r\n                let pt = this.Points.get(i);\r\n                pt.X = pt.X * zoom.Width;\r\n                pt.Y = pt.Y * zoom.Height;\r\n            }\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n    //public static timeuse = 600;\r\n    //OnTimerInterval(): boolean\r\n    //{\r\n    //    if (this.DesignMode)\r\n    //    {\r\n    //        if (this.lastpoint != null)\r\n    //        {\r\n    //            let time = (new Date().getTime() - this.lasttime.getTime());\r\n    //            if (time > DisplayableLine.timeuse)\r\n    //            {\r\n    //                let pt = this.lastpoint;\r\n    //                this.Points.Add(pt);\r\n    //                this.lasttime = new Date();\r\n    //                this.lastpoint = null;\r\n    //                this.Grid.RePaint();\r\n    //            }\r\n    //        }\r\n    //        return true;\r\n    //    }\r\n    //    this.Primitive.CloseTime();\r\n    //    return false;\r\n    //}\r\n\r\n}\r\n","\r\n\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableRect extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.rect;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                    fill: 'rgba(255, 255, 255, 0)',\r\n                },\r\n                shape: {\r\n                    x: 110,\r\n                    y: 10,\r\n                    width: 101,\r\n                    height: 100,\r\n                    smooth: 1,\r\n                    r: 10\r\n                },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: {\r\n                        interval: 6000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\", }\r\n                    }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { smooth: 0 },\r\n                    animate: { interval: 6000, value: { smooth: 1 } },\r\n                }\r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            if (this.DSC == null) {\r\n                this.DSC = {\r\n                    data: {\r\n\r\n                    },\r\n                    style: {\r\n                        option: {\r\n                            shape: {}\r\n                        }\r\n                    },\r\n                    controller: {\r\n\r\n                    },\r\n                };\r\n            }\r\n            this.DSC.style.option.shape.x = this.Left;\r\n            this.DSC.style.option.shape.y = this.Top;\r\n            this.DSC.style.option.shape.width = this.Width;\r\n            this.DSC.style.option.shape.height = this.Height;\r\n            g.DrawPrimitiveRect(this.DSC.style);\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableLine OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","\r\n\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableSector extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.sect;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: { fill: '#33AECC', lineWidth: 5 },\r\n                shape: { r: 30, r0: 20, cx: 200, cy: 200, startAngle: 3.14, endAngle: 6.14 },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { fill: 'white' }, animate:\r\n                        { interval: 6000, value: { fill: '#33AECC' } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { r: 60 }, animate:\r\n                        { interval: 6000, value: { r: 30 } }\r\n                }]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n\r\n            this.DSC.style.option.shape.cx = this.Left + this.Width / 2;\r\n            this.DSC.style.option.shape.cy = this.Top + this.Width / 2;\r\n            this.DSC.style.option.shape.r = Math.abs(this.Width / 2);\r\n\r\n            g.DrawPrimitiveSector(this.DSC.style);\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableCircle OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","\r\n\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableText extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.text;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.DSC.style.option.style.text;\r\n    }\r\n    public set Text(value: string) {\r\n        this.DSC.style.option.style.text = value;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                rotation: 0,\r\n                position: [600, 120],\r\n                style: {\r\n                    text: '',\r\n                    fill: '#ffe',\r\n                    font: '18px Arial',\r\n                    padding: [10, 10, 10, 10],\r\n                    backgroundColor: 'rgba(124, 0, 123, 0.4)',\r\n                    borderColor: '#112233',\r\n                    borderWidth: 2,\r\n                    borderRadius: 5,\r\n                    textShadowBlur: 2,\r\n                    textShadowColor: '#893e95',\r\n                    textShadowOffsetX: 2,\r\n                    textShadowOffsetY: 4,\r\n                    boxShadowBlur: 5,\r\n                    boxShadowColor: '#1099ee',\r\n                    boxShadowOffsetX: 5,\r\n                    boxShadowOffsetY: 10\r\n                }\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { textShadowBlur: 15, textShadowColor: \"white\", borderColor: 'white', },\r\n                    animate: { type: \"style\", interval: 6000, value: { textShadowBlur: 15, textShadowColor: \"#ffe\", borderColor: '#112233', } }\r\n                }]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n        this.Width = 200;\r\n        this.Height = 30;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n\r\n            this.DSC.style.option.position = [this.Left, this.Top];\r\n            this.DSC.style.option.style.text = this.Text;\r\n            g.DrawPrimitiveText(this.DSC.style);// this.Animation); \r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableCircle OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","import { Displayable } from \"./Displayable\";\r\nimport { DisplayableCircle } from \"./DisplayableCircle\";\r\nimport { DisplayableImage } from \"./DisplayableImage\";\r\nimport { DisplayableLine } from \"./DisplayableLine\";\r\nimport { DisplayablePolygon } from \"./DisplayablePolygon\";\r\nimport { DisplayableRect } from \"./DisplayableRect\";\r\nimport { DisplayableSector } from \"./DisplayableSector\";\r\nimport { DisplayableText } from \"./DisplayableText\";\r\n\r\nvar DisplayableBuild =\r\n{\r\n    line: \"line\",\r\n    rect: \"rect\",\r\n    text: \"text\",\r\n    circ: \"circ\",\r\n    imag: \"imag\",\r\n    sect: \"sect\",\r\n    poly: \"poly\",\r\n    build: function (typename: string): Displayable {\r\n        let model: Displayable;\r\n        switch (typename) {\r\n            case DisplayableBuild.line:\r\n                model = new DisplayableLine();\r\n                break;\r\n            case DisplayableBuild.rect:\r\n                model = new DisplayableRect();\r\n                break;\r\n            case DisplayableBuild.text:\r\n                model = new DisplayableText();\r\n                break;\r\n            case DisplayableBuild.circ:\r\n                model = new DisplayableCircle();\r\n                break;\r\n            case DisplayableBuild.imag:\r\n                model = new DisplayableImage();\r\n                break;\r\n            case DisplayableBuild.imag:\r\n                model = new DisplayableSector();\r\n                break;\r\n            case DisplayableBuild.poly:\r\n                model = new DisplayablePolygon();\r\n                break;\r\n            default:\r\n                model = new DisplayableRect();\r\n                break;\r\n        }\r\n        return model;\r\n    }\r\n\r\n}\r\nexport { DisplayableBuild }","import { List } from \"../../Base/ArrayList\";\r\nimport { Displayable } from \"./Displayable\";\r\n\r\n \r\n export class DisplayableList extends List<Displayable>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(row:any)\r\n    {\r\n        this.remove(row);\r\n    }\r\n \r\n    Get(index:any): Displayable\r\n    {\r\n        return this.get(index);\r\n    }\r\n\r\n}\r\n","import { Palette } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { Point, Rect, Size, Zoom } from \"../Base/Point\";\r\nimport { IViewEvent, IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcel } from \"../main/DataExcel\";\r\nimport { StateMode } from \"../View/MoveView\";\r\nimport { SizeChangMode } from \"../View/ReSizeView\";\r\nimport { Displayable } from \"./Displayable/Displayable\";\r\nimport { DisplayableBuild } from \"./Displayable/DisplayableBuild\";\r\nimport { DisplayableCircle } from \"./Displayable/DisplayableCircle\";\r\nimport { DisplayableImage } from \"./Displayable/DisplayableImage\";\r\nimport { DisplayableLine } from \"./Displayable/DisplayableLine\";\r\nimport { DisplayableList } from \"./Displayable/DisplayableList\";\r\nimport { DisplayablePolygon } from \"./Displayable/DisplayablePolygon\";\r\nimport { DisplayableRect } from \"./Displayable/DisplayableRect\";\r\nimport { DisplayableSector } from \"./Displayable/DisplayableSector\";\r\nimport { DisplayableText } from \"./Displayable/DisplayableText\";\r\n\r\nexport class Primitive implements IViewEvent, IZoom {\r\n    public Grid: DataExcel;\r\n    private _Name: string;\r\n    public get Name(): string {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string) {\r\n        this._Name = value;\r\n    }\r\n\r\n    protected _height = 0;\r\n    public get Height() {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value) {\r\n        this._height = value;\r\n    }\r\n    public get Right() {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom() {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left() {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value) {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public set Top(value) {\r\n        this._top = value;\r\n    }\r\n    protected _width = 0;\r\n\r\n    public get Width() {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value) {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    public get Bound(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string) {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number) {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point) {\r\n        this._MouseDownPoint = value;\r\n    }\r\n\r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size) {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode) {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: number = 6;\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode) {\r\n        this._StateMode_1 = value;\r\n    }\r\n\r\n    public Selected: boolean;\r\n    public get TopLeft(): Rect {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect {\r\n        let rectf = new Rect(\r\n            this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect {\r\n        let rectf = new Rect(this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public Displayables: DisplayableList;\r\n\r\n    public GetData() {\r\n        let data = {\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            displayables: [] as any[],\r\n\r\n        };\r\n        this.Displayables.forEach((chart: Displayable) => {\r\n            data.displayables.push(chart.GetData());\r\n        });\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        let len = data.displayables.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let itemdata = data.displayables[i];\r\n            let item = DisplayableBuild.build(itemdata.typename);\r\n            if (item != null) {\r\n                item.Grid = grid;\r\n                item.Primitive = this;\r\n                item.SetData(grid, itemdata);\r\n                this.Displayables.Add(item);\r\n            }\r\n        }\r\n    }\r\n    constructor() {\r\n        this.Displayables = new DisplayableList();\r\n    }\r\n    Mixin(obj: any) {\r\n\r\n    }\r\n\r\n    OnDraw(sender: any, g: Graphics): boolean {\r\n        return false;\r\n    }\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, this.Left, this.Top, this.Width, this.Height);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRectangleColor(\"gray\", this.TopLeft, Cursors.nw_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomRight, Cursors.nw_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.TopRight, Cursors.ne_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomLeft, Cursors.ne_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidRight, Cursors.e_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidLeft, Cursors.e_resize);\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidTop, Cursors.n_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidBottom, Cursors.n_resize);\r\n        }\r\n        try {\r\n            for (var i = 0; i < this.Displayables.Count; i++) {\r\n                let display = this.Displayables.Get(i);\r\n                display.OnDrawBack(sender, g);\r\n\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseDown(sender, e, ve);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        for (var i = 0; i < this.Displayables.Count; i++) {\r\n            let disp = this.Displayables.Get(i);\r\n            if (disp == null) {\r\n                DataExcelConsole.log(\"Primitive OnMouseDown error\", e);\r\n                continue;\r\n            }\r\n            let res = disp.OnMouseDown(sender, e, ve);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        if (this.SizeChangedMouseDown(ve)) {\r\n            this.StateMode = StateMode.SIZE;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.Bound.Contains(ve.offsetPoint)) {\r\n            this.MouseDownPoint = ve.offsetPoint;\r\n            this.MouseDownSize = new Size(this.Left, this.Top);\r\n            this.StateMode = StateMode.MOVE;\r\n            this.Grid.ClearSelect();\r\n            this.Selected = true;\r\n\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseUp(sender, e, ve);\r\n            if (res) {\r\n                ve.NeedRePaint = true;\r\n                ve.CurrentEvent = this;\r\n                return res;\r\n            }\r\n        }\r\n        this.CurrentDiaplay = null;\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseMove(sender, e, ve);\r\n            if (res) {\r\n                ve.NeedRePaint = true;\r\n                ve.CurrentEvent = this;\r\n                return res;\r\n            }\r\n        }\r\n        if (this.StateMode == StateMode.SIZE) {\r\n            this.ChangedSize(ve);\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n\r\n        if (this.StateMode == StateMode.MOVE) {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            this.Left = this.MouseDownSize.Width + x;\r\n            this.Top = this.MouseDownSize.Height + y;\r\n            this.Displayables.forEach((item: Displayable) => { item.LocationOffset(x, y) });\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseDoubleClick(sender, e, ve);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnKeyPress(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n\r\n    Clear() {\r\n        try {\r\n            this.CurrentDiaplay = null;\r\n            this.Displayables.Clear();\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"Primitive Clear\", e);\r\n        }\r\n\r\n    }\r\n    Clone() {\r\n\r\n    }\r\n    SizeChangedMouseDown(ve: EventView) {\r\n        let pt = ve.offsetPoint;\r\n        this.MouseDownPoint = ve.offsetPoint;\r\n        this.MouseDownSize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    ChangedSize(ve: EventView) {\r\n        let location = ve.offsetPoint;// e.Location;\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n\r\n        switch (this.SizeChangMode) {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public CurrentDiaplay: Displayable | null = null;\r\n    //private timeid: number = -1;\r\n    //timer\r\n    //OpenTime()\r\n    //{\r\n    //    if (this.timeid > -1)\r\n    //    {\r\n    //        return;\r\n    //    }\r\n    //    this.timeid = setInterval(this.OnTimerInterval, 100,this);\r\n    //}\r\n    //CloseTime()\r\n    //{\r\n    //    try\r\n    //    {\r\n    //        if (this.timeid==-1)\r\n    //        {\r\n    //            return;\r\n    //        }\r\n    //        clearInterval(this.timeid);\r\n    //        this.timeid = -1;\r\n    //    } catch (e)\r\n    //    {\r\n    //        DataExcelConsole.log(\"CloseTime\", e);     \r\n    //    }\r\n    //}\r\n    //OnTimerInterval(obj)\r\n    //{\r\n    //    try\r\n    //    {\r\n    //        let pri = obj as Primitive;\r\n    //        if (pri.CurrentDiaplay != null)\r\n    //        {\r\n    //            let res = pri.CurrentDiaplay.OnTimerInterval();\r\n    //            if (res)\r\n    //            {\r\n    //                return res;\r\n    //            }\r\n    //        }\r\n    //        pri.CloseTime();\r\n    //    } catch (e)\r\n    //    {\r\n    //        DataExcelConsole.log(\"OnTimerInterval\", e);\r\n    //    } \r\n    //}\r\n    //displayable\r\n    NewDiaplayLine() {\r\n        let item = new DisplayableLine();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDiaplayRect() {\r\n        let item = new DisplayableRect();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDiaplayText() {\r\n        let item = new DisplayableText();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDiaplayCircle() {\r\n        let item = new DisplayableCircle();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDisplayableImage() {\r\n        let item = new DisplayableImage();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDisplayablePolygon() {\r\n        let item = new DisplayablePolygon();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDisplayableSector() {\r\n        let item = new DisplayableSector();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n            this.Displayables.forEach((value: Displayable) => {\r\n                value.SetZoom(zoom);\r\n            });\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { Primitive } from \"./Primitive\";\r\n\r\n \r\nexport class PrimitiveList extends List<Primitive>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(row:any)\r\n    {\r\n        this.remove(row);\r\n    }\r\n \r\n    Get(index:any): Primitive\r\n    {\r\n        return this.get(index);\r\n    }\r\n\r\n}\r\n","enum StringAlignment\r\n{ \r\n    Near = 0, \r\n    Center = 1, \r\n    Far = 2\r\n};\r\nexport {StringAlignment}","﻿import { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { DataExcelDefaultValue } from \"../Base/MouseButtons\";\r\nimport { Rect } from \"../Base/Point\";\r\nimport { StringAlignment } from \"../Base/StringAlignment\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\nimport { DataExcelRow } from \"./DataExcelRow\";\r\nexport class DataExcelBackCell  \r\n{\r\n\r\n    public get Row(): DataExcelRow\r\n    {\r\n        return this._begincell.Row;\r\n    }\r\n    public set Row(cell: DataExcelRow)\r\n    {\r\n        this.Grid = cell.Grid;\r\n        this._begincell.Row = cell;\r\n    }\r\n    public get Column(): DataExcelColumn\r\n    {\r\n        return this._begincell.Column;\r\n    }\r\n    public set Column(cell: DataExcelColumn)\r\n    {\r\n        this._begincell.Column = cell;\r\n    }\r\n     \r\n    private _Released: boolean = false;\r\n    public get Released(): boolean\r\n    {\r\n        return this._Released;\r\n    }\r\n    public set Released(value: boolean)\r\n    {\r\n        this._Released = value;\r\n    }\r\n    public Grid: DataExcel;\r\n    private _begincell: DataExcelCell;\r\n    public get BeginCell(): DataExcelCell\r\n    {\r\n        return this._begincell;\r\n    }\r\n    public set BeginCell(cell: DataExcelCell)\r\n    {\r\n        this.Grid = cell.Grid;\r\n        this._begincell = cell;\r\n    }\r\n\r\n    private _endcell: DataExcelCell;\r\n    public get EndCell(): DataExcelCell\r\n    {\r\n        return this._endcell;\r\n    }\r\n    public set EndCell(cell: DataExcelCell)\r\n    {\r\n        this._endcell = cell;\r\n        let firstcell = this._begincell;\r\n        let endcell = this._endcell;\r\n        let rmin = Math.min(firstcell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(firstcell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(firstcell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(firstcell.Column.Index, endcell.Column.Index);\r\n        this._begincell = firstcell.Grid.GetCellByIndex(rmin, cmin);\r\n        this._begincell.VerticalAlignment = StringAlignment.Center;\r\n        this._begincell.HorizontalAlignment = StringAlignment.Center;\r\n        this._endcell = firstcell.Grid.GetCellByIndex(rmax, cmax);\r\n        this.Refresh();\r\n        this.ReSetCellParent();\r\n    }\r\n\r\n\r\n    public MaxRowIndex(): number\r\n    {\r\n        return this.EndCell.Row.Index;\r\n    }\r\n    public MaxColumnIndex(): number\r\n    {\r\n        return this.EndCell.Column.Index;\r\n    }\r\n\r\n    public get Visible(): boolean\r\n    {\r\n        return this._begincell.Visible;\r\n    }\r\n    public set Visible(value: boolean)\r\n    {\r\n        this._begincell.Visible = value;\r\n    }\r\n \r\n    public GetData()\r\n    {\r\n        let data = {\r\n            begincellrowindex: this.BeginCell.Row.Index,\r\n            begincellcolumnindex: this.BeginCell.Column.Index,\r\n            endcellrowindex: this.EndCell.Row.Index,\r\n            endcellcolumnindex: this.EndCell.Column.Index,\r\n        };\r\n        return data;\r\n    }\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n        let begincell = grid.GetCellByIndex(data.begincellrowindex, data.begincellcolumnindex);\r\n        let endcell = grid.GetCellByIndex(data.endcellrowindex, data.endcellcolumnindex);\r\n        this.BeginCell = begincell;\r\n        this.EndCell = endcell;\r\n    }\r\n\r\n    Refresh()\r\n    {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        this.Top = begincell.Top;\r\n        this.Left = begincell.Left;\r\n        let width = 0;\r\n        for (let i = begincell.Column.Index; i <= endcell.Column.Index; i++)\r\n        {\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column != null)\r\n            {\r\n                if (column.Visible)\r\n                {\r\n                    width = column.Width + width;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.Width = width;\r\n        let heigth = 0;\r\n        for (let i = begincell.Row.Index; i <= endcell.Row.Index; i++)\r\n        {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row != null)\r\n            {\r\n                if (row.Visible)\r\n                {\r\n                    heigth = row.Height + heigth;\r\n                }\r\n            }\r\n        }\r\n        this.Height = heigth;\r\n\r\n        let rmin = begincell.Row.Index;\r\n        let cmin = begincell.Column.Index;\r\n        let rmax = endcell.Row.Index;\r\n        let cmax = endcell.Column.Index;\r\n\r\n        rmin = Math.max(rmin, this.Grid.FirstDisplayedRowIndex);\r\n        cmin = Math.max(cmin, this.Grid.FirstDisplayedColumnIndex);\r\n        rmax = Math.min(rmax, this.Grid.EndDisplayedRowIndex);\r\n        cmax = Math.min(cmax, this.Grid.EndDisplayedColumnIndex);\r\n\r\n        this.VisableTop = this.Top;\r\n        this.VisableLeft = this.Left;\r\n        this.freshVisableSize(rmin, cmin, rmax, cmax);\r\n        this.freshVisablePointTop(begincell.Row.Index, this.Grid.FirstDisplayedRowIndex);\r\n        this.freshVisablePointLeft(begincell.Column.Index, this.Grid.FirstDisplayedColumnIndex);\r\n\r\n    }\r\n    private freshVisablePointTop(rindex:any, findex:any)\r\n    {\r\n        if (rindex >= findex)\r\n        {\r\n            let row = this.Grid.Rows.Get(rindex);\r\n            if (row == null)\r\n            {\r\n                this.VisableTop = DataExcelDefaultValue.dafaultRowHeight;\r\n                this.Top = DataExcelDefaultValue.dafaultRowHeight;\r\n            }\r\n            else\r\n            {\r\n                this.VisableTop = row.Top;\r\n                this.Top = row.Top;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let row = this.Grid.Rows.Get(findex);\r\n            let top = 0;\r\n            if (row == null)\r\n            {\r\n                this.VisableTop = DataExcelDefaultValue.dafaultRowHeight;\r\n                top = DataExcelDefaultValue.dafaultRowHeight;\r\n            }\r\n            else\r\n            {\r\n                this.VisableTop = row.Top;\r\n                top = row.Top;\r\n            }\r\n            for (let i = findex - 1; i >= rindex; i--)\r\n            {\r\n                row = this.Grid.Rows.Get(i);\r\n                if (row != null)\r\n                {\r\n                    if (row.Visible)\r\n                    {\r\n                        top = top - row.Height;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Top = top;\r\n        }\r\n    }\r\n    private freshVisablePointLeft(cindex:any, findex:any)\r\n    {\r\n        if (cindex >= findex)\r\n        {\r\n            let column = this.Grid.Columns.Get(cindex);\r\n            if (column == null)\r\n            {\r\n                this.VisableLeft = DataExcelDefaultValue.defaultColumnWidth;\r\n                this.Left = DataExcelDefaultValue.defaultColumnWidth;\r\n            }\r\n            else\r\n            {\r\n                this.VisableLeft = column.Left;\r\n                this.Left = column.Left;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let column = this.Grid.Columns.Get(findex);\r\n            let left = 0;\r\n            if (column == null)\r\n            {\r\n                this.VisableLeft = DataExcelDefaultValue.defaultColumnWidth;\r\n                left = DataExcelDefaultValue.defaultColumnWidth;\r\n            }\r\n            else\r\n            {\r\n                this.VisableLeft = column.Left;\r\n                left = column.Left;\r\n            }\r\n            for (let i = findex - 1; i >= cindex; i--)\r\n            {\r\n                column = this.Grid.Columns.Get(i);\r\n                if (column != null)\r\n                {\r\n                    if (column.Visible)\r\n                    {\r\n                        left = left - column.Width;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Left = left;\r\n        }\r\n    }\r\n    private freshVisableSize(rmin:number, cmin:number, rmax:number, cmax:number)\r\n    {\r\n        let width = 0;\r\n        for (let i = cmin; i <= cmax; i++)\r\n        {\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column != null)\r\n            {\r\n                if (column.Visible)\r\n                {\r\n                    width = column.Width + width;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.VisableWidth = width;\r\n\r\n        let heigth = 0;\r\n        for (let i = rmin; i <= rmax; i++)\r\n        {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row != null)\r\n            {\r\n                if (row.Visible)\r\n                {\r\n                    heigth = row.Height + heigth;\r\n                }\r\n            }\r\n        }\r\n        this.VisableHeight = heigth;\r\n    }\r\n \r\n    private _left: number = 0;\r\n    private _top: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    public get Left()\r\n    {\r\n        return this._left;\r\n    }\r\n    public get Top()\r\n    {\r\n        return this._top;\r\n    }\r\n    public get Width()\r\n    {\r\n        return this._width;\r\n    }\r\n    public get Height()\r\n    {\r\n        return this._height;\r\n    }\r\n    public set Left(value: number)\r\n    {\r\n        this._left = value;\r\n    }\r\n    public set Top(value: number)\r\n    {\r\n        this._top = value;\r\n    }\r\n    public set Width(value: number)\r\n    {\r\n        this._width = value;\r\n    }\r\n    public set Height(value: number)\r\n    {\r\n        this._height = value;\r\n    }\r\n    public get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _VisableWidth: number = 0;\r\n    public get VisableWidth(): number\r\n    {\r\n        return this._VisableWidth;\r\n    }\r\n    public set VisableWidth(value: number)\r\n    {\r\n        this._VisableWidth = value;\r\n    }\r\n    private _VisableHeight: number = 0;\r\n    public get VisableHeight(): number\r\n    {\r\n        return this._VisableHeight;\r\n    }\r\n    public set VisableHeight(value: number)\r\n    {\r\n        this._VisableHeight = value;\r\n    }\r\n    private _VisableLeft: number = 0;\r\n    public get VisableLeft(): number\r\n    {\r\n        return this._VisableLeft;\r\n    }\r\n    public set VisableLeft(value: number)\r\n    {\r\n        this._VisableLeft = value;\r\n    }\r\n    private _VisableTop: number = 0;\r\n    public get VisableTop(): number\r\n    {\r\n        return this._VisableTop;\r\n    }\r\n    public set VisableTop(value: number)\r\n    {\r\n        this._VisableTop = value;\r\n    }\r\n \r\n \r\n    private _BackColor: any;\r\n    public get BackColor(): any\r\n    { \r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any)\r\n    {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string\r\n    {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string)\r\n    {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number\r\n    {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number)\r\n    {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    constructor()\r\n    { \r\n    }\r\n\r\n \r\n    private ondrawbacktimes: number = 0;\r\n    OnDrawBack(sender:any, g: Graphics)\r\n    {\r\n        if (this.ondrawbacktimes >= g.drawTimes)\r\n        {\r\n            return;\r\n        }\r\n        this.ondrawbacktimes = g.drawTimes;\r\n        if (!this.Visible)\r\n            return;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\"); \r\n        if (this.BackColor != null)\r\n        {\r\n            g.FillRect(this.BackColor, this.VisableLeft, this.VisableTop, this.VisableWidth, this.VisableHeight);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage))\r\n        {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n    }\r\n \r\n    ReSetCellParent()\r\n    {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n        if (this._begincell == null)\r\n        {\r\n            return;\r\n        }\r\n        if (this._endcell == null)\r\n        {\r\n            return;\r\n        }\r\n        for (let i = rmin; i <= rmax; i++)\r\n        {\r\n            for (let j = cmin; j <= cmax; j++)\r\n            {\r\n                let cell = this.Grid.GetCellByIndex(i, j);\r\n                if (cell !== null)\r\n                {\r\n                    cell.OwnBackCell = this;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { List } from '../Base/ArrayList';\r\nimport {DataExcelBackCell} from './DataExcelBackCell'\r\nexport class DataExcelBackCellList extends List<DataExcelBackCell>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(column:any)\r\n    {\r\n        this.remove(column);\r\n    }\r\n \r\n    Get(index:any): DataExcelBackCell\r\n    {\r\n        return this.get(index);\r\n    }\r\n    GetByColumnIndex(index:any): any\r\n    {\r\n        var count = this.Count;\r\n        for (var i = 0; i < count; i++)\r\n        {\r\n            var cell = this.Get(i);\r\n            if (cell.Column.Index == index)\r\n            {\r\n                return cell;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    Refresh()\r\n    {\r\n        for (var i in this)\r\n        {\r\n            let cell = this[i] as DataExcelBackCell;\r\n            cell.Refresh();\r\n        }\r\n    }\r\n}\r\n","enum EditMode\r\n{\r\n    NULL = 0, \r\n    IME = 2,\r\n    F2 = 4,\r\n    DoubleClick = 8,\r\n    Edit = 16, \r\n    Focused = 32,\r\n    KeyDown = 64,\r\n    Click = 128,\r\n    MouseEnter = 256,\r\n    Default = IME | F2 | DoubleClick,\r\n    ALL = IME | F2 | DoubleClick | Focused | KeyDown | Click\r\n}\r\nexport {EditMode}","﻿import { GridLineStyle } from \"../Base/CellHeaderStyle\";\r\nimport { CheckState } from \"../Base/ConstantValue\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { EditMode } from \"../Base/EditMode\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { Rect, Point, Zoom } from \"../Base/Point\";\r\nimport { StringAlignment } from \"../Base/StringAlignment\";\r\nimport { DefaultEdit } from \"../Base/Tool\";\r\nimport { IViewEvent, IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCellEditBase } from \"../Edit/DataExcelCellEditBase\";\r\nimport { DataExcelRow } from \"../export\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelBackCell } from \"./DataExcelBackCell\";\r\nimport { DataExcelBackCellList } from \"./DataExcelBackCellList\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\nimport { DataExcelMergeCell } from \"./DataExcelMergeCell\";\r\nexport class DataExcelCell implements IViewEvent, IZoom\r\n{\r\n    private _Row: DataExcelRow;\r\n    public get Row(): DataExcelRow\r\n    {\r\n        return this._Row;\r\n    }\r\n    public set Row(value: DataExcelRow)\r\n    {\r\n        this._Row = value;\r\n    }\r\n    private _Column: DataExcelColumn;\r\n    public get Column(): DataExcelColumn\r\n    {\r\n        return this._Column;\r\n    }\r\n    public set Column(value: DataExcelColumn)\r\n    {\r\n        this._Column = value;\r\n    }\r\n    private _OwnMergeCell: any;\r\n    public get OwnMergeCell(): any\r\n    {\r\n        if (this._OwnMergeCell != null)\r\n        {\r\n            if (this._OwnMergeCell.Released)\r\n            {\r\n                this._OwnMergeCell = null;\r\n            }\r\n        }\r\n        return this._OwnMergeCell;\r\n    }\r\n    public set OwnMergeCell(value: DataExcelMergeCell|null)\r\n    {\r\n        this._OwnMergeCell = value;\r\n    }\r\n\r\n    private _OwnBackCell: DataExcelBackCell|null;\r\n    public get OwnBackCell(): any\r\n    {\r\n        if (this._OwnBackCell != null)\r\n        {\r\n            if (this._OwnBackCell.Released)\r\n            {\r\n                this._OwnBackCell = null;\r\n            }\r\n        }\r\n        return this._OwnBackCell;\r\n    }\r\n    public set OwnBackCell(value: DataExcelBackCell|null)\r\n    {\r\n        this._OwnBackCell = value;\r\n    }\r\n\r\n    public MaxRowIndex(): number\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.MaxRowIndex();\r\n        }\r\n        return this.Row.Index;\r\n    }\r\n    public MaxColumnIndex(): number\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.MaxColumnIndex();\r\n        }\r\n        return this.Column.Index;\r\n    }\r\n    public Selected: boolean;\r\n    public ShowFocusedSelectBorder: boolean = true;\r\n    public Grid: DataExcel;\r\n    public EditMode: number = EditMode.Default;\r\n    private _ReadOnly: number = CheckState.Unkown;\r\n    public get ReadOnly(): number\r\n    {\r\n        try\r\n        {\r\n            if (this.Column == null)\r\n            {\r\n                DataExcelConsole.log(\"ReadOnly\", this.Column);\r\n            }\r\n            if (this._ReadOnly == CheckState.Unkown)\r\n            {\r\n                if (this.Column.Index > 1)\r\n                    return this.Column.ReadOnly;\r\n                return this.Row.ReadOnly;\r\n            }\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"ReadOnly\", e);\r\n        }\r\n        return this._ReadOnly;\r\n    }\r\n    public set ReadOnly(value: number)\r\n    {\r\n        this._ReadOnly = value;\r\n    }\r\n    private _Style: any;\r\n    public get Style(): any\r\n    {\r\n        return this._Style;\r\n    }\r\n    public set Style(value: any)\r\n    {\r\n        this._Style = value;\r\n    }\r\n    private _font: FontFace;\r\n    public get Font(): FontFace\r\n    {\r\n        if (this._font == null)\r\n        {\r\n            if (this.Column.Index > 1)\r\n                return this.Column.Font;\r\n            return this.Row.Font;\r\n        }\r\n        return this._font;\r\n    }\r\n    public set Font(value: FontFace)\r\n    {\r\n        this._font = value;\r\n    }\r\n    private _ForeColor: any;\r\n    public get ForeColor(): any\r\n    {\r\n        if (this._ForeColor == null)\r\n        {\r\n            return this.Grid.ForeColor;\r\n        }\r\n        return this._ForeColor;\r\n    }\r\n    public set ForeColor(value: any)\r\n    {\r\n        this._ForeColor = value;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any\r\n    {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any)\r\n    {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string\r\n    {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string)\r\n    {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number\r\n    {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number)\r\n    {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _Format: string;\r\n    public get Format(): string\r\n    {\r\n        return this._Format;\r\n    }\r\n    public set Format(value: string)\r\n    {\r\n        this._Format = value;\r\n    }\r\n\r\n\r\n    private _FormatType: string;\r\n    public get FormatType(): string\r\n    {\r\n        return this._FormatType;\r\n    }\r\n    public set FormatType(value: string)\r\n    {\r\n        this._FormatType = value;\r\n    }\r\n\r\n    private _id: string;\r\n    public get ID(): string\r\n    {\r\n        return this._id;\r\n    }\r\n    public set ID(value: string)\r\n    {\r\n        if (ConvertHelper.StringIsNullOrEmpty(value))\r\n        {\r\n            this.Grid.IDCells.Remove(this._id);\r\n            this._id = \"\";\r\n            return;\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this._id))\r\n        {\r\n            this.Grid.IDCells.Remove(this._id);\r\n        }\r\n        this._id = value;\r\n        this.Grid.IDCells.set(this._id, this);\r\n    }\r\n\r\n    private _Visible: boolean = true;\r\n    public get Visible(): boolean\r\n    {\r\n        return this._Visible;\r\n    }\r\n    public set Visible(value: boolean)\r\n    {\r\n        this._Visible = value;\r\n    }\r\n    private _Text: string;\r\n    public get Text(): string\r\n    {\r\n        return this._Text;\r\n    }\r\n    public set Text(value: string)\r\n    {\r\n        this._Text = value;\r\n    }\r\n    private _Value: any;\r\n    public get Value(): any\r\n    {\r\n        return this._Value;\r\n    }\r\n    public set Value(value: any)\r\n    {\r\n        this._Value = value;\r\n    }\r\n    private _AutoMultiline: boolean = true;\r\n    public get AutoMultiline(): boolean\r\n    {\r\n        return this._AutoMultiline;\r\n    }\r\n    public set AutoMultiline(value: boolean)\r\n    {\r\n        this._AutoMultiline = value;\r\n\r\n\r\n    }\r\n    private _LeftLineStyle: any;\r\n    public get LeftLineStyle(): any\r\n    {\r\n        return this._LeftLineStyle;\r\n    }\r\n    public set LeftLineStyle(value: any)\r\n    {\r\n        this._LeftLineStyle = value;\r\n    }\r\n    private _TopLineStyle: any;\r\n    public get TopLineStyle(): any\r\n    {\r\n        return this._TopLineStyle;\r\n    }\r\n    public set TopLineStyle(value: any)\r\n    {\r\n        this._TopLineStyle = value;\r\n    }\r\n    private _RightLineStyle: any;\r\n    public get RightLineStyle(): any\r\n    {\r\n        return this._RightLineStyle;\r\n    }\r\n    public set RightLineStyle(value: any)\r\n    {\r\n        this._RightLineStyle = value;\r\n    }\r\n    private _BottomLineStyle: any;\r\n    public get BottomLineStyle(): any\r\n    {\r\n        return this._BottomLineStyle;\r\n    }\r\n    public set BottomLineStyle(value: any)\r\n    {\r\n        this._BottomLineStyle = value;\r\n    }\r\n    private _VerticalAlignment: StringAlignment = StringAlignment.Near;\r\n    public get VerticalAlignment(): StringAlignment\r\n    {\r\n        return this._VerticalAlignment;\r\n    }\r\n    public set VerticalAlignment(value: StringAlignment)\r\n    {\r\n        this._VerticalAlignment = value;\r\n    }\r\n    private _HorizontalAlignment: StringAlignment = StringAlignment.Near;\r\n    public get HorizontalAlignment(): StringAlignment\r\n    {\r\n        return this._HorizontalAlignment;\r\n    }\r\n    public set HorizontalAlignment(value: StringAlignment)\r\n    {\r\n        this._HorizontalAlignment = value;\r\n    }\r\n\r\n    private _OwnEditControl: DataExcelCellEditBase;\r\n\r\n    public get OwnEditControl()\r\n    {\r\n        if (this._OwnEditControl != null)\r\n        {\r\n            return this._OwnEditControl;\r\n        }\r\n        if (this.Row != null)\r\n        {\r\n            if (this.Row.DefaultCellEdit != null)\r\n            {\r\n                return this.Row.DefaultCellEdit;\r\n            }\r\n        }\r\n        if (this.Column != null)\r\n        {\r\n            if (this.Column.DefaultCellEdit != null)\r\n            {\r\n                return this.Column.DefaultCellEdit;\r\n            }\r\n        }\r\n        return this._OwnEditControl;\r\n    }\r\n    public set OwnEditControl(value:any)\r\n    {\r\n        this._OwnEditControl = value;\r\n    }\r\n\r\n    public get Left()\r\n    {\r\n        return this.Column.Left;\r\n    }\r\n    public get Top()\r\n    {\r\n        return this.Row.Top;\r\n    }\r\n    public get Width()\r\n    {\r\n        return this.Column.Width;\r\n    }\r\n    public get Height()\r\n    {\r\n        return this.Row.Height;\r\n    }\r\n    public get Right()\r\n    {\r\n        return this.Left + this.Width;\r\n    }\r\n    public get Bottom()\r\n    {\r\n        return this.Top + this.Height;\r\n    }\r\n    public get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n\r\n    public GetData()\r\n    {\r\n        let data = {} as any;\r\n        try\r\n        {\r\n            let emptycell = new DataExcelCell();\r\n            data.rowindex = this.Row.Index;\r\n            data.columnindex = this.Column.Index;\r\n            if (emptycell.Text != this.Text)\r\n            {\r\n                data.text = this.Text;\r\n            }\r\n            if (emptycell.Value != this.Value)\r\n            {\r\n                data.value = this.Value;\r\n            }\r\n            if (emptycell.AutoMultiline != this.AutoMultiline)\r\n            {\r\n                data.automultiline = this.AutoMultiline;\r\n            }\r\n            if (emptycell.BackColor != this.BackColor)\r\n            {\r\n                data.backcolor = this.BackColor;\r\n            }\r\n            if (emptycell.BackImage != this.BackImage)\r\n            {\r\n                data.backimage = this.BackImage;\r\n            }\r\n            if (emptycell.BackImageImageLayout != this.BackImageImageLayout)\r\n            {\r\n                data.backimageimagelayout = this.BackImageImageLayout;\r\n            }\r\n            if (emptycell.BottomLineStyle != this.BottomLineStyle)\r\n            {\r\n                data.bottomlinestyle = this.BottomLineStyle;\r\n            }\r\n            if (emptycell._font != this._font)\r\n            {\r\n                data.font = this._font;\r\n            }\r\n            if (emptycell._ForeColor != this._ForeColor)\r\n            {\r\n                data.forecolor = this._ForeColor;\r\n            }\r\n            if (emptycell.Format != this.Format)\r\n            {\r\n                data.format = this.Format;\r\n            }\r\n            if (emptycell.FormatType != this.FormatType)\r\n            {\r\n                data.formattype = this.FormatType;\r\n            }\r\n            if (emptycell.HorizontalAlignment != this.HorizontalAlignment)\r\n            {\r\n                data.horizontalalignment = this.HorizontalAlignment;\r\n            }\r\n            if (emptycell.ID != this.ID)\r\n            {\r\n                data.id = this.ID;\r\n            }\r\n            if (emptycell.LeftLineStyle != this.LeftLineStyle)\r\n            {\r\n                data.leftlinestyle = this.LeftLineStyle;\r\n            }\r\n            if (emptycell._ReadOnly != this.ReadOnly)\r\n            {\r\n                data.readonly = this.ReadOnly;\r\n            }\r\n            if (emptycell.RightLineStyle != this.RightLineStyle)\r\n            {\r\n                data.rightlinestyle = this.RightLineStyle;\r\n            }\r\n            if (emptycell.ShowFocusedSelectBorder != this.ShowFocusedSelectBorder)\r\n            {\r\n                data.showfocusedselectborder = this.ShowFocusedSelectBorder;\r\n            }\r\n            if (emptycell.Style != this.Style)\r\n            {\r\n                data.style = this.Style;\r\n            }\r\n            if (emptycell.TopLineStyle != this.TopLineStyle)\r\n            {\r\n                data.toplinestyle = this.TopLineStyle;\r\n            }\r\n            if (emptycell.VerticalAlignment != this.VerticalAlignment)\r\n            {\r\n                data.verticalalignment = this.VerticalAlignment;\r\n            }\r\n            if (emptycell.Visible != this.Visible)\r\n            {\r\n                data.visible = this.Visible;\r\n            }\r\n        }\r\n        catch (e)\r\n        {\r\n            DataExcelConsole.log(\"dataexcelcell GetData\", e);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n        try\r\n        {\r\n            if (data.text != null)\r\n            {\r\n                this.Text = data.text;\r\n            }\r\n            if (data.value != null)\r\n            {\r\n                this.Value = data.value;\r\n            }\r\n            if (data.visible != null)\r\n            {\r\n                this.Visible = data.visible;\r\n            }\r\n            if (data.id != null)\r\n            {\r\n                this.ID = data.id;\r\n            }\r\n            if (data.columnindex != null)\r\n            {\r\n                let columnindex = data.columnindex;\r\n                let column = grid.GetColumn(columnindex);\r\n                if (column == null)\r\n                {\r\n                    DataExcelConsole.log(\"dataexcelcell\", \"column is null\");\r\n                }\r\n                this.Column = column;\r\n            }\r\n            if (data.automultiline != null)\r\n            {\r\n\r\n                this.AutoMultiline = data.automultiline;\r\n            }\r\n            if (data.backcolor != null)\r\n            {\r\n                this.BackColor = data.backcolor;\r\n            }\r\n            if (data.backimage != null)\r\n            {\r\n                this.BackImage = data.backimage;\r\n            }\r\n            if (data.backimageimagelayout != null)\r\n            {\r\n                this.BackImageImageLayout = data.backimageimagelayout;\r\n            }\r\n            if (data.bottomlinestyle != null)\r\n            {\r\n                this.BottomLineStyle = data.bottomlinestyle;\r\n            }\r\n            if (data.font != null)\r\n            {\r\n                this.Font = data.font;\r\n            }\r\n            if (data.forecolor != null)\r\n            {\r\n                this.ForeColor = data.forecolor;\r\n            }\r\n            if (data.format != null)\r\n            {\r\n                this.Format = data.format;\r\n            }\r\n            if (data.formattype != null)\r\n            {\r\n                this.FormatType = data.formattype;\r\n            }\r\n            if (data.horizontalalignment != null)\r\n            {\r\n                this.HorizontalAlignment = data.horizontalalignment;\r\n            }\r\n            if (data.id != null)\r\n            {\r\n                this.ID = data.id;\r\n            }\r\n            if (data.leftlinestyle != null)\r\n            {\r\n                this.LeftLineStyle = data.leftlinestyle;\r\n            }\r\n            if (data.readonly != null)\r\n            {\r\n                this.ReadOnly = data.readonly;\r\n            }\r\n            if (data.rightlinestyle != null)\r\n            {\r\n                this.RightLineStyle = data.rightlinestyle;\r\n            }\r\n            if (data.showfocusedselectborder != null)\r\n            {\r\n                this.ShowFocusedSelectBorder = data.showfocusedselectborder;\r\n            }\r\n            if (data.style != null)\r\n            {\r\n                this.Style = data.style;\r\n            }\r\n            if (data.toplinestyle != null)\r\n            {\r\n                this.TopLineStyle = data.toplinestyle;\r\n            }\r\n            if (data.verticalalignment != null)\r\n            {\r\n                this.VerticalAlignment = data.verticalalignment;\r\n            }\r\n            if (data.visible != null)\r\n            {\r\n                this.Visible = data.visible;\r\n            }\r\n            this.OwnEditControl = DefaultEdit.GetDefauleEdit(this);\r\n\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"dataexcelcell SetData\", e);\r\n        }\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        this._Style = {};\r\n    }\r\n\r\n    private ondrawtimes2: number = 0;\r\n    OnDraw(sender:any, g: Graphics)\r\n    {\r\n        if (this.ondrawtimes2 >= g.drawTimes)\r\n        {\r\n            return;\r\n        }\r\n        if (!this.Visible)\r\n            return;\r\n        this.ondrawtimes2 = g.drawTimes;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            try\r\n            {\r\n                let res = this.OwnEditControl.OnDraw(sender, g);\r\n                if (res)\r\n                    return;\r\n            } catch (e)\r\n            {\r\n                DataExcelConsole.log(\"OwnEditControl\", e);\r\n            }\r\n        }\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            try\r\n            {\r\n                this.OwnMergeCell.OnDraw(sender, g);\r\n            } catch (e)\r\n            {\r\n                DataExcelConsole.log(\"OwnMergeCell\", e);\r\n            }\r\n            return;\r\n        }\r\n        this.DrawText(sender, g);\r\n    }\r\n    DrawText(sender:any, g: Graphics)\r\n    {\r\n        //g.FillRect(this.ForeColor, this.Left, this.Top, this.Column.Width, this.Row.Height);\r\n        var text = \"\";// this.Row.Index + \"\" + this.Column.Index;\r\n        if (this.Text != null)\r\n        {\r\n            text = this.Text;\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.Format))\r\n        {\r\n            text = ConvertHelper.GetFromatString(this.Value, this.Format, this.FormatType);\r\n        }\r\n        let style = {} as any;\r\n\r\n        style = Object.assign({}, this.Style);;\r\n\r\n        style.text = text;\r\n        style.font = this.Font;\r\n        style.fill = this.ForeColor;\r\n        style.overflow = '';\r\n        if (this.AutoMultiline)\r\n        {\r\n            style.overflow = 'break';\r\n        }\r\n        if (style.align)\r\n        {\r\n        }\r\n        if (this.AutoMultiline)\r\n        {\r\n            style.overflow = \"break\";\r\n        }\r\n        else \r\n        {\r\n            style.overflow = \"\";\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(text))\r\n        {\r\n            g.DrawTextRectStyle2(text, this.Column.Left, this.Top, this.Width, this.Height, style)\r\n        }\r\n    }\r\n    OnDrawBack(sender:any, g: Graphics)\r\n    {\r\n        if (!this.Visible)\r\n            return;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (this.OwnBackCell != null)\r\n        {\r\n            this.OwnBackCell.OnDrawBack(sender, g);\r\n        }\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            this.OwnMergeCell.OnDrawBack(sender, g);\r\n            return;\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnDrawBack(sender, g);\r\n            if (res)\r\n                return;\r\n        }\r\n        if (this.BackColor != null)\r\n        {\r\n            g.FillRect(this.BackColor, this.Left, this.Top, this.Column.Width, this.Row.Height, 1, this.BackColor, 1);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage))\r\n        {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n    }\r\n    Debug(e:any)\r\n    {\r\n        //if (this.Row.Index == 5 && this.Column.Index == 5)\r\n        //{\r\n        //    console.log(e);\r\n        //}\r\n    }\r\n    OnDrawBorder(sender:any, g: Graphics)\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            this.OwnMergeCell.OnDrawBorder(sender, g);\r\n            return;\r\n        }\r\n        this.Debug(this);\r\n        var left = this.Column.Left;\r\n        var right = this.Column.Left + this.Column.Width;\r\n        var top = this.Row.Top;\r\n        var bottom = this.Row.Top + this.Row.Height;\r\n        if (this.LeftLineStyle != null)\r\n        {\r\n            g.DrawLineStyle(this.LeftLineStyle, left, top, left, bottom);\r\n        }\r\n\r\n        if (this.TopLineStyle != null)\r\n        {\r\n            g.DrawLineStyle(this.TopLineStyle, left, top, right, top);\r\n        }\r\n\r\n        if (this.RightLineStyle != null)\r\n        {\r\n            g.DrawLineStyle(this.RightLineStyle, right, top, right, bottom);\r\n        }\r\n\r\n        if (this.BottomLineStyle != null)\r\n        {\r\n            g.DrawLineStyle(this.BottomLineStyle, left, bottom, right, bottom);\r\n        }\r\n\r\n    }\r\n    OnDrawGridLine(sender:any, g: Graphics)\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            this.OwnMergeCell.OnDrawGridLine(sender, g);\r\n            return;\r\n        }\r\n        this.Debug(this);\r\n        var left = this.Column.Left;\r\n        var right = this.Column.Left + this.Column.Width;\r\n        var top = this.Row.Top;\r\n        var bottom = this.Row.Top + this.Row.Height;\r\n\r\n\r\n        if (this.RightLineStyle == null)\r\n        {\r\n            g.DrawLine(GridLineStyle.stroke, right, top, right, bottom);\r\n        }\r\n\r\n        if (this.BottomLineStyle == null)\r\n        {\r\n            g.DrawLine(GridLineStyle.stroke, left, bottom, right, bottom);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ///over write\r\n    private downtime: Date;\r\n    private mousedownpoint: Point;\r\n    OnMouseDown(sender:any, e: MouseEvent, ve:EventView): boolean\r\n    {\r\n        this.downtime = new Date();\r\n        this.mousedownpoint = new Point();\r\n        this.mousedownpoint.X = e.offsetX;\r\n        this.mousedownpoint.Y = e.offsetY;\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnMouseDown(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnMouseDown(sender, e, ve);\r\n            if (res)\r\n            {\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender:any, e: MouseEvent, ve:EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnMouseUp(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnMouseUp(sender, e, ve);\r\n            if (res)\r\n                return true;\r\n        }\r\n        let datetnow = new Date();\r\n        let szie = 0;\r\n        szie = Math.abs(e.offsetX - this.mousedownpoint.X);\r\n        if (szie < 5)\r\n        {\r\n            szie = Math.abs(e.offsetY - this.mousedownpoint.Y);\r\n            if (szie < 5)\r\n            {\r\n                let d = (datetnow.valueOf() - this.downtime.valueOf()) / 1000;\r\n                if (d > 0.15 && d < 0.8)\r\n                {\r\n                    this.InitEdit();\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnMouseMove(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnMouseMove(sender, e, ve);\r\n            if (res)\r\n                return true;\r\n        }\r\n        if (this.downtime != null)\r\n        {\r\n            let datetnow = new Date();\r\n            let d = (datetnow.valueOf() - this.downtime.valueOf()) / 1000;\r\n            if (d > 0.05 && d < 0.8)\r\n            {\r\n                ve.CurrentEvent = this;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnMouseDoubleClick(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnMouseDoubleClick(sender, e, ve);\r\n            if (res)\r\n                return true;\r\n        }\r\n        this.InitEdit();\r\n        return false;\r\n    }\r\n    OnKeyPress(sender :any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        //if (this.OwnMergeCell != null)\r\n        //{\r\n        //    return this.OwnMergeCell.OnKeyPress(sender, e, ve);\r\n        //}\r\n        //if (this.OwnEditControl != null)\r\n        //{\r\n        //    let res = this.OwnEditControl.OnKeyPress(sender, e, ve);\r\n        //    if (res)\r\n        //        return;\r\n        //}\r\n        //this.InitEdit();\r\n        return false;\r\n    }\r\n    OnKeyDown(sender:any, e: KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnKeyPress(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnKeyPress(sender, e, ve);\r\n            if (res)\r\n                return true;\r\n        }\r\n        DataExcelConsole.log(\"OnKeyDownInitEdit\", e);\r\n        if (e.srcElement == document.body)\r\n        {\r\n            let res = false;\r\n            if (e.keyCode >= 48 && e.keyCode <= 57)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode >= 65 && e.keyCode <= 90)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode >= 96 && e.keyCode <= 107)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode >= 186 && e.keyCode <= 192)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode >= 219 && e.keyCode <= 222)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode == 13)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode == 109)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode == 111)\r\n            {\r\n                res = true;\r\n            }\r\n            else if (e.keyCode == 110)\r\n            {\r\n                if (this.ReadOnly != CheckState.Check)\r\n                {\r\n                    this.Value = null;\r\n                    this.Text = \"\";\r\n                }\r\n            }\r\n            else if (e.keyCode == 46)\r\n            {\r\n                if (this.ReadOnly != CheckState.Check)\r\n                {\r\n                    this.Value = null;\r\n                    this.Text = \"\";\r\n                }\r\n            }\r\n            if (e.altKey)\r\n            {\r\n                res = false;\r\n            }\r\n            if (e.shiftKey)\r\n            {\r\n                res = false;\r\n            }\r\n            if (e.ctrlKey)\r\n            {\r\n                res = false;\r\n            }\r\n            if (res)\r\n            {\r\n                this.InitEdit();\r\n            }\r\n        }\r\n        DataExcelConsole.log(\"OnKeyDownInitEdit\", e);\r\n        return false;\r\n    }\r\n\r\n    OnTouchStart(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnTouchStart(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnTouchStart(sender, e, ve);\r\n            if (res)\r\n            {\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnTouchMove(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnTouchMove(sender, e, ve);\r\n            if (res)\r\n            {\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve:EventView): boolean\r\n    {\r\n        if (this.OwnMergeCell != null)\r\n        {\r\n            return this.OwnMergeCell.OnTouchEnd(sender, e, ve);\r\n        }\r\n        if (this.OwnEditControl != null)\r\n        {\r\n            let res = this.OwnEditControl.OnTouchEnd(sender, e, ve);\r\n            if (res)\r\n            {\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ///init\r\n    InitEdit(obj?:any)\r\n    {\r\n        if (this.ReadOnly == CheckState.Check)\r\n        {\r\n            return false;\r\n        }\r\n        if (this.Grid.EditCell == this)\r\n        {\r\n            return false;\r\n        }\r\n        this.Grid.ClearSelect();\r\n        this.Grid.SetSelectCells(this);\r\n        this.Grid.SetFocusedCell(this);\r\n\r\n        this.Grid.BeginReFresh();\r\n        let editcontrol:any = null;\r\n        this.Grid.RaiseCellInitEditEvent(this);\r\n        editcontrol = this.OwnEditControl;\r\n        if (this.OwnEditControl == null)\r\n        {\r\n            if (this.Row.DefaultCellEdit != null)\r\n            {\r\n                editcontrol = this.Row.DefaultCellEdit;\r\n            }\r\n            else if (this.Column.DefaultCellEdit != null)\r\n            {\r\n                editcontrol = this.Column.DefaultCellEdit;\r\n            }\r\n            else\r\n            {\r\n                editcontrol = this.Grid.DefaultEdit;\r\n            }\r\n            this.OwnEditControl = editcontrol;\r\n        }\r\n\r\n        if (editcontrol != null)\r\n        {\r\n            this.Grid.AddEdit(editcontrol);\r\n            editcontrol.Cell = this;\r\n            editcontrol.InitEdit();\r\n            this.Grid.EditCell = this;\r\n        }\r\n\r\n        this.Grid.EndReFresh();\r\n        return true;\r\n\r\n    }\r\n    EndEdit()\r\n    {\r\n        this.Grid.EditCell = null;\r\n    }\r\n    FormatDecimalsAdd()\r\n    {\r\n        let format = this.Format;\r\n        let index = format.indexOf(\"0\");\r\n        if (index >= 0)\r\n        {\r\n            format = ConvertHelper.InsertString(format, index, \"0\");\r\n        }\r\n        else\r\n        {\r\n            if (format.startsWith(\"¥\"))\r\n            {\r\n                format = format + \"0\";\r\n            }\r\n            else if (format.endsWith(\"%\"))\r\n            {\r\n                format = \"0\" + format;\r\n            } else\r\n            {\r\n                format = \"0\";\r\n            }\r\n        }\r\n        this.Format = format;\r\n    }\r\n    FormatDecimalsIndent()\r\n    {\r\n        let format = this.Format;\r\n        let index = format.indexOf(\"0\");\r\n        if (index >= 0)\r\n        {\r\n            format = ConvertHelper.DeleteString(format, index, 1);\r\n        }\r\n        this.Format = format;\r\n    }\r\n\r\n    private _zoom: Zoom|null = null;\r\n    SetZoom(zoom: Zoom): boolean\r\n    {\r\n        try\r\n        { \r\n            this._zoom = zoom; \r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): any\r\n    {\r\n        return this._zoom;\r\n    }\r\n}\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\n\r\n\r\nexport class DataExcelCellList extends List<DataExcelCell>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    } \r\n}\r\n","import { CheckState } from \"../Base/ConstantValue\";\r\nimport { Rect, Zoom } from \"../Base/Point\";\r\nimport { Tool } from \"../Base/Tool\";\r\nimport { IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCellEditBase } from \"../Edit/DataExcelCellEditBase\";\r\nimport { DataExcel } from \"./DataExcel\";\r\n\r\nexport class DataExcelColumn implements IZoom {\r\n    public Visible: boolean;\r\n    public Left: number;\r\n    public Top: number;\r\n    public Width: number;\r\n    public get Height() {\r\n        return this.Grid.Height;\r\n    }\r\n    public Index = 0;\r\n    public Grid: DataExcel;\r\n    //public ForeColor = \"#00887733\";\r\n    //public SelectBackColor = \"#00337733\";\r\n    public Selected: boolean;\r\n    private _font: any;\r\n    public get Font() {\r\n        if (this._font == null) {\r\n            return this.Grid.Font;\r\n        }\r\n        return this._font;\r\n    }\r\n    public set Font(value) {\r\n        this._font = value;\r\n    }\r\n    public FullColumnSelectedColor: any;\r\n    public BackColor: any = null;\r\n    public DefaultCellEdit: DataExcelCellEditBase|null = null;\r\n\r\n    private _Caption: string;\r\n    public get Caption(): string {\r\n        return this._Caption;\r\n    }\r\n    public set Caption(value: string) {\r\n        this._Caption = value;\r\n    }\r\n    private _ReadOnly: number = CheckState.Unkown;\r\n    public get ReadOnly(): number {\r\n        if (this._ReadOnly == CheckState.Unkown) {\r\n            return this.Grid.ReadOnly;\r\n        }\r\n        return this._ReadOnly;\r\n    }\r\n    public set ReadOnly(value: number) {\r\n        this._ReadOnly = value;\r\n    }\r\n    private _ID: string;\r\n    public get ID(): string {\r\n        return this._ID;\r\n    }\r\n    public set ID(value: string) {\r\n        this._ID = value;\r\n    }\r\n    public GetData() {\r\n        let data = {\r\n            index: this.Index,\r\n            width: this.Width,\r\n            caption: this.Caption,\r\n            visible: this.Visible,\r\n            id: this.ID,\r\n        };\r\n\r\n        return data;\r\n    }\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.Index = data.index;\r\n        this.Width = data.width;\r\n        this.Caption = data.caption;\r\n        this.Visible = data.visible;\r\n        this.ID = data.id;\r\n    }\r\n    constructor() {\r\n        this.Visible = true;\r\n        this.Left = 0;\r\n        this.Top = 20;\r\n        this.Width = 72;\r\n        this.Index = 0;\r\n\r\n    }\r\n    public get Name() {\r\n        switch (this.Index) {\r\n            case 1:\r\n                return \"A\";\r\n            case 2:\r\n                return \"B\";\r\n            case 3:\r\n                return \"C\";\r\n            case 4:\r\n                return \"D\";\r\n            case 5:\r\n                return \"E\";\r\n            case 6:\r\n                return \"F\";\r\n            case 7:\r\n                return \"G\";\r\n            case 8:\r\n                return \"H\";\r\n            case 9:\r\n                return \"I\";\r\n            case 10:\r\n                return \"J\";\r\n            case 11:\r\n                return \"K\";\r\n            case 12:\r\n                return \"L\";\r\n            case 13:\r\n                return \"M\";\r\n            case 14:\r\n                return \"N\";\r\n            case 15:\r\n                return \"O\";\r\n            case 16:\r\n                return \"P\";\r\n            case 17:\r\n                return \"Q\";\r\n            case 18:\r\n                return \"R\";\r\n            case 19:\r\n                return \"S\";\r\n            case 20:\r\n                return \"T\";\r\n            case 21:\r\n                return \"U\";\r\n            case 22:\r\n                return \"V\";\r\n            case 23:\r\n                return \"W\";\r\n            case 24:\r\n                return \"X\";\r\n            case 25:\r\n                return \"Y\";\r\n            case 26:\r\n                return \"Z\";\r\n            case 27:\r\n                return \"AA\";\r\n            default:\r\n                break;\r\n        }\r\n        return Tool.GetColumnHeaderByColumnIndex(this.Index);\r\n    }\r\n    H(): number {\r\n        return this.Grid.Height;\r\n    }\r\n    OnDraw(sender: any, g: Graphics) {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (!this.Visible)\r\n            return;\r\n        //g.FillRect(this.ForeColor, this.Left, this.Top, this.Width, this.Grid.Height);\r\n        //g.DrawText(\"14px ����\", \"black\", this.Index, this.Left + this.Width / 2, this.Top, this.Width, 100, \"center\");\r\n        if (this.Selected) {\r\n            g.FillRectangle(this.FullColumnSelectedColor, this.Left, this.Top, this.Width, this.Grid.Height);\r\n\r\n        }\r\n        else {\r\n            if (this.BackColor != null) {\r\n                g.FillRectangle(this.BackColor, this.Left, this.Top, this.Width, this.Grid.Height);\r\n            }\r\n        }\r\n    }\r\n    get Rect(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Grid.Height;\r\n        return rect;\r\n    }\r\n    get CellSelect() {\r\n        if (this.Grid == null)\r\n            return false;\r\n        if (this.Grid.SelectCells == null)\r\n            return false;\r\n        let max = this.Grid.SelectCells.MaxColumn();\r\n        let min = this.Grid.SelectCells.MinColumn();\r\n        return (this.Index >= min && this.Index <= max);\r\n    }\r\n\r\n\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        this.Width = this.Width * zoom.Width;\r\n        this._zoom = zoom;\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n\r\n","import { Dictionary } from \"../Base/Dictionary\";\r\n\r\nexport class DataExcelColumnCollection<_number, DataExcelColumn> extends Dictionary<number, DataExcelColumn>\r\n{ \r\n    public MaxHasValueIndex: number;\r\n    private _Max: number;\r\n    public get Max(): number\r\n    {\r\n        return this._Max;\r\n    }\r\n    public set Max(value: number)\r\n    {\r\n        this._Max = value;\r\n    }\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    Add(index:any, row:any)\r\n    {\r\n        this.set(index, row);\r\n        if (index > this.Max)\r\n        {\r\n            this.Max = index;\r\n        }\r\n    }\r\n    Get(index:any)\r\n    {\r\n        if (this.has(index))\r\n        {\r\n            return this.get(index);\r\n        }\r\n\r\n        return null;\r\n    }\r\n    Clear()\r\n    {\r\n        this.Max = 1;\r\n        this.clear();\r\n    }\r\n    Delete(index:any)\r\n    {\r\n        if (this.has(index))\r\n        {\r\n            this.Max = this.Max - 1;\r\n            return this.delete(index);\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\n\r\n \r\nexport class DataExcelColumnList extends List<DataExcelColumn>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(column:any)\r\n    {\r\n        this.remove(column);\r\n    }\r\n \r\n    Get(index:any)\r\n    {\r\n        return this.get(index);\r\n    }\r\n}\r\n","﻿import { GridLineStyle } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { DataExcelDefaultValue } from \"../Base/MouseButtons\";\r\nimport { StringAlignment } from \"../Base/StringAlignment\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelRow } from \"../export\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\n\r\nexport class DataExcelMergeCell extends DataExcelCell {\r\n\r\n    public get Row(): DataExcelRow {\r\n        return this._begincell.Row;\r\n    }\r\n    public set Row(cell: DataExcelRow) {\r\n        this.Grid = cell.Grid;\r\n        this._begincell.Row = cell;\r\n    }\r\n    public get Column(): DataExcelColumn {\r\n        return this._begincell.Column;\r\n    }\r\n    public set Column(cell: DataExcelColumn) {\r\n        this._begincell.Column = cell;\r\n    }\r\n\r\n    public Selected: boolean;\r\n    private _Released: boolean = false;\r\n    public get Released(): boolean {\r\n        return this._Released;\r\n    }\r\n    public set Released(value: boolean) {\r\n        this._Released = value;\r\n    }\r\n    public Grid: DataExcel;\r\n    private _begincell: DataExcelCell;\r\n    public get BeginCell(): DataExcelCell {\r\n        return this._begincell;\r\n    }\r\n    public set BeginCell(cell: DataExcelCell) {\r\n        this.Grid = cell.Grid;\r\n        this._begincell = cell;\r\n    }\r\n\r\n    private _endcell: DataExcelCell;\r\n    public get EndCell(): DataExcelCell {\r\n        return this._endcell;\r\n    }\r\n    public set EndCell(cell: DataExcelCell) {\r\n        this._endcell = cell;\r\n        let firstcell = this._begincell;\r\n        let endcell = this._endcell;\r\n        if (firstcell == null || endcell == null)\r\n            return;\r\n        let rmin = Math.min(firstcell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(firstcell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(firstcell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(firstcell.Column.Index, endcell.Column.Index);\r\n        this._begincell = firstcell.Grid.GetCellByIndex(rmin, cmin);\r\n        this._begincell.VerticalAlignment = StringAlignment.Center;\r\n        this._begincell.HorizontalAlignment = StringAlignment.Center;\r\n        this._endcell = firstcell.Grid.GetCellByIndex(rmax, cmax);\r\n        this.Refresh();\r\n        this.ReSetCellParent();\r\n    }\r\n\r\n\r\n    public MaxRowIndex(): number {\r\n        return this.EndCell.Row.Index;\r\n    }\r\n    public MaxColumnIndex(): number {\r\n        return this.EndCell.Column.Index;\r\n    }\r\n\r\n    public get Visible(): boolean {\r\n        return this._begincell.Visible;\r\n    }\r\n    public set Visible(value: boolean) {\r\n        this._begincell.Visible = value;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this._begincell.Text;\r\n    }\r\n    public set Text(value: string) {\r\n        this._begincell.Text = value;\r\n    }\r\n\r\n    public get Value(): object {\r\n        return this._begincell.Value;\r\n    }\r\n    public set Value(value: object) {\r\n        this._begincell.Value = value;\r\n    }\r\n\r\n    public get AutoMultiline(): boolean {\r\n        return this._begincell.AutoMultiline;\r\n    }\r\n    public set AutoMultiline(value: boolean) {\r\n        this._begincell.AutoMultiline = value;\r\n    }\r\n\r\n    public get LeftLineStyle(): any {\r\n        return this.BeginCell.LeftLineStyle;\r\n    }\r\n    public set LeftLineStyle(value: any) {\r\n        this.BeginCell.LeftLineStyle = value;\r\n    }\r\n    public get TopLineStyle(): any {\r\n        return this.BeginCell.TopLineStyle;\r\n    }\r\n    public set TopLineStyle(value: any) {\r\n        this.BeginCell.TopLineStyle = value;\r\n    }\r\n    public get RightLineStyle(): any {\r\n        return this.BeginCell.RightLineStyle;\r\n    }\r\n    public set RightLineStyle(value: any) {\r\n        this.BeginCell.RightLineStyle = value;\r\n    }\r\n    public get BottomLineStyle(): any {\r\n        return this.BeginCell.BottomLineStyle;\r\n    }\r\n    public set BottomLineStyle(value: any) {\r\n        this.BeginCell.BottomLineStyle = value;\r\n    }\r\n\r\n    public get VerticalAlignment(): StringAlignment {\r\n        return this._begincell.VerticalAlignment;\r\n    }\r\n    public set VerticalAlignment(value: StringAlignment) {\r\n        this._begincell.VerticalAlignment = value;\r\n    }\r\n\r\n    public get HorizontalAlignment(): StringAlignment {\r\n        return this._begincell.HorizontalAlignment;\r\n    }\r\n    public set HorizontalAlignment(value: StringAlignment) {\r\n        this._begincell.HorizontalAlignment = value;\r\n    }\r\n\r\n    public GetData() {\r\n        let data = {\r\n            begincellrowindex: this.BeginCell.Row.Index,\r\n            begincellcolumnindex: this.BeginCell.Column.Index,\r\n            endcellrowindex: this.EndCell.Row.Index,\r\n            endcellcolumnindex: this.EndCell.Column.Index,\r\n        };\r\n        return data;\r\n    }\r\n    public SetData(grid: DataExcel, data: any) {\r\n        let begincell = grid.GetCellByIndex(data.begincellrowindex, data.begincellcolumnindex);\r\n        let endcell = grid.GetCellByIndex(data.endcellrowindex, data.endcellcolumnindex);\r\n        this.BeginCell = begincell;\r\n        this.EndCell = endcell;\r\n    }\r\n\r\n    Refresh() {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        this.Top = begincell.Top;\r\n        this.Left = begincell.Left;\r\n        let width = 0;\r\n        for (let i = begincell.Column.Index; i <= endcell.Column.Index; i++) {\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column != null) {\r\n                if (column.Visible) {\r\n                    width = column.Width + width;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.Width = width;\r\n        let heigth = 0;\r\n        for (let i = begincell.Row.Index; i <= endcell.Row.Index; i++) {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row != null) {\r\n                if (row.Visible) {\r\n                    heigth = row.Height + heigth;\r\n                }\r\n            }\r\n        }\r\n        this.Height = heigth;\r\n\r\n        let rmin = begincell.Row.Index;\r\n        let cmin = begincell.Column.Index;\r\n        let rmax = endcell.Row.Index;\r\n        let cmax = endcell.Column.Index;\r\n\r\n        rmin = Math.max(rmin, this.Grid.FirstDisplayedRowIndex);\r\n        cmin = Math.max(cmin, this.Grid.FirstDisplayedColumnIndex);\r\n        rmax = Math.min(rmax, this.Grid.EndDisplayedRowIndex);\r\n        cmax = Math.min(cmax, this.Grid.EndDisplayedColumnIndex);\r\n\r\n        this.VisableTop = this.Top;\r\n        this.VisableLeft = this.Left;\r\n        this.freshVisableSize(rmin, cmin, rmax, cmax);\r\n        this.freshVisablePointTop(begincell.Row.Index, this.Grid.FirstDisplayedRowIndex);\r\n        this.freshVisablePointLeft(begincell.Column.Index, this.Grid.FirstDisplayedColumnIndex);\r\n\r\n    }\r\n    private freshVisablePointTop(rindex: any, findex: any) {\r\n        if (rindex >= findex) {\r\n            let row = this.Grid.Rows.Get(rindex);\r\n            if (row == null) {\r\n                this.VisableTop = DataExcelDefaultValue.dafaultRowHeight;\r\n                this.Top = DataExcelDefaultValue.dafaultRowHeight;\r\n            }\r\n            else {\r\n                this.VisableTop = row.Top;\r\n                this.Top = row.Top;\r\n            }\r\n        }\r\n        else {\r\n            let row = this.Grid.Rows.Get(findex);\r\n            let top = 0;\r\n            if (row == null) {\r\n                this.VisableTop = DataExcelDefaultValue.dafaultRowHeight;\r\n                top = DataExcelDefaultValue.dafaultRowHeight;\r\n            }\r\n            else {\r\n                this.VisableTop = row.Top;\r\n                top = row.Top;\r\n            }\r\n            for (let i = findex - 1; i >= rindex; i--) {\r\n                row = this.Grid.Rows.Get(i);\r\n                if (row != null) {\r\n                    if (row.Visible) {\r\n                        top = top - row.Height;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Top = top;\r\n        }\r\n    }\r\n    private freshVisablePointLeft(cindex: any, findex: any) {\r\n        if (cindex >= findex) {\r\n            let column = this.Grid.Columns.Get(cindex);\r\n            if (column == null) {\r\n                this.VisableLeft = DataExcelDefaultValue.defaultColumnWidth;\r\n                this.Left = DataExcelDefaultValue.defaultColumnWidth;\r\n            }\r\n            else {\r\n                this.VisableLeft = column.Left;\r\n                this.Left = column.Left;\r\n            }\r\n        }\r\n        else {\r\n            let column = this.Grid.Columns.Get(findex);\r\n            let left = 0;\r\n            if (column == null) {\r\n                this.VisableLeft = DataExcelDefaultValue.defaultColumnWidth;\r\n                left = DataExcelDefaultValue.defaultColumnWidth;\r\n            }\r\n            else {\r\n                this.VisableLeft = column.Left;\r\n                left = column.Left;\r\n            }\r\n            for (let i = findex - 1; i >= cindex; i--) {\r\n                column = this.Grid.Columns.Get(i);\r\n                if (column != null) {\r\n                    if (column.Visible) {\r\n                        left = left - column.Width;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Left = left;\r\n        }\r\n    }\r\n    private freshVisableSize(rmin: any, cmin: any, rmax: any, cmax: any) {\r\n        let width = 0;\r\n        for (let i = cmin; i <= cmax; i++) {\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column != null) {\r\n                if (column.Visible) {\r\n                    width = column.Width + width;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.VisableWidth = width;\r\n\r\n        let heigth = 0;\r\n        for (let i = rmin; i <= rmax; i++) {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row != null) {\r\n                if (row.Visible) {\r\n                    heigth = row.Height + heigth;\r\n                }\r\n            }\r\n        }\r\n        this.VisableHeight = heigth;\r\n    }\r\n    public get OwnEditControl() {\r\n        return this.BeginCell.OwnEditControl;\r\n    }\r\n    public set OwnEditControl(value) {\r\n        this.BeginCell.OwnEditControl = value;\r\n    }\r\n    private _left: number = 0;\r\n    private _top: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    public get Left() {\r\n        return this._left;\r\n    }\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public get Width() {\r\n        return this._width;\r\n    }\r\n    public get Height() {\r\n        return this._height;\r\n    }\r\n    public set Left(value: number) {\r\n        this._left = value;\r\n    }\r\n    public set Top(value: number) {\r\n        this._top = value;\r\n    }\r\n    public set Width(value: number) {\r\n        this._width = value;\r\n    }\r\n    public set Height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    private _VisableWidth: number = 0;\r\n    public get VisableWidth(): number {\r\n        return this._VisableWidth;\r\n    }\r\n    public set VisableWidth(value: number) {\r\n        this._VisableWidth = value;\r\n    }\r\n    private _VisableHeight: number = 0;\r\n    public get VisableHeight(): number {\r\n        return this._VisableHeight;\r\n    }\r\n    public set VisableHeight(value: number) {\r\n        this._VisableHeight = value;\r\n    }\r\n    private _VisableLeft: number = 0;\r\n    public get VisableLeft(): number {\r\n        return this._VisableLeft;\r\n    }\r\n    public set VisableLeft(value: number) {\r\n        this._VisableLeft = value;\r\n    }\r\n    private _VisableTop: number = 0;\r\n    public get VisableTop(): number {\r\n        return this._VisableTop;\r\n    }\r\n    public set VisableTop(value: number) {\r\n        this._VisableTop = value;\r\n    }\r\n\r\n    public get Style(): any {\r\n        return this.BeginCell.Style;\r\n    }\r\n\r\n    public set Style(value: any) {\r\n        this.BeginCell.Style = value;\r\n    }\r\n    public get Font(): FontFace {\r\n        return this.BeginCell.Font;\r\n    }\r\n    public set Font(value: FontFace) {\r\n        this.BeginCell.Font = value;\r\n    }\r\n    public get ForeColor(): any {\r\n        return this.BeginCell.ForeColor;\r\n\r\n    }\r\n    public set ForeColor(value: any) {\r\n        this.BeginCell.ForeColor = value;\r\n    }\r\n    public get BackColor(): any {\r\n        return this.BeginCell.BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this.BeginCell.BackColor = value;\r\n    }\r\n\r\n    public get Format(): string {\r\n        return this.BeginCell.Format;\r\n    }\r\n    public set Format(value: string) {\r\n        this.BeginCell.Format = value;\r\n    }\r\n\r\n    public get FormatType(): string {\r\n        return this.BeginCell.FormatType;\r\n    }\r\n    public set FormatType(value: string) {\r\n        this.BeginCell.FormatType = value;\r\n    }\r\n\r\n    public get BackImage(): string {\r\n        return this.BeginCell.BackImage;\r\n    }\r\n    public set BackImage(value: string) {\r\n        this.BeginCell.BackImage = value;\r\n    }\r\n    public get BackImageImageLayout(): number {\r\n        return this.BeginCell.BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number) {\r\n        this.BeginCell.BackImageImageLayout = value;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private ondrawtimes: number = 0;\r\n    OnDraw(sender: any, g: Graphics) {\r\n        if (this.ondrawtimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.ondrawtimes = g.drawTimes;\r\n        if (!this.Visible)\r\n            return;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (this.OwnEditControl != null) {\r\n            let res = this.OwnEditControl.OnDraw(sender, g);\r\n            if (res)\r\n                return;\r\n        }\r\n        //g.FillRect(this.ForeColor, this.Left, this.Top, this.Column.Width, this.Row.Height);\r\n        var text = \"\";// this.Row.Index + \"\" + this.Column.Index;\r\n        if (this.Text != null) {\r\n            text = this.Text;\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.Format)) {\r\n            text = ConvertHelper.GetFromatString(this.Value, this.Format, this.FormatType);\r\n        }\r\n        let style = {} as any;\r\n\r\n        style = this.Style;\r\n        //text = this.ondrawtimes + \":\" + text;\r\n        style.text = text;\r\n        style.font = this.Font;\r\n        style.fill = this.ForeColor;\r\n        style.overflow = '';\r\n        if (this.AutoMultiline) {\r\n            style.overflow = 'break';\r\n        }\r\n\r\n        if (this.AutoMultiline) {\r\n            style.overflow = \"break\";\r\n        }\r\n        else {\r\n            style.overflow = \"\";\r\n        }\r\n        g.DrawTextClipRectStyle2(text, this.Left, this.Top, this.Width, this.Height, this.VisableLeft, this.VisableTop, this.VisableWidth, this.VisableHeight, style);\r\n    }\r\n\r\n    private ondrawbacktimes: number = 0;\r\n    OnDrawBack(sender: any, g: Graphics) {\r\n        if (this.ondrawbacktimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.ondrawbacktimes = g.drawTimes;\r\n        if (!this.Visible)\r\n            return;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (this.OwnEditControl != null) {\r\n            let res = this.OwnEditControl.OnDrawBack(sender, g);\r\n            if (res)\r\n                return;\r\n        }\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, this.VisableLeft, this.VisableTop, this.VisableWidth, this.VisableHeight);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n    }\r\n    private ondrawbordertimes: number = 0;\r\n    OnDrawBorder(sender: any, g: Graphics) {\r\n        if (this.ondrawbordertimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.Debug(this);\r\n        this.ondrawbordertimes = g.drawTimes;\r\n        let left = this.VisableLeft;\r\n        let right = this.VisableLeft + this.VisableWidth;\r\n        let top = this.VisableTop;\r\n        let bottom = this.VisableTop + this.VisableHeight;\r\n        if (this.LeftLineStyle != null) {\r\n            g.DrawLineStyle(this.LeftLineStyle, left, top, left, bottom);\r\n        }\r\n\r\n        if (this.TopLineStyle != null) {\r\n            g.DrawLineStyle(this.TopLineStyle, left, top, right, top);\r\n        }\r\n\r\n        if (this.RightLineStyle != null) {\r\n            g.DrawLineStyle(this.RightLineStyle, right, top, right, bottom);\r\n        }\r\n\r\n        if (this.BottomLineStyle != null) {\r\n            g.DrawLineStyle(this.BottomLineStyle, left, bottom, right, bottom);\r\n        }\r\n\r\n    }\r\n    private ondrawgridlinetimes: number = 0;\r\n    OnDrawGridLine(sender: any, g: Graphics) {\r\n        if (this.ondrawgridlinetimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.Debug(this);\r\n        this.ondrawgridlinetimes = g.drawTimes;\r\n        let left = this.VisableLeft;\r\n        let right = this.VisableLeft + this.VisableWidth;\r\n        let top = this.VisableTop;\r\n        let bottom = this.VisableTop + this.VisableHeight;\r\n\r\n        if (this.RightLineStyle == null) {\r\n            g.DrawLine(GridLineStyle.stroke, right, top, right, bottom);\r\n        }\r\n\r\n        if (this.BottomLineStyle == null) {\r\n            g.DrawLine(GridLineStyle.stroke, left, bottom, right, bottom);\r\n        }\r\n\r\n    }\r\n\r\n    OnInput(e: any): void {\r\n        let cell = this[\"cell\"] as DataExcelCell;\r\n        cell.Text = this[\"value\"];\r\n        cell.Grid.graphic.Clear();\r\n        cell.Grid.RePaint(e);\r\n    }\r\n    OnChange(e: Event) {\r\n        //var cell = this[\"cell\"];\r\n        //cell.Text = this[\"value\"];\r\n        //cell.Grid.Context.clearRect(0, 0, cell.Grid.Control.width, cell.Grid.Control.height);\r\n        //cell.Grid.RePaint();\r\n    }\r\n\r\n    ReSetCellParent() {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n        if (this._begincell == null) {\r\n            return;\r\n        }\r\n        if (this._endcell == null) {\r\n            return;\r\n        }\r\n        for (let i = rmin; i <= rmax; i++) {\r\n            for (let j = cmin; j <= cmax; j++) {\r\n                let cell = this.Grid.GetCellByIndex(i, j);\r\n                if (cell !== null) {\r\n                    cell.OwnMergeCell = this;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { DataExcelMergeCell } from \"./DataExcelMergeCell\";\r\n\r\n \r\nexport class DataExcelMergeCellList extends List<DataExcelMergeCell>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(column:any)\r\n    {\r\n        this.remove(column);\r\n    }\r\n \r\n    Get(index:any): DataExcelMergeCell\r\n    {\r\n        return this.get(index);\r\n    }\r\n    GetByColumnIndex(index:any): DataExcelMergeCell|null\r\n    {\r\n        var count = this.Count;\r\n        for (var i = 0; i < count; i++)\r\n        {\r\n            var cell = this.Get(i);\r\n            if (cell.Column.Index == index)\r\n            {\r\n                return cell;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    Refresh()\r\n    {\r\n        for (var i in this)\r\n        {\r\n            let cell = this[i] as DataExcelMergeCell;\r\n            cell.Refresh();\r\n        }\r\n    }\r\n}\r\n","import { Dictionary } from \"../Base/Dictionary\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\n\r\n\r\nexport class DataExcelCellCollection extends Dictionary<DataExcelColumn, DataExcelCell>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    Add(cell: DataExcelCell)\r\n    {\r\n        this.set(cell.Column, cell);\r\n    }\r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(column: DataExcelColumn)\r\n    {\r\n        this.delete(column);\r\n    }\r\n    Count(): number\r\n    {\r\n        return this.size;\r\n    }\r\n    Get(column: DataExcelColumn): DataExcelCell|undefined\r\n    {\r\n        return this.get(column);\r\n    }\r\n\r\n}\r\n","﻿import { CheckState } from \"../Base/ConstantValue\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { DataExcelDefaultValue } from \"../Base/MouseButtons\";\r\nimport { Rect, Zoom } from \"../Base/Point\";\r\nimport { IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCellEditBase } from \"../Edit/DataExcelCellEditBase\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { DataExcelCellCollection } from \"./DataExcelCellCollection\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\n\r\nexport class DataExcelRow implements IZoom\r\n{\r\n    public Visible: boolean;\r\n    public Left: number;\r\n    public Top: number;\r\n    public Width: number;\r\n    public Height = 20;\r\n    public Grid: DataExcel;\r\n    public ForeColor = \"#00887733\";\r\n    public SelectBackColor = \"#00337733\";\r\n\r\n    public Index: number;\r\n    public Cells: DataExcelCellCollection;\r\n    public Selected: boolean;\r\n\r\n    private _font:any;\r\n    public get Font()\r\n    {\r\n        if (this._font == null)\r\n        {\r\n            return this.Grid.Font;\r\n        }\r\n        return this._font;\r\n    }\r\n    public set Font(value)\r\n    {\r\n        this._font = value;\r\n    }\r\n\r\n    public FullRowSelectedColor: any;\r\n    public BackColor: any = null;\r\n\r\n    public DefaultCellEdit: DataExcelCellEditBase;\r\n    public get CellSelect()\r\n    {\r\n        if (this.Grid == null)\r\n            return false;\r\n        if (this.Grid.SelectCells == null)\r\n            return false;\r\n        let max = this.Grid.SelectCells.MaxRow();\r\n        let min = this.Grid.SelectCells.MinRow();\r\n        return (this.Index >= min && this.Index <= max);\r\n\r\n    }\r\n    private _ID: string;\r\n    public get ID(): string\r\n    {\r\n        return this._ID;\r\n    }\r\n    public set ID(value: string)\r\n    {\r\n        this._ID = value;\r\n    }\r\n    private _ReadOnly: number = CheckState.Unkown;\r\n    public get ReadOnly(): number\r\n    {\r\n        if (this._ReadOnly == CheckState.Unkown)\r\n        {\r\n            return this.Grid.ReadOnly;\r\n        }\r\n        return this._ReadOnly;\r\n    }\r\n    public set ReadOnly(value: number)\r\n    {\r\n        this._ReadOnly = value;\r\n    }\r\n    public GetData()\r\n    {\r\n        let data = {\r\n            index: this.Index,\r\n            height: this.Height,\r\n            visible: this.Visible,\r\n            id: this.ID,\r\n            cells: [] as any[]\r\n        };\r\n        this.Cells.forEach((cell: DataExcelCell) =>\r\n        {\r\n            if (cell.Column != null)\r\n            {\r\n                data.cells.push(cell.GetData());\r\n            }\r\n        });\r\n\r\n        return data;\r\n    }\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n        this.Index = data.index;\r\n        this.Height = data.height;\r\n        this.Visible = data.visible;\r\n        this.ID = data.id;\r\n        let len = data.cells.length;\r\n        for (let i = 0; i < len; i++)\r\n        {\r\n            let celldata = data.cells[i];\r\n            let cell = new DataExcelCell();\r\n            cell.Grid = grid;\r\n            cell.Row = this;\r\n            cell.SetData(grid, celldata);\r\n            this.Cells.Add(cell);\r\n        }\r\n    }\r\n    constructor()\r\n    {\r\n        this.Visible = true;\r\n        this.Left = 0;\r\n        this.Top = 0;\r\n        this.Width = 0;\r\n        this.Height = DataExcelDefaultValue.dafaultRowHeight;\r\n        this.Cells = new DataExcelCellCollection();\r\n    }\r\n\r\n\r\n    public get Name()\r\n    {\r\n        return this.Index + \"\";\r\n    }\r\n\r\n    OnDraw(sender:any, g: Graphics)\r\n    {\r\n        try\r\n        {\r\n            if (this.Grid == null)\r\n                console.log(\"this.Grid == null\");\r\n            if (!this.Visible)\r\n                return;\r\n            if (this.Selected)\r\n            {\r\n                g.FillRectangle(this.FullRowSelectedColor, this.Left, this.Top, this.Grid.Width, this.Height);\r\n            }\r\n            else\r\n            {\r\n                if (this.BackColor != null)\r\n                {\r\n                    g.FillRectangle(this.BackColor, this.Left, this.Top, this.Grid.Width, this.Height);\r\n                }\r\n            }\r\n            var length = this.Grid.AllVisibleColumns.Count;\r\n            for (var i = 0; i < length; i++)\r\n            {\r\n                var column = this.Grid.AllVisibleColumns.Get(i);\r\n                var cell = this.Cells.Get(column);\r\n                if (cell == null)\r\n                {\r\n                    cell = this.Grid.NewCell(this, column);\r\n                }\r\n                if (cell != null)\r\n                {\r\n                    cell.OnDraw(sender, g);\r\n                }\r\n            }\r\n\r\n        } catch (e)\r\n        {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    OnDrawBack(sender:any, g: Graphics)\r\n    {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        var length = this.Grid.AllVisibleColumns.Count;\r\n        for (var i = 0; i < length; i++)\r\n        {\r\n            try\r\n            {\r\n                var column = this.Grid.AllVisibleColumns.Get(i);\r\n                var cell = this.Cells.Get(column);\r\n                if (cell == null)\r\n                {\r\n                    cell = this.Grid.NewCell(this, column);\r\n                }\r\n                if (cell != null)\r\n                {\r\n                    cell.OnDrawBack(sender, g);\r\n                }\r\n            } catch (e)\r\n            {\r\n                console.log(e);\r\n            }\r\n\r\n        }\r\n    }\r\n    get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Grid.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean\r\n    {\r\n        try\r\n        {\r\n            this.Height = this.Height * zoom.Height;\r\n            this._zoom = zoom;\r\n            this.Cells.forEach((value: DataExcelCell, key: DataExcelColumn) =>\r\n            {\r\n                value.SetZoom(zoom);\r\n            });\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);     \r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom\r\n    {\r\n        return this._zoom;\r\n    }\r\n}\r\n","import { Dictionary } from \"../Base/Dictionary\";\r\n\r\nexport class DataExcelRowCollection<_number, DataExcelRow> extends Dictionary<number, DataExcelRow>\r\n{\r\n    //public dics: Map<number, DataExcelRow>;\r\n    public MaxHasValueIndex: number;\r\n    private _Max: number;\r\n    public get Max(): number {\r\n        return this._Max;\r\n    }\r\n    public set Max(value: number) {\r\n        this._Max = value;\r\n    }\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    Add(index:any, row:any)\r\n    {\r\n        this.set(index, row);\r\n        if (index > this.Max)\r\n        {\r\n            this.Max = index;\r\n        }\r\n    }\r\n    Get(index:any)\r\n    {\r\n        if (this.has(index))\r\n        {\r\n            return this.get(index);\r\n        }\r\n\r\n        return null;\r\n    }\r\n    Clear()\r\n    {\r\n        this.Max = 1;\r\n        this.clear();\r\n    }\r\n    Delete(index:any)\r\n    {\r\n        if (this.has(index))\r\n        {\r\n            this.Max = this.Max - 1;\r\n            return this.delete(index);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { DataExcelRow } from \"./DataExcelRow\";\r\n\r\n \r\nexport class DataExcelRowList extends List<DataExcelRow>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(row:any)\r\n    {\r\n        this.remove(row);\r\n    }\r\n \r\n    Get(index:any): DataExcelRow\r\n    {\r\n        return this.get(index);\r\n    }\r\n\r\n}\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { Rect } from \"../Base/Point\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { SelectCellCollection } from \"./SelectCellCollection\";\r\n\r\nexport class SelectAddRectCollection {\r\n    public _begincell: DataExcelCell | null;\r\n    public _endcell: DataExcelCell | null;\r\n    private _SelectCellCollection: SelectCellCollection | null = null;\r\n    public get SelectCellCollection(): SelectCellCollection | null {\r\n        return this._SelectCellCollection;\r\n    }\r\n    public set SelectCellCollection(value: SelectCellCollection | null) {\r\n        this._SelectCellCollection = value;\r\n        this._endcell = null;\r\n        if (this._SelectCellCollection != null) {\r\n            this.Left = this._SelectCellCollection.Left;\r\n            this.Top = this._SelectCellCollection.Top;\r\n            this.Width = this._SelectCellCollection.Width;\r\n            this.Height = this._SelectCellCollection.Height;\r\n        }\r\n    }\r\n\r\n    public Grid: DataExcel;\r\n    private _left: number = 0;\r\n    private _top: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    public get Left() {\r\n        return this._left;\r\n    }\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public get Width() {\r\n        return this._width;\r\n    }\r\n    public get Height() {\r\n        return this._height;\r\n    }\r\n    public set Left(value: number) {\r\n        this._left = value;\r\n    }\r\n    public set Top(value: number) {\r\n        this._top = value;\r\n    }\r\n    public set Width(value: number) {\r\n        this._width = value;\r\n    }\r\n    public set Height(value: number) {\r\n        this._height = value;\r\n    }\r\n    constructor(grid: DataExcel) {\r\n        this.Grid = grid;\r\n    }\r\n    GetAllCells(): List<DataExcelCell> {\r\n        return this.GetCellList();\r\n    }\r\n    public GetCellList(): List<DataExcelCell> {\r\n        let list = new List<DataExcelCell>();\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        if (begincell != null && endcell != null) {\r\n            let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n            let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n            let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n            let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n            for (var i = rmin; i <= rmax; i++) {\r\n                for (var j = cmin; j <= cmax; j++) {\r\n                    let cell = this.Grid.GetCellByIndex(i, j);\r\n                    list.add(cell);\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n\r\n    }\r\n\r\n    get BeginCell(): DataExcelCell|null {\r\n        return this._begincell;\r\n    }\r\n    set BeginCell(value: DataExcelCell|null) {\r\n        this._begincell = value;\r\n    }\r\n    get EndCell(): DataExcelCell | null {\r\n        if (this._endcell == null) {\r\n            return this._begincell;\r\n        }\r\n        return this._endcell;\r\n    }\r\n    set EndCell(value: DataExcelCell | null) {\r\n        this._endcell = value;\r\n        this.SetEndCell(value);\r\n    }\r\n\r\n    SetEndCell(value: any) {\r\n        try {\r\n            this.SetEndCell2(value);\r\n            let cell = value;\r\n            this._endcell = cell;\r\n            this.SetSize();\r\n        }\r\n        catch (ex) {\r\n        }\r\n    }\r\n    Orientation = true;\r\n    SetEndCell2(cell: any) {\r\n\r\n        this._endcell = cell;\r\n        let pt = cell.Rect.Location;\r\n        if (this.SelectCellCollection == null)\r\n            return;\r\n        if (this.SelectCellCollection.Left < pt.X && this.SelectCellCollection.Right > pt.X) {\r\n            this.Orientation = true;\r\n        }\r\n        else if (this.SelectCellCollection.Top < pt.Y && this.SelectCellCollection.Bottom > pt.Y) {\r\n            this.Orientation = false;\r\n        }\r\n        else {\r\n            if ((Math.abs(this.SelectCellCollection.Right - pt.X) >\r\n                Math.abs(this.SelectCellCollection.Bottom - pt.Y))) {\r\n                this.Orientation = false;\r\n            }\r\n            else {\r\n                this.Orientation = true;\r\n            }\r\n        }\r\n    }\r\n    SetSize() {\r\n        let bounds = new Rect(0, 0, 0, 0);\r\n        let maxrowindex = 0;\r\n        //Math.Max(this.SelectCellCollection.MaxCell.Row.Index, this.EndCell.Row.Index);\r\n        let maxcolumnindex = 0;\r\n        //Math.Max(this.SelectCellCollection.MaxCell.Column.Index, this.EndCell.Column.Index);\r\n\r\n        let minrowindex = 0;\r\n        //Math.Min(this.SelectCellCollection.MinCell.Row.Index,            this.EndCell.Row.Index);\r\n        let mincolumnindex = 0;\r\n        //Math.Min(this.SelectCellCollection.MinCell.Column.Index,            this.EndCell.Column.Index);\r\n        if (this.EndCell == null || this.SelectCellCollection == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.Orientation) {\r\n            //if (this.EndCell.Row.Index > this.SelectCellCollection.MaxCell.Row.Index)\r\n            if (this.EndCell.Row.Index > this.SelectCellCollection.MaxRow()) {\r\n                mincolumnindex = this.SelectCellCollection.MinColumn();\r\n                maxcolumnindex = this.SelectCellCollection.MaxColumn();\r\n                minrowindex = this.SelectCellCollection.MinRow();\r\n                maxrowindex = this.EndCell.Row.Index;\r\n            }\r\n            else if (this.EndCell.Row.Index < this.SelectCellCollection.MinRow()) {\r\n                mincolumnindex = this.SelectCellCollection.MinColumn();\r\n                maxcolumnindex = this.SelectCellCollection.MaxColumn();\r\n                minrowindex = this.SelectCellCollection.MaxRow();\r\n                maxrowindex = this.EndCell.Row.Index;\r\n            }\r\n        }\r\n        else {\r\n            if (this.EndCell.Column.Index > this.SelectCellCollection.MaxColumn()) {\r\n                minrowindex = this.SelectCellCollection.MinRow();\r\n                maxrowindex = this.SelectCellCollection.MaxRow();\r\n                mincolumnindex = this.SelectCellCollection.MinColumn();\r\n                maxcolumnindex = this.EndCell.Column.Index;\r\n            }\r\n            else if (this.EndCell.Column.Index < this.SelectCellCollection.MinColumn()) {\r\n                minrowindex = this.SelectCellCollection.MinRow();\r\n                maxrowindex = this.SelectCellCollection.MaxRow();\r\n                mincolumnindex = this.SelectCellCollection.MaxColumn();\r\n                maxcolumnindex = this.EndCell.Column.Index;\r\n            }\r\n        }\r\n        let endcell = this.Grid.GetCellByIndex(maxrowindex, maxcolumnindex);\r\n        let begincell = this.Grid.GetCellByIndex(minrowindex, mincolumnindex);\r\n\r\n\r\n        let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n\r\n        rmin = Math.max(rmin, this.Grid.FirstDisplayedRowIndex);\r\n        cmin = Math.max(cmin, this.Grid.FirstDisplayedColumnIndex);\r\n        rmax = Math.min(rmax, this.Grid.EndDisplayedRowIndex);\r\n        cmax = Math.min(cmax, this.Grid.EndDisplayedColumnIndex);\r\n\r\n        begincell = this.Grid.GetCellByIndex(rmin, cmin);\r\n        endcell = this.Grid.GetCellByIndex(rmax, cmax);\r\n\r\n        this.Top = begincell.Top;\r\n        this.Left = begincell.Left;\r\n        let width = 0;\r\n        for (let i = begincell.Column.Index; i <= endcell.Column.Index; i++) {\r\n\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column == null) {\r\n                continue;\r\n            }\r\n            if (!column.Visible) {\r\n                continue;\r\n            }\r\n            if (column.Index < this.Grid.FirstDisplayedColumnIndex) {\r\n                continue;\r\n            }\r\n\r\n            if (column.Index > this.Grid.EndDisplayedColumnIndex) {\r\n                continue;\r\n            }\r\n            width = column.Width + width;\r\n\r\n        }\r\n        this.Width = width;\r\n        let heigth = 0;\r\n        for (let i = begincell.Row.Index; i <= endcell.Row.Index; i++) {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row == null) {\r\n                continue;\r\n            }\r\n            if (!row.Visible) {\r\n                continue;\r\n            }\r\n            if (row.Index < this.Grid.FirstDisplayedRowIndex) {\r\n                continue;\r\n            }\r\n            if (row.Index > this.Grid.EndDisplayedRowIndex) {\r\n                continue;\r\n            }\r\n            heigth = row.Height + heigth;\r\n        }\r\n        this.Height = heigth;\r\n\r\n\r\n    }\r\n}\r\n","import { List } from \"../Base/ArrayList\";\r\nimport { Point, Rect } from \"../Base/Point\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\n\r\nexport class SelectCellCollection {\r\n    public _begincell: DataExcelCell | null;\r\n    public _endcell: DataExcelCell | null;\r\n\r\n    public Grid: DataExcel;\r\n    private _left: number = 0;\r\n    private _top: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    public get Left() {\r\n        return this._left;\r\n    }\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public get Width() {\r\n        return this._width;\r\n    }\r\n    public get Height() {\r\n        return this._height;\r\n    }\r\n    public set Left(value: number) {\r\n        this._left = value;\r\n    }\r\n    public set Top(value: number) {\r\n        this._top = value;\r\n    }\r\n    public set Width(value: number) {\r\n        this._width = value;\r\n    }\r\n    public set Height(value: number) {\r\n        this._height = value;\r\n    }\r\n    public get Right() {\r\n        return this.Left + this.Width;\r\n    }\r\n    public get Bottom() {\r\n        return this.Top + this.Height;\r\n    }\r\n    constructor() {\r\n    }\r\n    GetAllCells(): List<DataExcelCell> {\r\n        return this.GetCellList();\r\n    }\r\n    public GetCellList(): List<DataExcelCell> {\r\n        let list = new List<DataExcelCell>();\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        if (begincell != null && endcell != null) {\r\n            let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n            let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n            let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n            let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n            for (var i = rmin; i <= rmax; i++) {\r\n                for (var j = cmin; j <= cmax; j++) {\r\n                    let cell = this.Grid.GetCellByIndex(i, j);\r\n                    list.add(cell);\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    get BeginCell(): DataExcelCell|null {\r\n        return this._begincell;\r\n    }\r\n    set BeginCell(value: DataExcelCell|null) {\r\n        this._begincell = value;\r\n    }\r\n    get EndCell(): DataExcelCell|null {\r\n        if (this._endcell == null) {\r\n            return this._begincell;\r\n        }\r\n        return this._endcell;\r\n    }\r\n    set EndCell(value: DataExcelCell | null) {\r\n        this._endcell = value;\r\n        /*        this.Refresh();  */\r\n    }\r\n\r\n    AddRectContains(pt: Point): boolean {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.Width = 6;\r\n        rect.Height = 6;\r\n        rect.X = this.Right - 3;\r\n        rect.Y = this.Bottom - 3;\r\n        return rect.Contains(pt);\r\n    }\r\n\r\n    Refresh() {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        if (begincell != null && endcell != null) {\r\n            let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n            let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n            let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n            let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n\r\n            rmin = Math.max(rmin, this.Grid.FirstDisplayedRowIndex);\r\n            cmin = Math.max(cmin, this.Grid.FirstDisplayedColumnIndex);\r\n            rmax = Math.min(rmax, this.Grid.EndDisplayedRowIndex);\r\n            cmax = Math.min(cmax, this.Grid.EndDisplayedColumnIndex);\r\n\r\n            begincell = this.Grid.GetCellByIndex(rmin, cmin);\r\n            endcell = this.Grid.GetCellByIndex(rmax, cmax);\r\n\r\n            this.Top = begincell.Top;\r\n            this.Left = begincell.Left;\r\n            let width = 0;\r\n            for (let i = begincell.Column.Index; i <= endcell.Column.Index; i++) {\r\n\r\n                let column = this.Grid.Columns.Get(i);\r\n                if (column == null) {\r\n                    continue;\r\n                }\r\n                if (!column.Visible) {\r\n                    continue;\r\n                }\r\n                if (column.Index < this.Grid.FirstDisplayedColumnIndex) {\r\n                    continue;\r\n                }\r\n\r\n                if (column.Index > this.Grid.EndDisplayedColumnIndex) {\r\n                    continue;\r\n                }\r\n                width = column.Width + width;\r\n\r\n            }\r\n            this.Width = width;\r\n            let heigth = 0;\r\n            for (let i = begincell.Row.Index; i <= endcell.Row.Index; i++) {\r\n                let row = this.Grid.Rows.Get(i);\r\n                if (row == null) {\r\n                    continue;\r\n                }\r\n                if (!row.Visible) {\r\n                    continue;\r\n                }\r\n                if (row.Index < this.Grid.FirstDisplayedRowIndex) {\r\n                    continue;\r\n                }\r\n                if (row.Index > this.Grid.EndDisplayedRowIndex) {\r\n                    continue;\r\n                }\r\n                heigth = row.Height + heigth;\r\n            }\r\n            this.Height = heigth;\r\n        }\r\n    }\r\n\r\n    MaxRow(): number {\r\n        var begincell = this.BeginCell;\r\n        var endcell = this.EndCell;\r\n        if (begincell == null) {\r\n            return 0;\r\n        }\r\n        if (endcell == null) {\r\n            return 0;\r\n        }\r\n        var rmax = begincell.Row.Index;\r\n        var rmin = begincell.Row.Index;\r\n        var rmax1 = endcell.Row.Index;\r\n        var rmin1 = endcell.Row.Index;\r\n\r\n        //if (begincell.IsMergeCell)\r\n        //{\r\n        //        IMergeCell cell = this.BeginCell as IMergeCell;\r\n        //    if (cell != null)\r\n        //    {\r\n        //        rmax = cell.EndCell.Row.Index;\r\n        //        rmin = cell.BeginCell.Row.Index;\r\n        //    }\r\n        //}\r\n        //if (endcell.IsMergeCell)\r\n        //{\r\n        //        IMergeCell cell2 = this.EndCell as IMergeCell;\r\n        //    if (cell2 != null)\r\n        //    {\r\n        //        rmax1 = cell2.EndCell.Row.Index;\r\n        //        rmin1 = cell2.BeginCell.Row.Index;\r\n        //    }\r\n        //}\r\n        rmax = Math.max(rmax1, rmax);\r\n        rmin = Math.min(rmin1, rmin);\r\n        return rmax;\r\n    }\r\n\r\n    MaxColumn(): number {\r\n        var begincell = this.BeginCell;\r\n        var endcell = this.EndCell;\r\n        if (begincell == null) {\r\n            return 0;\r\n        }\r\n        if (endcell == null) {\r\n            return 0;\r\n        }\r\n\r\n        var cmax = begincell.Column.Index;\r\n        var cmin = begincell.Column.Index;\r\n        var cmax1 = endcell.Column.Index;\r\n        var cmin1 = endcell.Column.Index;\r\n\r\n        cmax = Math.max(cmax1, cmax);\r\n        cmin = Math.min(cmin1, cmin);\r\n        return cmax;\r\n    }\r\n\r\n    MinRow(): number {\r\n        var begincell = this.BeginCell;\r\n        var endcell = this.EndCell;\r\n        if (begincell == null) {\r\n            return 0;\r\n        }\r\n        if (endcell == null) {\r\n            return 0;\r\n        }\r\n        var rmax = begincell.Row.Index;\r\n        var rmin = begincell.Row.Index;\r\n        var rmax1 = endcell.Row.Index;\r\n        var rmin1 = endcell.Row.Index;\r\n\r\n        //if (begincell.IsMergeCell)\r\n        //{\r\n        //        IMergeCell cell = begincell as IMergeCell;\r\n        //    if (cell != null)\r\n        //    {\r\n        //        rmax = cell.EndCell.Row.Index;\r\n        //        rmin = cell.BeginCell.Row.Index;\r\n        //    }\r\n        //}\r\n        //if (endcell.IsMergeCell)\r\n        //{\r\n        //        IMergeCell cell2 = this.EndCell as IMergeCell;\r\n        //    if (cell2 != null)\r\n        //    {\r\n        //        rmax1 = cell2.EndCell.Row.Index;\r\n        //        rmin1 = cell2.BeginCell.Row.Index;\r\n        //    }\r\n        //}\r\n        rmax = Math.max(rmax1, rmax);\r\n        rmin = Math.min(rmin1, rmin);\r\n        return rmin;\r\n    }\r\n\r\n    MinColumn(): number {\r\n        var begincell = this.BeginCell;\r\n        var endcell = this.EndCell;\r\n        if (begincell == null) {\r\n            return 0;\r\n        }\r\n        if (endcell == null) {\r\n            return 0;\r\n        }\r\n        var cmax = begincell.Column.Index;\r\n        var cmin = begincell.Column.Index;\r\n        var cmax1 = endcell.Column.Index;\r\n        var cmin1 = endcell.Column.Index;\r\n\r\n        cmax = Math.max(cmax1, cmax);\r\n        cmin = Math.min(cmin1, cmin);\r\n        return cmin;\r\n    }\r\n\r\n}\r\n","﻿import { List } from \"../Base/ArrayList\";\r\nimport { GridLineStyle, FocusedCellStyle, SelectCellsStyle, SelectCellsStyleAdd, SelectCellsAddStyle } from \"../Base/CellHeaderStyle\";\r\nimport { CheckState, ConstantValue, Border } from \"../Base/ConstantValue\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { Dictionary } from \"../Base/Dictionary\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { MouseButtons } from \"../Base/MouseButtons\";\r\nimport { NextType } from \"../Base/NextType\";\r\nimport { Zoom, Rect, Point } from \"../Base/Point\";\r\nimport { SelectMode } from \"../Base/SelectMode\";\r\nimport { DefaultEdit } from \"../Base/Tool\";\r\nimport { Observer } from \"../Control/EventObserver2\";\r\nimport { Events } from \"../Control/Events\";\r\nimport { IViewEvent } from \"../Control/IViewEvent\";\r\nimport { DataExcelViewVScroll, DataExcelViewHScroll } from \"../Control/ScrollerView\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelCellEditEdit } from \"../Edit/DataExcelCellEditEdit\";\r\nimport { Chart } from \"../Plus/Chart\";\r\nimport { ChartList } from \"../Plus/ChartList\";\r\nimport { Displayable } from \"../Plus/Displayable/Displayable\";\r\nimport { Primitive } from \"../Plus/Primitive\";\r\nimport { PrimitiveList } from \"../Plus/PrimitiveList\";\r\nimport { DataExcelBackCell } from \"./DataExcelBackCell\";\r\nimport { DataExcelBackCellList } from \"./DataExcelBackCellList\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { DataExcelCellList } from \"./DataExcelCellList\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\nimport { DataExcelColumnCollection } from \"./DataExcelColumnCollection\";\r\nimport { DataExcelColumnList } from \"./DataExcelColumnList\";\r\nimport { DataExcelMergeCell } from \"./DataExcelMergeCell\";\r\nimport { DataExcelMergeCellList } from \"./DataExcelMergeCellList\";\r\nimport { DataExcelRow } from \"./DataExcelRow\";\r\nimport { DataExcelRowCollection } from \"./DataExcelRowCollection\";\r\nimport { DataExcelRowList } from \"./DataExcelRowList\";\r\nimport { SelectAddRectCollection } from \"./SelectAddRectCollection\";\r\nimport { SelectCellCollection } from \"./SelectCellCollection\";\r\ndeclare var zrender: any;\r\nexport class DataExcel {\r\n    //集合\r\n    public Rows: DataExcelRowCollection<number, DataExcelRow>;\r\n    public Columns: DataExcelColumnCollection<number, DataExcelColumn>;\r\n    public AllVisibleColumns: DataExcelColumnList;\r\n    public AllVisibleRows: DataExcelRowList;\r\n    public VisibleRows: DataExcelRowList;\r\n    public VisibleColumns: DataExcelColumnList;\r\n    public SelectRows: DataExcelRowList;\r\n    public SelectColumns: DataExcelColumnList;\r\n    public SelectRange: DataExcelCellList;\r\n    public SelectCells: SelectCellCollection | null;\r\n    public SelectAddRectCollection: SelectAddRectCollection | null;\r\n\r\n    public MergeCells: DataExcelMergeCellList;\r\n    public BackCells: DataExcelBackCellList;\r\n    public CopyCells: SelectCellCollection | null;\r\n    public Charts: ChartList;\r\n    public Primitives: PrimitiveList;\r\n\r\n    //对象\r\n    public HeaderRow: DataExcelRow;\r\n    public HeaderColumn: DataExcelColumn;\r\n    public _focusedcell: DataExcelCell | null;\r\n    public EditCell: DataExcelCell | null;\r\n    public VScroll: DataExcelViewVScroll;\r\n    public HScroll: DataExcelViewHScroll;\r\n    public DefaultEdit: DataExcelCellEditEdit;\r\n    public IDCells = new Dictionary<string, DataExcelCell>();\r\n    //值属性\r\n    public Width = 1200;\r\n    private _heigth:number = 600;\r\n    public get Height():number {\r\n        return this._heigth;\r\n    }\r\n    public set Height(value:number)\r\n    {\r\n        this._heigth=value;\r\n    }\r\n    public ShowBorder = false;\r\n    public ShowColumnHeader = true;\r\n    public ShowRowHeader = true;\r\n\r\n    public ShowGridLine = true;\r\n    private _FirstDisplayedRowIndex = 1;\r\n    public get FirstDisplayedRowIndex() {\r\n        return this._FirstDisplayedRowIndex;\r\n    }\r\n    public set FirstDisplayedRowIndex(value) {\r\n        this._FirstDisplayedRowIndex = value;\r\n    }\r\n    public EndDisplayedRowIndex = 1;\r\n    private _FirstDisplayedColumnIndex = 1;\r\n    public get FirstDisplayedColumnIndex() {\r\n        return this._FirstDisplayedColumnIndex;\r\n    }\r\n    public set FirstDisplayedColumnIndex(value) {\r\n        this._FirstDisplayedColumnIndex = value;\r\n    }\r\n    public EndDisplayedColumnIndex = 1;\r\n    private _ReadOnly: number = CheckState.Unkown;\r\n    public get ReadOnly(): number {\r\n        return this._ReadOnly;\r\n    }\r\n    public set ReadOnly(value: number) {\r\n        this._ReadOnly = value;\r\n    }\r\n    public TopSideHeight = 0;\r\n    public LeftSideWidth = 0;\r\n    public Font = \"14px 宋体\";\r\n    public AutoGenerateRows = true;\r\n    public AutoGenerateColumns = true;\r\n    public DefaultColumnWidth = 72;\r\n    public DefaultRowHeight = 20;\r\n    public MaxRow = 1000000;\r\n    public MaxColumn = 512;\r\n    public FrozenRow = 0;\r\n    public FrozenColumn = 0;\r\n    public ContentTop = 20;\r\n    public ContentLeft = 20;\r\n    public ContentRight = 20;\r\n    public ContentBottom = 0;\r\n    public Zoom: Zoom | null = null;\r\n    private _EndReFresh = 0;\r\n    private _BeginReFresh = 0;\r\n    private _CurrentEdit: any = null;\r\n    public get CurrentEdit(): any {\r\n        return this._CurrentEdit;\r\n    }\r\n    public set CurrentEdit(value: any) {\r\n        this._CurrentEdit = value;\r\n    }\r\n\r\n    private _ForeColor: any = \"black\";\r\n    public get ForeColor(): any {\r\n        return this._ForeColor;\r\n    }\r\n    public set ForeColor(value: any) {\r\n        this._ForeColor = value;\r\n    }\r\n    private _BackColor: any = null;\r\n    public get BackColor(): any {\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    public BackImage: string = \"\";\r\n    public BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    //style\r\n\r\n    private _BorderColor = \"Silver\";\r\n    public get BorderColor() {\r\n        return this._BorderColor;\r\n    }\r\n    public set BorderColor(value) {\r\n        this._BorderColor = value;\r\n    }\r\n    //显示\r\n    public ShowFocusedCellBorder: boolean = true;\r\n    public ShowSelectBorder: boolean = true;\r\n    public Selectmode: number = SelectMode.Null;\r\n    public editcontrol: HTMLInputElement;\r\n    public maindom: HTMLElement;\r\n    public graphic: Graphics;\r\n    public MouseDownPoint: object;\r\n    private _CellEvent: IViewEvent | null;\r\n    public get CurrentEvent(): IViewEvent | null {\r\n        return this._CellEvent;\r\n    }\r\n    public set CurrentEvent(value: IViewEvent | null) {\r\n        //if (value == null)\r\n        //{\r\n        //    console.log(\" set CellEvent \" + new Date().toLocaleTimeString());\r\n        //    console.trace(value);\r\n        //}\r\n        this._CellEvent = value;\r\n    }\r\n    public ShowSelectAddRect: boolean = true;\r\n    public MultiSelect: boolean = true;\r\n    public AllowChangedFirstDisplayRow: boolean = true;\r\n    public AllowChangedFirstDisplayColumn: boolean = true;\r\n    //DEFINE EVENT\r\n    public EventHandlers: Observer;\r\n    public CellSelectChangedEvent: any;\r\n    public zrendermain: any = null;\r\n    //DEBUG\r\n    public DebugRect: Rect;\r\n    public DebugText: string;\r\n    public DebugText2: string;\r\n\r\n    private _StartTime: Date;\r\n    public get StartTime(): Date {\r\n        return this._StartTime;\r\n    }\r\n\r\n    public get FocusedCell(): DataExcelCell | null {\r\n        return this._focusedcell;\r\n    }\r\n    public set FocusedCell(cell: DataExcelCell | null) {\r\n        this._focusedcell = cell;\r\n    }\r\n    get InEdit(): boolean {\r\n        if (this.FocusedCell == null) {\r\n            return false;\r\n        }\r\n        let res = (this.FocusedCell == this.EditCell);\r\n        if (res) {\r\n            if (this.CurrentEdit == null) {\r\n                res = false;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    get ClientBounds() {\r\n        let left = this.ContentLeft;\r\n        let top = this.ContentTop;\r\n        let width = this.Width - this.ContentRight - left;\r\n        let height = this.Height - this.ContentBottom - top;\r\n        let rect = new Rect(left, top, width, height);\r\n        return rect;\r\n\r\n    }\r\n    //FIle\r\n    public GetData() {\r\n        let data = {\r\n            height: this.Height,\r\n            rows: [],\r\n            columns: [],\r\n            mergecells: [],\r\n            backcells: [],\r\n            charts: [],\r\n            primitives: []\r\n        } as any;\r\n        data.allowchangedfirstdisplaycolumn = this.AllowChangedFirstDisplayColumn;\r\n        data.allowchangedfirstdisplayrow = this.AllowChangedFirstDisplayRow;\r\n        data.backcolor = this.BackColor;\r\n        data.backimage = this.BackImage;\r\n        data.backimageimagelayout = this.BackImageImageLayout;\r\n        data.bordercolor = this.BorderColor;\r\n        data.firstdisplayedcolumnindex = this.FirstDisplayedColumnIndex;\r\n        data.firstdisplayedrowindex = this.FirstDisplayedRowIndex;\r\n        data.forecolor = this.ForeColor;\r\n        data.frozencolumn = this.FrozenColumn;\r\n        data.frozenrow = this.FrozenRow;\r\n        data.font = this.Font;\r\n        data.multiselect = this.MultiSelect;\r\n        data.readonly = this.ReadOnly;\r\n        data.showborder = this.ShowBorder;\r\n        data.showcolumnheader = this.ShowColumnHeader;\r\n        data.showfocusedcellborder = this.ShowFocusedCellBorder;\r\n        data.showgridline = this.ShowGridLine;\r\n        data.showrowheader = this.ShowRowHeader;\r\n        data.showselectaddrect = this.ShowSelectAddRect;\r\n        data.showselectborder = this.ShowSelectBorder;\r\n        data.zoom = this.Zoom;\r\n        data.vscrollvisible = this.VScroll.Visible;\r\n        data.hscrollvisible = this.HScroll.Visible;\r\n        data.width = this.Width;\r\n        data.height = this.Height;\r\n        data.zoom = this.Zoom;\r\n        data.defaultrowheight = this.DefaultRowHeight;\r\n        data.defaultcolumnwidth = this.DefaultColumnWidth;\r\n\r\n        this.Columns.forEach((column: DataExcelColumn) => {\r\n            data.columns.push(column.GetData());\r\n        });\r\n\r\n        this.Rows.forEach((row: DataExcelRow) => {\r\n            data.rows.push(row.GetData());\r\n        });\r\n\r\n        this.MergeCells.forEach((mergecell: DataExcelMergeCell) => {\r\n            data.mergecells.push(mergecell.GetData());\r\n        });\r\n        this.BackCells.forEach((mergecell: DataExcelBackCell) => {\r\n            data.backcells.push(mergecell.GetData());\r\n        });\r\n        this.Charts.forEach((chart: Chart) => {\r\n            data.charts.push(chart.GetData());\r\n        });\r\n\r\n        this.Primitives.forEach((chart: Primitive) => {\r\n            data.primitives.push(chart.GetData());\r\n        });\r\n\r\n        return data;\r\n    }\r\n    public SetData(data: any) {\r\n        try {\r\n            this.Clear();\r\n            this.AllowChangedFirstDisplayColumn = data.allowchangedfirstdisplaycolumn;\r\n            this.AllowChangedFirstDisplayRow = data.allowchangedfirstdisplayrow;\r\n            this.BackColor = data.backcolor;\r\n            this.BackImage = data.backimage;\r\n            this.BackImageImageLayout = data.backimageimagelayout;\r\n            this.BorderColor = data.bordercolor;\r\n            this.FirstDisplayedColumnIndex = data.firstdisplayedcolumnindex;\r\n            this.FirstDisplayedRowIndex = data.firstdisplayedrowindex;\r\n            this.ForeColor = data.forecolor;\r\n            this.FrozenColumn = data.frozencolumn;\r\n            this.FrozenRow = data.frozenrow;\r\n            this.Font = data.font;\r\n            this.MultiSelect = data.multiselect;\r\n            this.ReadOnly = data.readonly;\r\n            this.ShowBorder = data.showborder;\r\n            this.ShowColumnHeader = data.showcolumnheader;\r\n            this.ShowFocusedCellBorder = data.showfocusedcellborder;\r\n            this.ShowGridLine = data.showgridline;\r\n            this.ShowRowHeader = data.showrowheader;\r\n            this.ShowSelectAddRect = data.showselectaddrect;\r\n            this.ShowSelectBorder = data.showselectborder;\r\n            this.Zoom = data.zoom;\r\n            this.VScroll.Visible = data.vscrollvisible;\r\n            this.HScroll.Visible = data.hscrollvisible;\r\n            this.Zoom = data.zoom;\r\n            if (data.defaultrowheight != null) {\r\n                this.DefaultRowHeight = data.defaultrowheight;\r\n            }\r\n            if (data.defaultcolumnwidth != null) {\r\n                this.DefaultColumnWidth = data.defaultcolumnwidth;\r\n            }\r\n            this.Width = data.width;\r\n            this.Height = data.height;\r\n\r\n            let len = data.columns.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let columndata = data.columns[i];\r\n                let column = new DataExcelColumn();\r\n                column.Grid = this;\r\n                column.SetData(this, columndata)\r\n                this.Columns.Add(column.Index, column);\r\n            }\r\n\r\n            len = data.rows.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let rowdata = data.rows[i];\r\n                let row = new DataExcelRow();\r\n                row.Grid = this;\r\n                row.SetData(this, rowdata)\r\n                this.Rows.Add(row.Index, row);\r\n            }\r\n\r\n            len = data.mergecells.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let itemdata = data.mergecells[i];\r\n                let item = new DataExcelMergeCell();\r\n                item.Grid = this;\r\n                item.SetData(this, itemdata)\r\n                this.MergeCells.Add(item);\r\n            }\r\n            len = data.backcells.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let itemdata = data.backcells[i];\r\n                let item = new DataExcelBackCell();\r\n                item.Grid = this;\r\n                item.SetData(this, itemdata)\r\n                this.BackCells.Add(item);\r\n            }\r\n\r\n            len = data.backcells.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let itemdata = data.backcells[i];\r\n                let item = new DataExcelBackCell();\r\n                item.Grid = this;\r\n                item.SetData(this, itemdata)\r\n                this.BackCells.Add(item);\r\n            }\r\n\r\n            len = data.charts.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let itemdata = data.charts[i];\r\n                let item = new Chart();\r\n                item.Grid = this;\r\n                item.SetData(this, itemdata);\r\n                this.Charts.Add(item);\r\n            }\r\n\r\n            len = data.primitives.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let itemdata = data.primitives[i];\r\n                let item = new Primitive();\r\n                item.Grid = this;\r\n                item.SetData(this, itemdata);\r\n                this.Primitives.Add(item);\r\n            }\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"SetData\", e);\r\n        }\r\n    }\r\n    //构告函数\r\n    constructor() {\r\n        this.Rows = new DataExcelRowCollection();\r\n        this.Columns = new DataExcelColumnCollection();\r\n        this.AllVisibleColumns = new DataExcelColumnList();\r\n        this.VisibleColumns = new DataExcelColumnList();\r\n        this.AllVisibleRows = new DataExcelRowList();\r\n        this.VisibleRows = new DataExcelRowList();\r\n        this.SelectRange = new DataExcelCellList();\r\n        this.SelectRows = new DataExcelRowList();\r\n        this.SelectColumns = new DataExcelColumnList();\r\n        this.MergeCells = new DataExcelMergeCellList();\r\n        this.BackCells = new DataExcelBackCellList();\r\n        this.DefaultEdit = new DataExcelCellEditEdit();\r\n        this.Charts = new ChartList();\r\n        this.Primitives = new PrimitiveList();\r\n        this.EventHandlers = new Observer();\r\n        this.VScroll = new DataExcelViewVScroll(this);\r\n        this.HScroll = new DataExcelViewHScroll(this);\r\n\r\n\r\n        this.Width = 1200;\r\n        this.Height = 600;\r\n        this.ShowBorder = true;\r\n        this.ShowColumnHeader = true;\r\n        this.ShowRowHeader = true;\r\n        this.ShowGridLine = true;\r\n        this.FirstDisplayedRowIndex = 1;\r\n        this.EndDisplayedRowIndex = 1;\r\n        this.FirstDisplayedColumnIndex = 1;\r\n        this.EndDisplayedColumnIndex = 1;\r\n        this.ReadOnly = CheckState.Unkown;\r\n        this.TopSideHeight = 0;\r\n        this.Font = \"14px 宋体\";\r\n        //this.BackColor = \"red\";\r\n        this.AutoGenerateRows = true;\r\n        this.MaxRow = 1000000;\r\n        this.FrozenRow = 0;\r\n        this.ContentTop = 0;\r\n        this.ContentBottom = 0;\r\n        this._StartTime = new Date();\r\n\r\n    };\r\n    InitDom(dom: HTMLElement) {\r\n        this.maindom = dom;\r\n        this.Width = dom.clientWidth;\r\n        this.Height = dom.clientHeight;\r\n        // this.maindom.style.width = this.Width + \"px\";\r\n        // this.maindom.style.height = this.Height + \"px\";\r\n        dom.onwheel = (e) => { e.stopPropagation(); return false; };\r\n        let zr = zrender.init(dom);\r\n        this.zrendermain = zr;\r\n        this.graphic = new Graphics(zr);\r\n        zr[\"Grid\"] = this;\r\n        dom[\"Grid\"] = this;\r\n        window[\"Grid\"] = this;\r\n        document[\"Grid\"] = this;\r\n        dom.addEventListener(\"wheel\", this.OnWheel);\r\n        dom.addEventListener(\"resize\", this.OnResize);\r\n\r\n        dom.addEventListener(\"mousedown\", this.OnMouseDown);\r\n        dom.addEventListener(\"mouseup\", this.OnMouseUp);\r\n        dom.addEventListener(\"mousemove\", this.OnMouseMove);\r\n        dom.addEventListener(\"dblclick\", this.OnMouseDoubleClick);\r\n        dom.addEventListener(\"touchstart\", this.OnTouchStart);\r\n        dom.addEventListener(\"touchmove\", this.OnTouchMove, { passive: false });\r\n        dom.addEventListener(\"touchend\", this.OnTouchEnd);\r\n        dom.addEventListener(\"touchcancel\", this.OnTouchCancel);\r\n\r\n        //window.addEventListener(\"mousedown\", this.OnMouseDown);\r\n        //window.addEventListener(\"mouseup\", this.OnMouseUp);\r\n        //window.addEventListener(\"mousemove\", this.OnMouseMove);\r\n        //window.addEventListener(\"dblclick\", this.OnMouseDoubleClick);\r\n        //window.addEventListener(\"touchstart\", this.OnTouchStart);\r\n        //window.addEventListener(\"touchmove\", this.OnTouchMove, { passive: false });\r\n        //window.addEventListener(\"touchend\", this.OnTouchEnd);\r\n        //window.addEventListener(\"touchcancel\", this.OnTouchCancel);\r\n\r\n\r\n\r\n        window.addEventListener(\"keypress\", this.OnKeyPress);\r\n        window.addEventListener(\"keydown\", this.OnKeyDown);\r\n        window.addEventListener(\"paste\", this.OnPaste);\r\n        window.addEventListener(\"cut\", this.OnCut);\r\n        window.addEventListener(\"copy\", this.OnCopy);\r\n        //window.addEventListener(\"mousemove\", this.OnMouseMove, true);\r\n        //window.addEventListener(\"mousemove\", this.OnWindowMouseMove, true);\r\n        this.Height = zr.getHeight();\r\n        this.Width = zr.getWidth();\r\n        this.VScroll.RefreshScrollThumd();\r\n        this.HScroll.RefreshScrollThumd();\r\n    }\r\n    //test\r\n    //OnWindowMouseMove(evt: MouseEvent): void\r\n    //{\r\n    //    DataExcelConsole.log(\"OnWindowMouseMove __\", evt);     \r\n    //}\r\n    //endtest\r\n    RePaint(e?: any) {\r\n        this.graphic.Clear();\r\n        var g = this.graphic as any;\r\n        g.tag = e;\r\n        this.OnDraw(this.graphic);\r\n    }\r\n    InitEdit(edit: HTMLInputElement) {\r\n        this.editcontrol = edit;\r\n        let d = this.maindom;\r\n        d.appendChild(edit);\r\n    }\r\n    SetSize(width: number, height: number) {\r\n        this.Width = width;\r\n        this.Height = height;\r\n        DataExcelConsole.log(\"SetSize\", width + \" \" + height);\r\n\r\n        this.maindom.style.width = (width - 1) + \"px\";\r\n        this.maindom.style.height = (height - 1) + \"px\";\r\n\r\n        let opts = { width: width, height: height };\r\n        this.zrendermain.resize();\r\n        //this.Height = this.zrendermain.getHeight();\r\n        //this.Width = this.zrendermain.getWidth();\r\n        this.maindom.style.width = width + \"px\";\r\n        this.maindom.style.height = height + \"px\";\r\n        this.zrendermain.resize();\r\n    }\r\n    InitChart() {\r\n        this.Charts.forEach((chart) => {\r\n            chart.Init();\r\n            chart.Refresh();\r\n            chart.RefreshData();\r\n        });\r\n\r\n    }\r\n    RefreshChart() {\r\n        this.Charts.forEach((chart) => {\r\n            chart.Refresh();\r\n            chart.RefreshData();\r\n        });\r\n    }\r\n    RefreshZrender() {\r\n        this.maindom.style.width = this.Width + \"px\";\r\n        this.maindom.style.height = this.Height + \"px\";\r\n        this.zrendermain.resize();\r\n    }\r\n    Refresh() {\r\n        this.SetFirstDisplayRow(this.FirstDisplayedRowIndex);\r\n        this.SetFirstDisplayColumn(this.FirstDisplayedColumnIndex);\r\n        if (this.SelectCells != null) {\r\n            this.SelectCells.Refresh();\r\n        }\r\n        if (this.MergeCells != null) {\r\n            this.MergeCells.Refresh();\r\n        }\r\n        if (this.BackCells != null) {\r\n            this.BackCells.Refresh();\r\n        }\r\n\r\n        if (this.VScroll.Value != this.FirstDisplayedRowIndex) {\r\n            this.VScroll.Value = this.FirstDisplayedRowIndex;\r\n            this.VScroll.RefreshScrollThumd();\r\n        }\r\n        if (this.HScroll.Value != this.FirstDisplayedColumnIndex) {\r\n            this.HScroll.Value = this.FirstDisplayedColumnIndex;\r\n            this.HScroll.RefreshScrollThumd();\r\n\r\n        }\r\n        this.EndEdit();\r\n    }\r\n    //EVENT OVERRIDE\r\n    private debugmode: boolean = false;\r\n\r\n    OnPaste(evt: any) {\r\n        try {\r\n            var obj = this[\"Grid\"] as DataExcel;\r\n            //DataExcelConsole.log(\"OnPaste\", this);\r\n            evt.stopPropagation();\r\n            obj.DoPaste(evt);\r\n            obj.RePaint();\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"OnPaste\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n    }\r\n    OnCopy(evt: any) {\r\n        try {\r\n            var obj = this[\"Grid\"] as DataExcel;\r\n            //DataExcelConsole.log(\"OnPaste\", this);\r\n            evt.stopPropagation();\r\n            obj.DoCopy(evt);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"OnPaste\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n    }\r\n    OnCut(evt: any) {\r\n        try {\r\n            var obj = this[\"Grid\"] as DataExcel;\r\n            //DataExcelConsole.log(\"OnPaste\", this);\r\n            evt.stopPropagation();\r\n            obj.DoCut(evt);\r\n            obj.RePaint();\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"OnPaste\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n    }\r\n    OnMouseDoubleClick(evt: MouseEvent) {\r\n        let ev = new EventView();\r\n        var obj: any;\r\n        try {\r\n            obj = this[\"Grid\"] as DataExcel;\r\n            this.debugmode = true;\r\n            ev.Canvas = evt.target;\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Dom = dom;\r\n            let x = evt.offsetX;\r\n            let y = evt.offsetY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnMouseDoubleClick(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.OnMouseDoubleClick\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n    }\r\n    OnWheel(evt: any) {\r\n        try {\r\n            evt.stopPropagation();\r\n            let step = -3;\r\n            let obj = this[\"Grid\"] as DataExcel;\r\n            let target = evt.target as HTMLCanvasElement;\r\n            if (evt.wheelDelta < 0) {\r\n                step = 3;\r\n            }\r\n            if (evt.ctrlKey) {\r\n                obj.FirstDisplayedColumnIndex = obj.FirstDisplayedColumnIndex + step;\r\n            }\r\n            else {\r\n                obj.FirstDisplayedRowIndex = obj.FirstDisplayedRowIndex + step;\r\n            }\r\n            if (obj.FirstDisplayedColumnIndex < 1) {\r\n                obj.FirstDisplayedColumnIndex = 1;\r\n            }\r\n            if (obj.FirstDisplayedRowIndex < 1) {\r\n                obj.FirstDisplayedRowIndex = 1;\r\n\r\n            }\r\n            obj.emit(Events.FirstDisplayRowChanged, obj, obj.VScroll, obj.FirstDisplayedRowIndex);\r\n            obj.emit(Events.FirstDisplayColumnChanged, obj, obj.VScroll, obj.FirstDisplayedColumnIndex);\r\n            obj.Refresh();\r\n            obj.RePaint(evt);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.addEventListener OnWheel\", ex);\r\n        }\r\n        return true;\r\n    }\r\n    OnMouseDown(evt: MouseEvent): void {\r\n        var obj = this[\"Grid\"] as DataExcel;\r\n\r\n        let ev = new EventView();\r\n        try {\r\n            this.debugmode = true;\r\n            ev.Canvas = evt.target;\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Dom = dom;\r\n            let x = evt.offsetX;\r\n            let y = evt.offsetY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnMouseDown(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.OnMouseDown\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n        obj.CurrentEvent = ev.CurrentEvent;\r\n    }\r\n    OnMouseUp(evt: MouseEvent): void {\r\n        this.debugmode = false;\r\n        var obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            this.debugmode = true;\r\n            ev.Canvas = evt.target;\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Dom = dom;\r\n            let x = evt.offsetX;\r\n            let y = evt.offsetY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnMouseUp(this, evt, ev);\r\n            obj.Selectmode = SelectMode.Null;\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.OnMouseUp\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n    }\r\n    OnMouseMove(evt: MouseEvent): void {\r\n        if (this.debugmode) {\r\n            this.debugmode = false;\r\n        }\r\n        let obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Canvas = evt.target;\r\n            ev.Dom = dom;\r\n            let x = evt.offsetX;\r\n            let y = evt.offsetY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnMouseMove(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.click\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n    }\r\n\r\n    OnKeyPress(evt: KeyboardEvent) {\r\n        var obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            ev.Canvas = evt.target;\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Dom = dom;\r\n            //this.debugmode = true;\r\n            obj.DoOnKeyPress(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.OnMouseDown\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n    }\r\n    OnKeyDown(evt: KeyboardEvent) {\r\n        var obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            ev.Canvas = evt.target;\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Dom = dom;\r\n            obj.DoOnKeyDown(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.OnMouseDown\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n    }\r\n    OnTouchStart(evt: TouchEvent) {\r\n        let obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Canvas = evt.target;\r\n            ev.Dom = dom;\r\n            let x = evt.touches[0].clientX;\r\n            let y = evt.touches[0].clientY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnTouchStart(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"OnTouchStart\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n        obj.CurrentEvent = ev.CurrentEvent;\r\n    }\r\n    OnTouchMove(evt: TouchEvent) {\r\n        let obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Canvas = evt.target;\r\n            ev.Dom = dom;\r\n            let x = evt.touches[0].clientX;\r\n            let y = evt.touches[0].clientY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnTouchMove(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.click\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.Refresh();\r\n            obj.RePaint();\r\n            return true;\r\n        }\r\n    }\r\n    OnTouchEnd(evt: TouchEvent) {\r\n        let obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            let dom = evt.target as HTMLElement;\r\n            ev.Canvas = evt.target;\r\n            ev.Dom = dom;\r\n            let x = evt.touches[0].clientX;\r\n            let y = evt.touches[0].clientY;\r\n            let evtpath = evt as any;\r\n            let path = evtpath.path;\r\n            let len = path.length;\r\n            let offsetleft = 0;\r\n            let offsettop = 0;\r\n            for (var i = 0; i < len; i++) {\r\n                let domt = path[i];\r\n                if (domt == obj.maindom) {\r\n                    break;\r\n                }\r\n                offsetleft = offsetleft + domt.offsetLeft;\r\n                offsettop = offsettop + domt.offsetTop;\r\n            }\r\n            ev.offsetPoint = new Point(x + offsetleft, y + offsettop);\r\n            obj.DoOnTouchEnd(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.click\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n    }\r\n    OnTouchCancel(evt: TouchEvent) {\r\n        let obj = this[\"Grid\"] as DataExcel;\r\n        let ev = new EventView();\r\n        try {\r\n            obj.DoOnTouchCancel(this, evt, ev);\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.click\", ex);\r\n        }\r\n        finally {\r\n\r\n        }\r\n        if (ev.NeedRePaint) {\r\n            obj.RePaint();\r\n        }\r\n    }\r\n    OnResize(evt: UIEvent) {\r\n        try {\r\n            let obj = this[\"Grid\"] as DataExcel;\r\n            obj.zrendermain.resize();\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom.OnResize\", ex);\r\n        }\r\n    }\r\n\r\n    //PAINT\r\n\r\n    Paint() {\r\n        this.OnDraw(this.graphic);\r\n    }\r\n\r\n    OnDraw(g: Graphics) {\r\n        g.AddDrawTimes();\r\n        this._EndReFresh = 0;\r\n        this._BeginReFresh = 0;\r\n\r\n        this.OnDrawGridLine(g);\r\n        this.OnDrawBack(g)\r\n        this.OnDrawColumn(g);\r\n        this.OnDrawBackCell(g);\r\n        this.OnDrawCellBack(g);\r\n        this.OnDrawMergeCellBack(g);\r\n        this.OnDrawRow(g);\r\n        this.OnDrawMergeCell(g);\r\n        this.OnDrawPrimitives(g);\r\n        this.OnDrawRowHeader(g);\r\n        this.OnDrawColumnHeader(g);\r\n        this.OnDrawBorder(g);\r\n        this.OnDrawListExtendCells(g);\r\n        this.OnDrawSelectCells(g);\r\n        this.OnDrawFunctionSelect(g);\r\n        this.OnDrawMoveBorder(g);\r\n        this.OnDrawCopyCellRect(g);\r\n        this.OnShowMultSelectCells(g);\r\n        this.OnDrawShowFocusedCellBorder(g);\r\n        this.OnDrawFunctionBorder(g);\r\n        this.OnDrawHScroll(g);\r\n        this.OnDrawDebug(g);\r\n        this.OnDrawGridBorder(g);\r\n        this.OnDrawCharts(g);\r\n    }\r\n    OnDrawBack(g: Graphics) {\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, 0, 0, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            let rect = new Rect(this.ContentLeft, this.ContentTop, this.Width, this.Height);\r\n            g.FillRectangleImage(this.BackImage, rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n    }\r\n    OnDrawColumn(g: Graphics) {\r\n        var i: number;\r\n        var count: number;\r\n        count = this.AllVisibleColumns.Count;\r\n\r\n        for (i = 0; i < count; i++) {\r\n            var column = this.AllVisibleColumns.Get(i);\r\n            column.OnDraw(this, g);\r\n        }\r\n    }\r\n    OnDrawBackCell(g: Graphics) {\r\n\r\n    }\r\n    OnDrawCellBack(g: Graphics) {\r\n        var i: number;\r\n        var count: number;\r\n        count = this.AllVisibleRows.Count;\r\n        for (i = 0; i < count; i++) {\r\n            var row = this.AllVisibleRows.Get(i);\r\n            row.OnDrawBack(this, g);\r\n        }\r\n    }\r\n    OnDrawMergeCellBack(g: Graphics) {\r\n\r\n    }\r\n    OnDrawRow(g: Graphics) {\r\n        var i: number;\r\n        var count: number;\r\n        count = this.AllVisibleRows.Count;\r\n        for (i = 0; i < count; i++) {\r\n            var row = this.AllVisibleRows.Get(i);\r\n            row.OnDraw(this, g);\r\n        }\r\n    }\r\n    OnDrawMergeCell(g: Graphics) {\r\n\r\n    }\r\n    OnDrawRowHeader(g: Graphics) {\r\n\r\n    }\r\n    OnDrawColumnHeader(g: Graphics) {\r\n\r\n    }\r\n    OnDrawGridLine(g: Graphics) {\r\n        if (this.ShowGridLine) {\r\n            g.DrawLine(GridLineStyle.stroke, 0, 0, this.Width, 0);\r\n            g.DrawLine(GridLineStyle.stroke, 0, 0, 0, this.Height);\r\n            var rhcount = this.AllVisibleRows.Count;\r\n            var chcount = this.AllVisibleColumns.Count;\r\n            for (var i = 0; i < rhcount; i++) {\r\n                var row = this.AllVisibleRows.Get(i);\r\n                for (var j = 0; j < chcount; j++) {\r\n                    var column = this.AllVisibleColumns.Get(j);\r\n                    var cell = row.Cells.Get(column);\r\n                    if (cell == null) {\r\n                        cell = this.NewCell(row, column);\r\n                    }\r\n                    cell.OnDrawGridLine(this, g);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    OnDrawBorder(g: Graphics) {\r\n        var rhcount = this.AllVisibleRows.Count;\r\n        var chcount = this.AllVisibleColumns.Count;\r\n        for (var i = 0; i < rhcount; i++) {\r\n            var rh = this.AllVisibleRows.Get(i);\r\n            for (var j = 0; j < chcount; j++) {\r\n                var ch = this.AllVisibleColumns.Get(j);\r\n                var cell = rh.Cells.Get(ch);\r\n                if (cell != null) {\r\n                    cell.OnDrawBorder(this, g);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    OnDrawListExtendCells(g: Graphics) {\r\n\r\n    }\r\n    OnDrawSelectCells(g: Graphics) {\r\n\r\n        if (this.ShowSelectBorder) {\r\n            if (this.FocusedCell != null) {\r\n                if (this.InVisible(this.FocusedCell)) {\r\n                    if (this.FocusedCell.ShowFocusedSelectBorder) {\r\n                        g.FillRectangleStyle(FocusedCellStyle, this.FocusedCell.Rect);\r\n                    }\r\n                }\r\n            }\r\n            if (!this.InEdit) {\r\n                if (this.SelectCells != null) {\r\n                    //let drawselectcells = true;\r\n                    if (this.SelectCells.BeginCell != this.SelectCells.EndCell) {\r\n\r\n                        g.FillRectStyle(SelectCellsStyle,\r\n                            this.SelectCells.Left, this.SelectCells.Top, this.SelectCells.Width, this.SelectCells.Height);\r\n\r\n                        //g.FillRectangle(\"red\", this.SelectCells.Left, this.SelectCells.Top, this.SelectCells.Width, this.SelectCells.Height);\r\n                    }\r\n                    g.FillRectStyle(SelectCellsStyleAdd,\r\n                        this.SelectCells.Right - 2, this.SelectCells.Bottom - 2, 4, 4, Cursors.crosshair, 99);\r\n                }\r\n                if (this.SelectAddRectCollection != null) {\r\n                    //this.SelectAddRectCollection.OnDraw(this, g);\r\n                    g.FillRectStyle(SelectCellsAddStyle,\r\n                        this.SelectAddRectCollection.Left, this.SelectAddRectCollection.Top,\r\n                        this.SelectAddRectCollection.Width, this.SelectAddRectCollection.Height);\r\n                }\r\n\r\n                //if (this.MergeCellCollectionRect != null)\r\n                //{\r\n                //    this.MergeCellCollectionRect.OnDraw(g);\r\n                //}\r\n                //if (this.MergeCellCollectionAddRect != null)\r\n                //{\r\n                //    this._MergeCellCollectionAddRect.OnDraw(g);\r\n                //}\r\n            }\r\n        }\r\n\r\n    }\r\n    OnDrawMoveBorder(g: Graphics) {\r\n\r\n    }\r\n    OnDrawCopyCellRect(g: Graphics) {\r\n\r\n    }\r\n    OnShowMultSelectCells(g: Graphics) {\r\n\r\n    }\r\n    OnDrawShowFocusedCellBorder(g: Graphics) {\r\n        //if (this.FocusedCell != null)\r\n        //{\r\n        //    if (this.InVisible(this.FocusedCell))\r\n        //    {\r\n        //        if (this.ShowFocusedCellBorder)\r\n        //        {\r\n        //            g.DrawRectangle(SelectStyle.FouscedCellSelectBorderColor,\r\n        //                this.FocusedCell.Left, this.FocusedCell.Top,\r\n        //                this.FocusedCell.Width, this.FocusedCell.Height);\r\n        //        }\r\n        //    }\r\n        //}\r\n    }\r\n    OnDrawFunctionBorder(g: Graphics) {\r\n\r\n    }\r\n    OnDrawFunctionSelect(g: Graphics) {\r\n        //if (this.FunctionSelectCells != null)\r\n        //{\r\n        //    this.FunctionSelectCells.OnDraw(this, g);\r\n        //}\r\n    }\r\n\r\n    OnDrawGridBorder(g: Graphics) {\r\n        if (this.ShowBorder) {\r\n            g.DrawRectangle(this.BorderColor, 0, 0, this.Width - 1, this.Height - 1);\r\n        }\r\n        else {\r\n            //this.DrawGridLine(g, 0, 0, 0, this.Height);\r\n        }\r\n    }\r\n    OnDrawHScroll(g: Graphics) {\r\n        this.VScroll.OnDraw(g);\r\n        this.HScroll.OnDraw(g);\r\n    }\r\n    OnDrawDebug(g: Graphics) {\r\n        try {\r\n            if (this.DebugRect != null) {\r\n                g.FillRectangleColor(\"red\", this.DebugRect);\r\n                g.DrawTextColor(this.Font, \"red\", this.DebugText, this.ContentLeft, this.ContentTop);\r\n                g.DrawTextColor(this.Font, \"red\", this.DebugText2, this.ContentLeft, this.ContentTop + 30);\r\n            }\r\n            let now = new Date();\r\n            let timespan = now.getTime() - this.StartTime.getTime();\r\n            if ((timespan / 1000 / 60 / 60) > 2) {\r\n                if (!this.isRegistered(this.RegisteredCode)) {\r\n                    let NotRegistered = \"Not Registered\";\r\n                    g.DrawText(this.Font, \"red\", NotRegistered, this.Width - 150, 36, 100, 100, \"left\", 0.5);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"OnDrawDebug rowindex\", e);\r\n        }\r\n\r\n    }\r\n    OnDrawCharts(g: Graphics) {\r\n        try {\r\n            this.Charts.forEach((chart: Chart) => {\r\n                chart.OnDrawBack(this, g);\r\n            });\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"OnDrawDebug rowindex\", e);\r\n\r\n        }\r\n\r\n    }\r\n    OnDrawPrimitives(g: Graphics) {\r\n        try {\r\n            this.Primitives.forEach((chart: Primitive) => {\r\n                chart.OnDrawBack(this, g);\r\n            });\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"OnDrawDebug rowindex\", e);\r\n\r\n        }\r\n\r\n    }\r\n    Invalidate() {\r\n\r\n    }\r\n    BeginReFresh() {\r\n\r\n    }\r\n    EndReFresh() {\r\n    }\r\n    GetGraphics() {\r\n        return this.graphic;\r\n    }\r\n    MeasureString(text: any, font: any) {\r\n        var graphics = this.GetGraphics();\r\n        var metrics = graphics.MeasureText(text, font);\r\n        return metrics.width;\r\n    }\r\n    //NEW\r\n    NewRow(grid: any, index: any) {\r\n        let row = new DataExcelRow();\r\n        row.Index = index;\r\n        row.Grid = grid;\r\n        row.Height = this.DefaultRowHeight\r\n        return row;\r\n    }\r\n    NewColumn(grid: any, index: any) {\r\n        let row = new DataExcelColumn();\r\n        row.Index = index;\r\n        row.Grid = grid;\r\n        row.Width = this.DefaultColumnWidth;\r\n        return row;\r\n    }\r\n    NewCell(row: DataExcelRow, column: DataExcelColumn) {\r\n        let cell = new DataExcelCell();\r\n        cell.Grid = this;\r\n        cell.Row = row;\r\n        cell.Column = column;\r\n        if (column == null) {\r\n            DataExcelConsole.log(\"dataexcel NewCell\", \"column is null\");\r\n        }\r\n        row.Cells.Add(cell);\r\n        cell.OwnEditControl = DefaultEdit.GetDefauleEdit(cell);\r\n        return cell;\r\n    }\r\n    NewMergeCell(grid: any, selectcells: SelectCellCollection) {\r\n        let model = new DataExcelMergeCell();\r\n        model.Grid = grid;\r\n        if (selectcells.BeginCell != null) {\r\n            model.BeginCell = selectcells.BeginCell;\r\n        }\r\n        if (selectcells.EndCell != null) {\r\n            model.EndCell = selectcells.EndCell;\r\n        }\r\n        this.MergeCells.Add(model);\r\n        return model;\r\n    }\r\n    NewBackCell(grid: any, selectcells: SelectCellCollection) {\r\n        let model = new DataExcelBackCell();\r\n        model.Grid = grid;\r\n        if (selectcells.BeginCell != null) {\r\n            model.BeginCell = selectcells.BeginCell;\r\n        }\r\n        if (selectcells.EndCell != null) {\r\n            model.EndCell = selectcells.EndCell;\r\n        }\r\n        this.BackCells.Add(model);\r\n        return model;\r\n    }\r\n    NewChart() {\r\n        let sel = this.SelectCells;\r\n        if (sel != null) {\r\n            let chart = new Chart();\r\n            chart.Grid = this;\r\n            chart.Left = sel.Left;\r\n            chart.Top = sel.Top;\r\n            chart.Width = sel.Width;\r\n            chart.Height = sel.Height;\r\n            chart.Init();\r\n            this.Charts.Add(chart);\r\n            return chart;\r\n        }\r\n        return null;\r\n    }\r\n    NewPrimitive() {\r\n        let sel = this.SelectCells;\r\n        if (sel != null) {\r\n            let chart = new Primitive();\r\n            chart.Grid = this;\r\n            chart.Left = sel.Left;\r\n            chart.Top = sel.Top;\r\n            chart.Width = sel.Width;\r\n            chart.Height = sel.Height;\r\n            this.Primitives.Add(chart);\r\n            return chart;\r\n        }\r\n        return null;\r\n    }\r\n    //RowColumn\r\n    DeleteRow(index: any) {\r\n        this.Rows.Delete(index);\r\n        let list = new List<DataExcelRow>();\r\n        this.Rows.forEach((value, key) => {\r\n            list.add(value);\r\n            if (value.Index > index) {\r\n                value.Index = value.Index - 1;\r\n            }\r\n        });\r\n        this.Rows.Clear();\r\n        list.forEach((value) => {\r\n            this.Rows.Add(value.Index, value);\r\n        });\r\n    }\r\n    DeleteColumn(index: any) {\r\n        this.Columns.Delete(index);\r\n\r\n        let list = new List<DataExcelColumn>();\r\n        this.Columns.forEach((value, key) => {\r\n            list.add(value);\r\n            if (value.Index > index) {\r\n                value.Index = value.Index - 1;\r\n            }\r\n        });\r\n        this.Columns.Clear();\r\n        list.forEach((value) => {\r\n            this.Columns.Add(value.Index, value);\r\n        });\r\n    }\r\n    InsertRow(index: any) {\r\n        let list = new List<DataExcelRow>();\r\n        this.Rows.forEach((value, key) => {\r\n            list.add(value);\r\n            if (value.Index >= index) {\r\n                value.Index = value.Index + 1;\r\n            }\r\n        });\r\n        this.Rows.Clear();\r\n        list.forEach((value) => {\r\n            this.Rows.Add(value.Index, value);\r\n        });\r\n    }\r\n    InsertColumn(index: any) {\r\n        let list = new List<DataExcelColumn>();\r\n        this.Columns.forEach((value, key) => {\r\n            list.add(value);\r\n            if (value.Index >= index) {\r\n                value.Index = value.Index + 1;\r\n            }\r\n        });\r\n        this.Columns.Clear();\r\n        list.forEach((value) => {\r\n            this.Columns.Add(value.Index, value);\r\n        });\r\n    }\r\n    DeleteCellRow(cells: SelectCellCollection) {\r\n        if (cells == null) {\r\n            return;\r\n        }\r\n        let maxcolumn = cells.MaxColumn();\r\n        let mincolumn = cells.MinColumn();\r\n        let minrow = cells.MinRow();\r\n        let maxrow = cells.MaxRow();\r\n        for (let rowindex = minrow; rowindex <= maxrow; rowindex++) {\r\n            let row = this.Rows.Get(rowindex);\r\n            if (row == null) {\r\n                continue;\r\n            }\r\n            for (let columnindex = mincolumn; columnindex <= maxcolumn; columnindex++) {\r\n                let column = this.Columns.Get(columnindex);\r\n                if (column == null) {\r\n                    continue;\r\n                }\r\n                let cell = row.Cells.Get(column);\r\n                row.Cells.Remove(column);\r\n            }\r\n        }\r\n        let count = maxrow - minrow + 1;\r\n\r\n        this.Rows.forEach((row, key) => {\r\n            if (row.Index > maxrow) {\r\n                let targetrow = this.Rows.Get(row.Index - count) as DataExcelRow;\r\n                if (targetrow != null) {\r\n                    for (let columnindex = mincolumn; columnindex <= maxcolumn; columnindex++) {\r\n                        let column = this.Columns.Get(columnindex);\r\n                        if (column != null) {\r\n                            let cell = row.Cells.Get(column) as DataExcelCell;\r\n                            if (cell != null) {\r\n                                cell.Row = targetrow;\r\n                                targetrow.Cells.Add(cell);\r\n                                row.Cells.Remove(column);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    InsertCellRow(cells: SelectCellCollection) {\r\n        if (cells == null) {\r\n            return;\r\n        }\r\n        let maxcolumn = cells.MaxColumn();\r\n        let mincolumn = cells.MinColumn();\r\n        let minrow = cells.MinRow();\r\n        let maxrow = cells.MaxRow();\r\n\r\n        let count = maxrow - minrow + 1;\r\n        let list = new List<DataExcelRow>();\r\n        this.Rows.forEach((row, key) => {\r\n            if (row.Index >= minrow) {\r\n                list.Add(row);\r\n            }\r\n        });\r\n        list.sort((a, b) => {\r\n            return a.Index - b.Index;\r\n        });\r\n        let rowcount = list.Count;\r\n        for (var i = rowcount - 1; i >= 0; i--) {\r\n            let row = list[i];\r\n            let targetrow = this.Rows.Get(row.Index + count) as DataExcelRow;\r\n            if (targetrow != null) {\r\n                for (let columnindex = mincolumn; columnindex <= maxcolumn; columnindex++) {\r\n                    let column = this.Columns.Get(columnindex);\r\n                    if (column != null) {\r\n                        let cell = row.Cells.Get(column) as DataExcelCell;\r\n                        if (cell != null) {\r\n                            cell.Row = targetrow;\r\n                            targetrow.Cells.Add(cell);\r\n                            row.Cells.Remove(column);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    DeleteCellColumn(cells: SelectCellCollection) {\r\n        if (cells == null) {\r\n            return;\r\n        }\r\n        let maxcolumn = cells.MaxColumn();\r\n        let mincolumn = cells.MinColumn();\r\n        let minrow = cells.MinRow();\r\n        let maxrow = cells.MaxRow();\r\n        let listrow = new List<DataExcelRow>();\r\n        for (let rowindex = minrow; rowindex <= maxrow; rowindex++) {\r\n            let row = this.Rows.Get(rowindex);\r\n            if (row == null) {\r\n                continue;\r\n            }\r\n            if (!listrow.contains(row)) {\r\n                listrow.Add(row);\r\n            }\r\n            for (let columnindex = mincolumn; columnindex <= maxcolumn; columnindex++) {\r\n                let column = this.Columns.Get(columnindex);\r\n                if (column == null) {\r\n                    continue;\r\n                }\r\n                let cell = row.Cells.Get(column);\r\n                row.Cells.Remove(column);\r\n            }\r\n        }\r\n        let count = maxcolumn - mincolumn + 1;\r\n\r\n        listrow.forEach((row) => {\r\n            this.Columns.forEach((column, key) => {\r\n                if (column.Index > maxcolumn) {\r\n                    let targetcolumn = this.Columns.Get(column.Index - count);\r\n                    if (targetcolumn != null) {\r\n                        let cell = row.Cells.Get(column) as DataExcelCell;\r\n                        if (cell != null) {\r\n                            row.Cells.Remove(column);\r\n                            cell.Column = targetcolumn;\r\n                            row.Cells.Add(cell);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    InsertCellColumn(cells: SelectCellCollection) {\r\n        if (cells == null) {\r\n            return;\r\n        }\r\n        let maxcolumn = cells.MaxColumn();\r\n        let mincolumn = cells.MinColumn();\r\n        let minrow = cells.MinRow();\r\n        let maxrow = cells.MaxRow();\r\n        let listrow = new List<DataExcelRow>();\r\n        for (let rowindex = minrow; rowindex <= maxrow; rowindex++) {\r\n            let row = this.Rows.Get(rowindex);\r\n            if (row == null) {\r\n                continue;\r\n            }\r\n            if (!listrow.contains(row)) {\r\n                listrow.Add(row);\r\n            }\r\n        }\r\n        let count = maxcolumn - mincolumn + 1;\r\n        let list = new List<DataExcelColumn>();\r\n        this.Columns.forEach((row, key) => {\r\n            if (row.Index >= mincolumn) {\r\n                list.Add(row);\r\n            }\r\n        });\r\n        list.sort((a, b) => {\r\n            return a.Index - b.Index;\r\n        });\r\n        listrow.forEach((row) => {\r\n            let countcolumn = list.Count;\r\n            for (var i = countcolumn - 1; i >= 0; i--) {\r\n                let column = list.get(i);\r\n                if (column.Index >= mincolumn) {\r\n                    let targetcolumn = this.Columns.Get(column.Index + count);\r\n                    if (targetcolumn != null) {\r\n                        let cell = row.Cells.Get(column) as DataExcelCell;\r\n                        if (cell != null) {\r\n                            row.Cells.Remove(column);\r\n                            cell.Column = targetcolumn;\r\n                            row.Cells.Add(cell);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    // FIRST DISPLAY\r\n    InitRowHeader(top: any) {\r\n        let rowindex = 0;\r\n        let row: DataExcelRow | undefined | null = this.HeaderRow;\r\n        let value = top;\r\n        if (row == null) {\r\n            row = this.Rows.Get(rowindex);\r\n            if (row == null) {\r\n                if (this.AutoGenerateRows) {\r\n                    row = this.NewRow(this, rowindex);\r\n                    row.Height = 26;\r\n                    this.Rows.Add(rowindex, row);\r\n                }\r\n            }\r\n            if (row != null) {\r\n                row.Visible = this.ShowColumnHeader;\r\n                if (row.Visible) {\r\n                    this.AllVisibleRows.Add(row);\r\n                    row.Top = top;\r\n                    value = top + row.Height;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n    InitColumnHeader(left: any) {\r\n        let columnindex = 0;\r\n        let column: DataExcelColumn | undefined | null = this.HeaderColumn;\r\n        let value = left;\r\n\r\n        if (column == null) {\r\n            column = this.Columns.Get(columnindex);\r\n            if (column == null) {\r\n                if (this.AutoGenerateColumns) {\r\n                    column = this.NewColumn(this, columnindex);\r\n                    column.Width = 30;\r\n                    this.Columns.Add(columnindex, column);\r\n                }\r\n            }\r\n            if (column != null) {\r\n                column.Visible = this.ShowRowHeader;\r\n                if (column.Visible) {\r\n                    this.AllVisibleColumns.Add(column);\r\n                    column.Left = left;\r\n                    if (this.FirstDisplayedRowIndex + 50 > 1000) {\r\n                        let w = 30 + (30 / 4) * (Math.round(this.FirstDisplayedRowIndex / 1000).toString()).length;\r\n                        column.Width = w;\r\n                    }\r\n                    else {\r\n                        column.Width = 30;\r\n                    }\r\n                    value = left + column.Width;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n    SetFirstDisplayRow(index: any) {\r\n        try {\r\n            this.BeginReFresh();\r\n            if (index > this.MaxRow) {\r\n                index = this.MaxRow;\r\n            }\r\n            if (index < 1) {\r\n                index = 1;\r\n            }\r\n\r\n            var top = this.TopSideHeight;\r\n            this.AllVisibleRows.Clear();\r\n            this.VisibleRows.Clear();\r\n            var row: DataExcelRow | undefined | null = null;\r\n            top = this.InitRowHeader(top);\r\n            this.ContentTop = top;\r\n\r\n            var height = 0;\r\n            var listtemp = new DataExcelRowList();\r\n            this.ContentBottom = height;\r\n            var i = 0;\r\n            var res = this.SetFirstDisplayFrozenFooterIndex(top, i);\r\n            top = res.h;\r\n            i = res.index;\r\n            var rowindex = i + this.FirstDisplayedRowIndex;\r\n            var h = top;\r\n            while (top <= (this.Height - height)) {\r\n                rowindex = i + this.FirstDisplayedRowIndex;\r\n                if (this.MaxRow > 0) {\r\n                    if (rowindex > this.MaxRow) {\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                row = this.Rows.Get(rowindex);\r\n                if (row == null) {\r\n                    if (this.AutoGenerateRows) {\r\n                        row = this.NewRow(this, rowindex);\r\n                        this.Rows.Add(rowindex, row);\r\n                    }\r\n                }\r\n                if (row != null) {\r\n                    if (row.Visible) {\r\n                        this.AllVisibleRows.Add(row);\r\n                        this.VisibleRows.Add(row);\r\n                        row.Top = top;\r\n                        var rindex = i + index;\r\n                        this.EndDisplayedRowIndex = rowindex;\r\n                        top += row.Height;\r\n                    }\r\n\r\n                }\r\n                i++;\r\n            }\r\n            var len = listtemp.Count;\r\n            for (var i = 0; i < len; i++) {\r\n                this.AllVisibleRows.Add(listtemp.Get(i));\r\n            }\r\n\r\n\r\n        }\r\n        finally {\r\n            this.AutoShowScroll();\r\n            this.EndReFresh();\r\n        }\r\n    }\r\n    SetFirstDisplayColumn(index: any) {\r\n\r\n        if (index < 1) {\r\n            index = 1;\r\n        }\r\n\r\n        if (index > this.MaxColumn) {\r\n            index = this.MaxColumn;\r\n        }\r\n\r\n        var tempcolindex = index;\r\n        index = tempcolindex;\r\n        this.FirstDisplayedColumnIndex = index;\r\n        var i = 0;\r\n        var width = this.LeftSideWidth;\r\n        this.AllVisibleColumns.Clear();\r\n        this.VisibleColumns.Clear();\r\n        width = this.InitColumnHeader(width);\r\n\r\n        this.ContentLeft = width;\r\n        var height2 = 0;\r\n        this.ContentRight = height2;\r\n        var res = this.SetFrozenColumn(i, width);\r\n        width = res.w;\r\n        i = res.index;\r\n        this.SetColumnWidthByFirstIndex(i, width, index);\r\n\r\n        this.AutoShowScroll();\r\n    }\r\n    SetColumnWidthByFirstIndex(i: any, width: any, index: any) {\r\n        var column: DataExcelColumn | undefined | null = null;\r\n        var columnindex = i + this.FirstDisplayedColumnIndex;\r\n        var ci = columnindex;\r\n        for (ci = columnindex; ci <= this.MaxColumn; ci++) {\r\n            if (width < this.Width) {\r\n                columnindex = i + this.FirstDisplayedColumnIndex;\r\n                if (columnindex > this.MaxColumn) {\r\n                    break;\r\n                }\r\n                column = this.Columns.Get(columnindex);\r\n                if (column == null) {\r\n                    if (this.AutoGenerateColumns) {\r\n                        column = this.NewColumn(this, columnindex);\r\n                        this.Columns.Add(columnindex, column);\r\n                    }\r\n                }\r\n                if (column != null) {\r\n                    if (column.Visible) {\r\n                        this.AllVisibleColumns.Add(column);\r\n                        this.VisibleColumns.Add(column);\r\n                        column.Left = width;\r\n                        //int colindex = i + index;\r\n                        width = width + column.Width;\r\n                        this.EndDisplayedColumnIndex = columnindex;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    SetFrozenColumn(i: any, width: any) {\r\n        var column: DataExcelColumn | undefined | null = null;\r\n        if (this.FrozenColumn > 0) {\r\n            var colindex = 0;\r\n            var ci = colindex;\r\n            for (ci = colindex; ci < this.FrozenColumn; ci++) {\r\n                colindex = colindex + 1;\r\n                column = this.Columns.Get(colindex);\r\n                if (column != null) {\r\n                    if (column.Visible) {\r\n                        this.AllVisibleColumns.Add(column);\r\n                        this.VisibleColumns.Add(column);\r\n                        column.Left = width;\r\n                        width = width + column.Width;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        var obj = { w: width, index: i };\r\n        return obj;\r\n    }\r\n    SizeRowHeader() {\r\n        var count: number;\r\n        count = this.VisibleRows.Count;\r\n        for (var i = 0; i < count; i++) {\r\n            var row = this.VisibleRows.Get(i);\r\n            var col = this.Columns.Get(0);\r\n            if (col != null) {\r\n                var g = this.GetGraphics();\r\n                if (g == null)\r\n                    return;\r\n                var sf = g.MeasureText(\"\" + row.Index + \"\", this.Font);\r\n                if (sf.width > col.Width) {\r\n                    col.Width = sf.width;\r\n                }\r\n                else {\r\n                    if (col.Width > 40 && sf.width < 40) {\r\n                        col.Width = 40;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    AutoShowScroll() {\r\n    }\r\n    SetFirstDisplayFrozenFooterIndex(height: any, i: any) {\r\n        var row: DataExcelRow | undefined | null = null;\r\n        if (this.FrozenRow > 0) {\r\n            var colindex = 0;\r\n            while (height < this.Height) {\r\n                colindex = colindex + 1;\r\n                if (this.FrozenRow < colindex) {\r\n                    break;\r\n                }\r\n                row = this.Rows.Get(colindex);\r\n                if (row != null) {\r\n                    if (row.Visible) {\r\n                        this.AllVisibleRows.Add(row);\r\n                        this.VisibleRows.Add(row);\r\n                        row.Top = height;\r\n                        height = height + row.Height;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        var obj = { h: height, index: i };\r\n        return obj;\r\n    }\r\n    PointControlToView(point: any) {\r\n        return point;\r\n    }\r\n\r\n    AddEdit(edit: any) {\r\n        this.CurrentEdit = edit;\r\n        this.CopyCells = null;\r\n    }\r\n    EndEdit() {\r\n        if (this.CurrentEdit == null) {\r\n            this.emit(Events.EndEdit, this, this.FocusedCell, this.CurrentEdit);\r\n        }\r\n        if (this.FocusedCell != null) {\r\n            this.FocusedCell.EndEdit();\r\n        }\r\n        this.EditCell = null;\r\n        if (this.CurrentEdit != null) {\r\n            this.CurrentEdit.EndEdit();\r\n            this.CurrentEdit = null;\r\n        }\r\n    }\r\n    GetCellByPoint(pt: Point): DataExcelCell | null {\r\n        let rowcount = this.AllVisibleRows.Count;\r\n        let row: DataExcelRow | null = null;\r\n        for (var i = 0; i < rowcount; i++) {\r\n            let row1 = this.AllVisibleRows.Get(i);\r\n            if (pt.Y > row1.Top && pt.Y <= (row1.Top + row1.Height)) {\r\n                row = row1;\r\n                break;\r\n            }\r\n        }\r\n        if (row == null) {\r\n            return null;\r\n        }\r\n        let columncount = this.AllVisibleColumns.Count;\r\n        let column: DataExcelColumn | null = null;\r\n        for (var i = 0; i < columncount; i++) {\r\n            let column1 = this.AllVisibleColumns.Get(i);\r\n            if (pt.X > column1.Left && pt.X <= (column1.Left + column1.Width)) {\r\n                column = column1;\r\n                break;\r\n            }\r\n        }\r\n        if (row == null) {\r\n            return null;\r\n        }\r\n        if (column == null) {\r\n            return null;\r\n        }\r\n        var cell = row.Cells.Get(column);\r\n        if (cell == null) {\r\n            cell = this.NewCell(row, column);\r\n        }\r\n        return cell;\r\n    }\r\n\r\n    GetFocusedCell(): DataExcelCell | null {\r\n        return this._focusedcell;\r\n    }\r\n    SetFocusedCell(cell: DataExcelCell) {\r\n        this.BeginReFresh();\r\n        this.EndEdit();\r\n        let cel = cell;\r\n        //if (cell != null)\r\n        //{\r\n        //    if (cell.OwnMergeCell != null)\r\n        //    {\r\n        //        cel = cell.OwnMergeCell;\r\n        //    }\r\n        //}\r\n        if (cel.OwnMergeCell != null) {\r\n            this.FocusedCell = cel.OwnMergeCell;\r\n        }\r\n        else {\r\n            this.FocusedCell = cel;\r\n        }\r\n        this.emit(Events.FocusedCellChanged, this, this.FocusedCell);\r\n        //this._ICellEvents = this._focusedcell;\r\n        //if (FocusedCellChanged != null)\r\n        //{\r\n        //    FocusedCellChanged(this, this._focusedcell);\r\n        //}\r\n        this.EndReFresh();\r\n    }\r\n    SetSelectCells(begin: any, end?: any) {\r\n        if (this.SelectCells == null) {\r\n            this.SelectCells = new SelectCellCollection();\r\n            this.SelectCells.Grid = this;\r\n        }\r\n        let cellbegin = begin as DataExcelCell;\r\n        if (cellbegin.OwnMergeCell != null) {\r\n            this.SelectCells.BeginCell = cellbegin.OwnMergeCell.BeginCell;\r\n        }\r\n        else {\r\n            this.SelectCells.BeginCell = cellbegin;\r\n        }\r\n        if (end == null) {\r\n            if (cellbegin.OwnMergeCell != null) {\r\n                this.SelectCells.EndCell = cellbegin.OwnMergeCell.EndCell;\r\n                this.SelectCells.Refresh();\r\n            }\r\n            else {\r\n                this.SelectCells.EndCell = cellbegin;\r\n                this.SelectCells.Refresh();\r\n            }\r\n        }\r\n        else {\r\n            let cellend = end as DataExcelCell;\r\n            if (cellend.OwnMergeCell != null) {\r\n                this.SelectCells.EndCell = cellbegin.OwnMergeCell.EndCell;\r\n                this.SelectCells.Refresh();\r\n            }\r\n            else {\r\n                this.SelectCells.EndCell = cellend;\r\n                this.SelectCells.Refresh();\r\n            }\r\n        }\r\n\r\n    }\r\n    GetSelectCells(): object {\r\n        let list = new List<DataExcelCell>();\r\n        if (this.SelectRange.Count < 1) {\r\n            if (this.SelectCells != null) {\r\n                list = this.SelectCells.GetAllCells();\r\n            }\r\n            else if (this.FocusedCell != null) {\r\n                if (this.FocusedCell.OwnMergeCell != null) {\r\n                    list.Add(this.FocusedCell.OwnMergeCell);\r\n                }\r\n                else {\r\n                    list.Add(this.FocusedCell);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            list = (this.SelectRange);\r\n        }\r\n        return list;\r\n    }\r\n    GetSelectChart(): Chart | null {\r\n        for (var i = 0; i < this.Charts.length; i++) {\r\n            let chart = this.Charts[i];\r\n            if (chart.Selected) {\r\n                return chart;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    GetSelectPrimitive(): Primitive | null {\r\n        for (var i = 0; i < this.Primitives.length; i++) {\r\n            let chart = this.Primitives[i];\r\n            if (chart.Selected) {\r\n                return chart;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    //Custom Event\r\n    On(eventname: any, functioncallback: any) {\r\n        this.EventHandlers.on(eventname, functioncallback);\r\n    }\r\n    Off(eventname: any, functioncallback: any) {\r\n        this.EventHandlers.off(eventname, functioncallback);\r\n    }\r\n    emit(eventname: any, ...args: any) {\r\n        this.EventHandlers.emit(eventname, args);\r\n    }\r\n\r\n    RaiseCellInitEditEvent(cell: DataExcelCell) {\r\n        this.emit(Events.CellInitEdit, cell, this);\r\n    }\r\n    private RegisteredCode = \"\";\r\n    public isRegistered(txt: any) {\r\n        this.RegisteredCode = txt;\r\n        let host = window.location.host;\r\n        let txt2 = host + \" are registered from dataexcel\";\r\n        if (txt == txt2) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //ONEVENT\r\n    ClearSelect() {\r\n        this.Charts.forEach((chart: Chart) => { chart.Selected = false; });\r\n        this.Primitives.forEach((chart: Primitive) => {\r\n            chart.Selected = false;\r\n            chart.Displayables.forEach((disp: Displayable) => {\r\n                disp.Selected = false;\r\n            });\r\n        });\r\n\r\n        //  var cs = this.GetSelectCells();\r\n        //foreach(ICell cell in cs)\r\n        //{\r\n        //    cell.Selected = false;\r\n        //}\r\n        //this.FunctionSelectCells = null;\r\n\r\n        this.SelectCells = null;\r\n        //this.MergeCellCollectionRect = null;\r\n        //this.SelectAddRectCollection = null;\r\n        //this.TempSelectRect = null;\r\n        //  var count = this.Selecteds.Count;\r\n        //for ( var index = count - 1; index >= 0; index--)\r\n        //{\r\n        //    var row = this.Selecteds[index];\r\n        //    row.Selected = false;\r\n        //}\r\n        //this.SelectRows.Clear();\r\n        //this.SelectColumns.Clear();\r\n        //this.Selecteds.Clear();\r\n        //if (this.MergeCells != null)\r\n        //{\r\n        //    count = this.MergeCells.Count;\r\n        //    for (int index = count - 1; index >= 0; index--)\r\n        //    {\r\n        //        IMergeCell imc = this.MergeCells[index];\r\n        //        imc.Selected = false;\r\n        //    }\r\n        //}\r\n        //if (this.ListExtendCells != null)\r\n        //{\r\n        //    count = this.ListExtendCells.Count;\r\n        //    for (int index = count - 1; index >= 0; index--)\r\n        //    {\r\n        //        IExtendCell imc = this.ListExtendCells[index];\r\n        //        imc.Selected = false;\r\n        //    }\r\n        //}\r\n    }\r\n    OnMouseDownScroll(e: any, ve: EventView) {\r\n        if (this.VScroll.Visible) {\r\n            let res = this.VScroll.OnMouseDown(this, e, ve);\r\n            if (res) {\r\n                this.FirstDisplayedRowIndex = Math.round(this.VScroll.Value);\r\n                this.Refresh();\r\n                this.RePaint();\r\n                ve.NeedRePaint = true;\r\n                ve.CurrentEvent = this.VScroll;\r\n                return res;\r\n            }\r\n        }\r\n\r\n        if (this.HScroll.Visible) {\r\n            let res = this.HScroll.OnMouseDown(this, e, ve);\r\n            if (res) {\r\n                this.FirstDisplayedColumnIndex = Math.round(this.HScroll.Value);\r\n                this.Refresh();\r\n                this.RePaint();\r\n                ve.NeedRePaint = true;\r\n                ve.CurrentEvent = this.HScroll;\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    SetDataExcelMouseDown(e: any) {\r\n        return false;\r\n    }\r\n    SetScrollerMouseDown(e: any) {\r\n        return false;\r\n    }\r\n    SetExtendCellMouseDown(e: any) {\r\n        return false;\r\n    }\r\n    SetMergeCellCollectionRectMouseDown(e: any) {\r\n        return false;\r\n    }\r\n    SetSelectCellCollectionMouseDown(e: MouseEvent) {\r\n        let viewloaction = this.PointControlToView(new Point(e.offsetX, e.offsetY));\r\n        let pt = viewloaction;\r\n        if (this.ShowSelectAddRect) {\r\n            if (this.SelectCells != null) {\r\n                if (this.SelectCells.AddRectContains(pt)) {\r\n                    this.BeginReFresh();\r\n                    this.BeginSetCursor(Cursors.crosshair);\r\n                    if (this.SelectAddRectCollection == null) {\r\n                        this.SelectAddRectCollection = new SelectAddRectCollection(this);\r\n                    }\r\n                    this.SelectAddRectCollection.SelectCellCollection = this.SelectCells;\r\n\r\n                    this.Selectmode = SelectMode.CellAddSelected;\r\n\r\n                    this.EndReFresh();\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    SetCellMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        let point = new Point(e.offsetX, e.offsetY);\r\n        let viewloaction = this.PointControlToView(point);\r\n        let pt = viewloaction;\r\n\r\n        let cell = this.GetCellByPoint(pt);\r\n        if (cell != null) {\r\n            if (e.button == MouseButtons.Right) {\r\n                //if (this.SelectCells != null)\r\n                //{\r\n                //    if (this.SelectCells.Rect.Contains(pt))\r\n                //    {\r\n                //        return true;\r\n                //    }\r\n                //}\r\n            }\r\n\r\n\r\n            if (this.Selectmode != SelectMode.Null) {\r\n\r\n                //if (this.Selectmode == SelectMode.CellRangeFunctionCellSelected)\r\n                //{\r\n                //    this.BeginReFresh();\r\n                //    if (e.ctrlKey)\r\n                //    {\r\n                //        if (FunctionSelectCells == null)\r\n                //        {\r\n                //            FunctionSelectCells = new CellRangeCollection();\r\n                //            FunctionSelectCells.BeginCell = cell;\r\n                //            OnFunctionSelectCellChanged(FunctionSelectCells);\r\n                //            this.Invalidate();\r\n                //        }\r\n                //    }\r\n                //    else\r\n                //    {\r\n                //        this.OnFunctionSelectedFinish();\r\n                //    }\r\n                //    this.EndReFresh();\r\n                //}\r\n                //return true;\r\n            }\r\n            if (cell.OnMouseDown(sender, e, ve)) {\r\n                return true;\r\n            }\r\n            if (e.button == MouseButtons.Left) {\r\n                this.Selectmode = SelectMode.CellSelected;\r\n            }\r\n            this.BeginReFresh();\r\n            this.ClearSelect();\r\n            this.SetSelectCells(cell);\r\n            cell.Selected = true;\r\n\r\n            if (e.ctrlKey) {\r\n                let fcell = this.GetFocusedCell();\r\n                if (fcell != null) {\r\n                    this.SelectRange.Add(fcell);\r\n                    this.SelectRange.Add(cell);\r\n                }\r\n            }\r\n            else {\r\n                this.SelectRange.Clear();\r\n            }\r\n            if (e.shiftKey) {\r\n                //this.SelectCell(this.FocusedCell, cell);\r\n            }\r\n            this.SetFocusedCell(cell);\r\n            e.stopPropagation();\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = cell;\r\n            //this.MouseDownCell = cell;\r\n            //this.AddFocsedCellMark(cell);\r\n            //if (this.FocusedCell != null)\r\n            //{\r\n            //    this.FocusedCell.OnMouseDown(this, e, ve);\r\n            //}\r\n            //if (this.SelectRange.Count > 0)\r\n            //{\r\n            //    OnSelectRangeChanged(this.SelectRange);\r\n            //}  \r\n            this.EndReFresh();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    OnException(ex: any) {\r\n\r\n    }\r\n    //DO event\r\n    DoOnMouseUp(sender: any, e: MouseEvent, ve: EventView) {\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnMouseUp(this, e, ve)) {\r\n                return;\r\n            }\r\n        }\r\n        let result = false;\r\n        result = this.DoOnMouseUpChart(sender, e, ve);\r\n        if (result)\r\n            return true;\r\n        result = this.DoOnMouseUpPrimitive(sender, e, ve);\r\n        if (result)\r\n            return true;\r\n        if (e.button == MouseButtons.Right) {\r\n            return;\r\n        }\r\n\r\n        switch (this.Selectmode) {\r\n            case SelectMode.CellAddSelected:\r\n                //this.BeginReFresh();\r\n                this.UpdateSelectAddRect();\r\n                ve.NeedRePaint = true;\r\n                this.SelectAddRectCollection = null;\r\n                //this.EndReFresh();\r\n                break;\r\n            case SelectMode.MergeCellAddSelected:\r\n                //this.BeginReFresh();\r\n                //DoMergeCellCollectionAddRectDown(this.MergeCellCollectionAddRect);\r\n                //this.EndReFresh();\r\n                break;\r\n            default:\r\n                this.SelectAddRectCollection = null;\r\n                //this._MergeCellCollectionAddRect = null;\r\n\r\n                break;\r\n        }\r\n        this.Selectmode = SelectMode.Null;\r\n\r\n    }\r\n    DoOnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            if (this.CurrentEvent != null) {\r\n                if (this.CurrentEvent.OnMouseDown(this, e, ve)) {\r\n                    return true;\r\n                }\r\n            }\r\n            var point = { x: e.offsetX, y: e.offsetY };\r\n            var viewloaction = this.PointControlToView(point);\r\n            this.MouseDownPoint = viewloaction;\r\n            let result = false;\r\n            result = this.DoOnMouseDownChart(sender, e, ve);\r\n            if (result)\r\n                return true;\r\n            result = this.DoOnMouseDownPrimitive(sender, e, ve);\r\n            if (result)\r\n                return true;\r\n            //if (this.CellEvent != null)\r\n            //{\r\n            //    if (this.CellEvent.OnMouseDown(this, e, ve))\r\n            //    {\r\n            //        return true;\r\n            //    }\r\n            //}\r\n            if (this.FocusedCell != null) {\r\n                let point = viewloaction;\r\n                if (this.maindom == e.target) {\r\n                    if (!this.FocusedCell.Rect.Contains(point)) {\r\n                        if (this.CurrentEdit != null) {\r\n                            this.EndEdit();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (e.button == MouseButtons.Right) {\r\n                if (this.SetCellMouseDown(sender, e, ve)) {\r\n                }\r\n                return false;\r\n            }\r\n            else if (e.button == MouseButtons.Left) {\r\n                if (this.OnMouseDownScroll(e, ve)) {\r\n                    return true;\r\n                }\r\n                if (this.SetDataExcelMouseDown(e)) {\r\n                    return true;\r\n                }\r\n                if (this.SetScrollerMouseDown(e)) {\r\n                    return true;\r\n                }\r\n                if (this.SetExtendCellMouseDown(e)) {\r\n                    return true;\r\n                }\r\n                if (this.SetMergeCellCollectionRectMouseDown(e)) {\r\n                    return true;\r\n                }\r\n                if (this.SetSelectCellCollectionMouseDown(e)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (this.SetCellMouseDown(sender, e, ve)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"DoOnMouseDown\", ex);\r\n            this.OnException(ex);\r\n        }\r\n        finally {\r\n        }\r\n        return false;\r\n    }\r\n    DoOnMouseMove(sender: any, e: MouseEvent, ve: EventView) {\r\n        this.DebugRect = new Rect(ve.offsetPoint.X, ve.offsetPoint.Y, 4, 4);\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnMouseMove(this, e, ve)) {\r\n                return true;\r\n            }\r\n        }\r\n        let result = false;\r\n        result = this.DoOnMouseMoveChart(sender, e, ve);\r\n        if (result)\r\n            return true;\r\n        result = this.DoOnMouseMovePrimitive(sender, e, ve);\r\n        if (result)\r\n            return true;\r\n        let res = false;\r\n        switch (this.Selectmode) {\r\n            case SelectMode.Null:\r\n                res = this.SelectModeNullMouseMove(e, ve);\r\n                break;\r\n            //case SelectMode.RowHeaderSelected:\r\n            //    break;\r\n            //case SelectMode.RowHeaderSplitSelected:\r\n            //    break;\r\n            //case SelectMode.FullRowSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SelectModeRowHeaderSelectedMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.ColumnHeaderSelected:\r\n\r\n            //    break;\r\n            //case SelectMode.ColumnHeaderSplitSelected:\r\n            //    this.BeginReFresh();\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.FullColumnSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SelectModeColumnHeaderSelectedMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            case SelectMode.CellSelected:\r\n\r\n                if (this.MultiSelect) {\r\n                    this.BeginReFresh();\r\n                    res = this.SelectModeCellSeletedMouseMove(ve);\r\n                    this.SetSelectCellRowSelect();\r\n                    this.EndReFresh();\r\n                }\r\n                break;\r\n            //case SelectMode.CellRangeFunctionCellSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SCellRangeFunctionCellSelectedMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.MergeCellSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SelectModeMergeCellSelectedMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.MergeCellAddSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SelectModeMergeCellAddSelectedMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.ImageCellSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SelectModeImageMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            case SelectMode.CellAddSelected:\r\n                this.BeginReFresh();\r\n                res = this.SelectModeCellAddSelectedMouseMove(e);\r\n                this.EndReFresh();\r\n                break;\r\n            //case SelectMode.TextCellSelected:\r\n            //    this.BeginReFresh();\r\n            //    //SelectModeTextMouseMove(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.ExtendCellSizeRectSelected:\r\n            //    this.BeginReFresh();\r\n            //    //TextCellSizeRectSelected(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.ChangedSize:\r\n            //    this.BeginReFresh();\r\n            //    //ChangedSize(e);\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            //case SelectMode.Drag:\r\n            //    this.BeginReFresh();\r\n            //    //this.Cursor = Cursors.Hand;\r\n            //    this.EndReFresh();\r\n            //    break;\r\n            default:\r\n                break;\r\n        }\r\n        if (res) {\r\n            ve.NeedRePaint = true;\r\n        }\r\n    }\r\n    DoOnWheel(evt: any) {\r\n\r\n    }\r\n    DoOnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView) {\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnMouseDoubleClick(this, e, ve)) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    DoOnKeyPress(sender: any, e: KeyboardEvent, ve: EventView) {\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnKeyPress(this, e, ve)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n    DoOnKeyDown(sender: any, e: KeyboardEvent, ve: EventView) {\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnKeyDown(this, e, ve)) {\r\n                return;\r\n            }\r\n        }\r\n        if (e.srcElement == document.body) {\r\n            switch (e.code) {\r\n                case \"ArrowRight\":\r\n                    if (e.shiftKey) {\r\n                        if (this.SelectCells != null) {\r\n                            this.CellMoveRight(this.SelectCells, 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.MoveFocusedCellToRightCell();\r\n                    }\r\n                    ve.CurrentEvent = this.FocusedCell;\r\n                    this.Refresh();\r\n                    this.RePaint();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                    if (e.shiftKey) {\r\n                        if (this.SelectCells != null) {\r\n                            this.CellMoveLeft(this.SelectCells, 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.MoveFocusedCellToLeftCell();\r\n                    }\r\n                    ve.CurrentEvent = this.FocusedCell;\r\n                    this.Refresh();\r\n                    this.RePaint();\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    if (e.shiftKey) {\r\n                        if (this.SelectCells != null) {\r\n                            this.CellMoveUp(this.SelectCells, 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.MoveFocusedCellToUpCell();\r\n                    }\r\n                    ve.CurrentEvent = this.FocusedCell;\r\n                    this.Refresh();\r\n                    this.RePaint();\r\n                    break;\r\n                case \"ArrowDown\":\r\n\r\n                    if (e.shiftKey) {\r\n                        if (this.SelectCells != null) {\r\n                            this.CellMoveDown(this.SelectCells, 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.MoveFocusedCellToDownCell();\r\n                    }\r\n                    ve.CurrentEvent = this.FocusedCell;\r\n                    this.Refresh();\r\n                    this.RePaint();\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n\r\n    }\r\n    DoOnTouchStart(sender: any, e: TouchEvent, ve: EventView) {\r\n        this.SetCellTouchStart(sender, e, ve);\r\n    }\r\n    DoOnTouchMove(sender: any, e: TouchEvent, ve: EventView) {\r\n        this.DebugRect = new Rect(ve.offsetPoint.X, ve.offsetPoint.Y, 4, 4);\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnTouchMove(this, e, ve)) {\r\n                return true;\r\n            }\r\n        }\r\n        let res = false;\r\n        switch (this.Selectmode) {\r\n            //case SelectMode.Null:\r\n            //    res = this.SelectModeNullTouchMove(e, ve);\r\n            //    break;\r\n            case SelectMode.TouchMove:\r\n                res = this.FirstShowTouchMove(e, ve);\r\n                break;\r\n            case SelectMode.CellSelected:\r\n                if (e.targetTouches.length == 1) {\r\n                    if (this.MultiSelect) {\r\n                        this.BeginReFresh();\r\n                        res = this.SelectModeCellSeletedMouseMove(ve);\r\n                        this.SetSelectCellRowSelect();\r\n                        e.preventDefault();\r\n                        e.stopImmediatePropagation();\r\n                        this.EndReFresh();\r\n                    }\r\n                }\r\n                break;\r\n            case SelectMode.CellAddSelected:\r\n                this.BeginReFresh();\r\n                //res = this.SelectModeCellAddSelectedMouseMove(e,ve);\r\n                this.EndReFresh();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (res) {\r\n            ve.NeedRePaint = true;\r\n        }\r\n\r\n    }\r\n    DoOnTouchEnd(sender: any, e: TouchEvent, ve: EventView) {\r\n        if (this.CurrentEvent != null) {\r\n            if (this.CurrentEvent.OnTouchEnd(this, e, ve)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    DoOnTouchCancel(sender: any, e: TouchEvent, ve: EventView) {\r\n        DataExcelConsole.log(\"DoOnTouchCancel\", e);\r\n    }\r\n    DoPaste(e: any) {\r\n        if (e.srcElement == document.body) {\r\n            return this.Paste(e);\r\n        }\r\n    }\r\n    DoCopy(e: ClipboardEvent) {\r\n        return this.Copy(e);\r\n    }\r\n    DoCut(e: any) {\r\n        return this.Cut(e);\r\n    }\r\n    ///plus event\r\n    DoOnMouseDownChart(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            for (var i = 0; i < this.Charts.length; i++) {\r\n                let chart = this.Charts[i];\r\n                let res = chart.OnMouseDown(sender, e, ve);\r\n                if (res) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DoOnMouseDownChart\", e);\r\n        }\r\n        return false;\r\n    }\r\n    DoOnMouseUpChart(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            for (var i = 0; i < this.Charts.length; i++) {\r\n                let chart = this.Charts[i];\r\n                let res = chart.OnMouseUp(sender, e, ve);\r\n                if (res) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DoOnMouseUpChart\", e);\r\n        }\r\n        return false;\r\n    }\r\n    DoOnMouseMoveChart(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            for (var i = 0; i < this.Charts.length; i++) {\r\n                let chart = this.Charts[i];\r\n                let res = chart.OnMouseMove(sender, e, ve);\r\n                if (res) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DoOnMouseMoveChart\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    DoOnMouseDownPrimitive(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            for (var i = 0; i < this.Primitives.length; i++) {\r\n                let chart = this.Primitives[i];\r\n                let res = chart.OnMouseDown(sender, e, ve);\r\n                if (res) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DoOnMouseDownChart\", e);\r\n        }\r\n        return false;\r\n    }\r\n    DoOnMouseUpPrimitive(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            for (var i = 0; i < this.Primitives.length; i++) {\r\n                let chart = this.Primitives[i];\r\n                let res = chart.OnMouseUp(sender, e, ve);\r\n                if (res) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DoOnMouseUpPrimitive\", e);\r\n        }\r\n        return false;\r\n    }\r\n    DoOnMouseMovePrimitive(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        try {\r\n            for (var i = 0; i < this.Primitives.length; i++) {\r\n                let chart = this.Primitives[i];\r\n                let res = chart.OnMouseMove(sender, e, ve);\r\n                if (res) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DoOnMouseMovePrimitive\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Touch\r\n    private touchdownpoint: Point;\r\n    private touchdownfirstrow: number;\r\n    private touchdownfirstcolumn: number;\r\n    private touchdowntime: Date;\r\n    SetCellTouchStart(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        this.touchdowntime = new Date();\r\n        let touch = e.touches[0] as Touch;\r\n        let point = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        this.DebugRect = new Rect(point.X, point.Y, 4, 4);\r\n        let viewloaction = this.PointControlToView(point);\r\n        let pt = viewloaction;\r\n\r\n        let cell = this.GetCellByPoint(pt);\r\n\r\n        if (cell == null) {\r\n            return false;\r\n        }\r\n        if (cell.OnTouchStart(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.FocusedCell == cell && this.Selectmode != SelectMode.TouchMove) {\r\n            this.touchdownpoint = point;\r\n            this.touchdownfirstrow = this.FirstDisplayedRowIndex;\r\n            this.touchdownfirstcolumn = this.FirstDisplayedColumnIndex;\r\n            this.Selectmode = SelectMode.TouchMove;\r\n            return true;\r\n        }\r\n        this.Selectmode = SelectMode.CellSelected;\r\n        this.BeginReFresh();\r\n        this.ClearSelect();\r\n        this.SetSelectCells(cell);\r\n        cell.Selected = true;\r\n\r\n        if (e.ctrlKey) {\r\n            let fcell = this.GetFocusedCell();\r\n            if (fcell != null) {\r\n                this.SelectRange.Add(fcell);\r\n                this.SelectRange.Add(cell);\r\n            }\r\n        }\r\n        else {\r\n            this.SelectRange.Clear();\r\n        }\r\n        if (e.shiftKey) {\r\n            //this.SelectCell(this.FocusedCell, cell);\r\n        }\r\n        this.SetFocusedCell(cell);\r\n        e.stopPropagation();\r\n        ve.NeedRePaint = true;\r\n        ve.CurrentEvent = cell;\r\n        ve.NeedRePaint = true;\r\n        this.EndReFresh();\r\n        return true;\r\n    }\r\n    FirstShowTouchMove(e: TouchEvent, ve: EventView): boolean {\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        let w = this.touchdownpoint.X - pt.X;\r\n        let h = this.touchdownpoint.Y - pt.Y;\r\n        DataExcelConsole.log(\"touchdownpoint\", this.touchdownpoint);\r\n        if (Math.abs(w) < Math.abs(h)) {\r\n            let index = 0;\r\n            let len = 0;\r\n            if (!this.AllowChangedFirstDisplayRow)\r\n                return false;\r\n            len = Math.round(h / 10);\r\n            index = this.touchdownfirstrow + len;\r\n            DataExcelConsole.log(\"touchdownpoint rowindex\", index);\r\n            if (index > 0) {\r\n                this.FirstDisplayedRowIndex = index;\r\n                this.FirstDisplayedColumnIndex = this.touchdownfirstcolumn;\r\n                ve.NeedRePaint = true;\r\n            }\r\n            try {\r\n                e.preventDefault();\r\n            } catch (ex) {\r\n                DataExcelConsole.log(\"touchdownpoint rowindex\", ex);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            let index = 0;\r\n            let len = 0;\r\n            if (!this.AllowChangedFirstDisplayColumn)\r\n                return false;\r\n            len = Math.round(w / 20);\r\n            index = this.touchdownfirstcolumn + len;\r\n            DataExcelConsole.log(\"touchdownpoint columnindex\", index);\r\n            if (index > 0) {\r\n                this.FirstDisplayedRowIndex = this.touchdownfirstrow;\r\n                this.FirstDisplayedColumnIndex = index;\r\n                ve.NeedRePaint = true;\r\n            }\r\n            try {\r\n                e.preventDefault();\r\n            } catch (ex) {\r\n                DataExcelConsole.log(\"touchdownpoint columnindex\", ex);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    SelectModeNullTouchMove(e: TouchEvent, ve: EventView) {\r\n\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        let viewlocation = this.PointControlToView(pt);\r\n\r\n        let cell = this.GetCellByPoint(pt);\r\n        if (cell != null) {\r\n            if (cell.OwnMergeCell != null) {\r\n                cell = cell.OwnMergeCell;\r\n            }\r\n            if (cell != null) {\r\n                if (cell.OnTouchMove(this, e, ve)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n\r\n        }\r\n    }\r\n    //PASTE COPY CUT\r\n    Cut(e?: any) {\r\n        try {\r\n            if (this.FocusedCell == null) {\r\n                return;\r\n            }\r\n            if (this.InEdit) {\r\n                return;\r\n            }\r\n            this.CopyCells = null;\r\n            if (this.InEdit)\r\n                return;\r\n\r\n            let list = this.GetSelectCells() as List<DataExcelCell>;\r\n            let row: DataExcelRow | null = null;\r\n            let count = list.Count;\r\n            let sb = \"\";\r\n            for (let i = 0; i < count; i++) {\r\n                let cell = list.get(i);\r\n                if (row == null) {\r\n                    row = cell.Row;\r\n                }\r\n                else if (row != cell.Row) {\r\n                    row = cell.Row;\r\n                    sb = sb + (ConstantValue.CopySplitSymbolRow);\r\n                }\r\n                let celltext = \"\";\r\n                celltext = cell.Text;\r\n                sb = sb + (celltext);\r\n                if (cell != list[list.Count - 1]) {\r\n                    sb = sb + (ConstantValue.CopySplitSymbolColumn);\r\n                }\r\n            }\r\n            let text = sb;\r\n            if (this.SelectCells != null) {\r\n                this.CopyCells = new SelectCellCollection();\r\n                this.CopyCells.Grid = this;\r\n                this.CopyCells.BeginCell = this.SelectCells.BeginCell;\r\n                this.CopyCells.EndCell = this.SelectCells.EndCell;\r\n                this.CopyCells.Refresh();\r\n            }\r\n\r\n            //let clipboardData = e.clipboardData || window.Clipboard;\r\n            //clipboardData.setData('text/plain', text)\r\n            list = this.GetSelectCells() as List<DataExcelCell>;\r\n            for (let i = 0; i < count; i++) {\r\n                let cell = list.get(i);\r\n                cell.Text = \"\";\r\n                cell.Value = null;\r\n            }\r\n            this.emit(Events.CellValueChanged, this, list);\r\n            this.SetClipData(text, e);\r\n            return text;\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"copy\", ex);\r\n        }\r\n    }\r\n    Copy(e?: ClipboardEvent) {\r\n        try {\r\n            if (this.FocusedCell == null) {\r\n                return;\r\n            }\r\n            if (this.InEdit) {\r\n                return;\r\n            }\r\n            this.CopyCells = null;\r\n\r\n            let list = this.GetSelectCells() as List<DataExcelCell>;\r\n            let row: DataExcelRow | null = null;\r\n            let count = list.Count;\r\n            let sb = \"\";\r\n            let arr = [];\r\n            for (let i = 0; i < count; i++) {\r\n                let cell = list.get(i);\r\n                if (row == null) {\r\n                    row = cell.Row;\r\n                }\r\n                else if (row != cell.Row) {\r\n                    row = cell.Row;\r\n                    sb = sb + (ConstantValue.CopySplitSymbolRow);\r\n                }\r\n                let celltext = \"\";\r\n                celltext = cell.Text;\r\n                sb = sb + (celltext);\r\n                if (cell != list[list.Count - 1]) {\r\n                    sb = sb + (ConstantValue.CopySplitSymbolColumn);\r\n                }\r\n            }\r\n            let text = sb;\r\n            if (this.SelectCells != null) {\r\n                this.CopyCells = new SelectCellCollection();\r\n                this.CopyCells.Grid = this;\r\n                this.CopyCells.BeginCell = this.SelectCells.BeginCell;\r\n                this.CopyCells.EndCell = this.SelectCells.EndCell;\r\n                this.CopyCells.Refresh();\r\n\r\n            }\r\n            this.SetClipData(text, e);\r\n            return text;\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"copy\", ex);\r\n        }\r\n    }\r\n    Paste(e: any, txt?: any) {\r\n        try {\r\n            if (this.FocusedCell == null) {\r\n                return;\r\n            }\r\n            if (this.CopyCells != null) {\r\n                this.PasteCopyCells();\r\n                return;\r\n            }\r\n            if (this.InEdit) {\r\n                return;\r\n            }\r\n            let text = txt;\r\n            if (e != null) {\r\n                let clipboardData = e.clipboardData || window.Clipboard;\r\n                text = clipboardData.getData('text/plain');\r\n                //let texthtml = clipboardData.getData('text/html');\r\n                //console.log(texthtml);\r\n            }\r\n            let str = text as string;\r\n            let strs = str.split(ConstantValue.CopySplitSymbolRow);\r\n            if (strs.length > 1) {\r\n                let minrow = this.FocusedCell.Row.Index;\r\n                let mincolumn = this.FocusedCell.Column.Index;\r\n                let maxrow = this.FocusedCell.Row.Index + strs.length;\r\n                let rowindex = 0;\r\n                let maxcolumn = 0;\r\n                for (let i = minrow; i < maxrow; i++) {\r\n                    let s = strs[rowindex];\r\n                    rowindex++;\r\n                    let ss = s.split(ConstantValue.CopySplitSymbolColumn);\r\n                    maxcolumn = this.FocusedCell.MaxColumnIndex() + ss.length;\r\n                    let columnindex = 0;\r\n                    for (let j = mincolumn; j < maxcolumn; j++) {\r\n                        let cell = this.GetCellByIndex(i, j);\r\n                        if (cell.OwnMergeCell != null) {\r\n                            if (cell == cell.OwnMergeCell.BeginCell) {\r\n                                cell = cell.OwnMergeCell;\r\n                            }\r\n                            else {\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        let texti = ss[columnindex];\r\n                        columnindex++;\r\n                        cell.Value = texti;\r\n                        cell.Text = texti;\r\n                    }\r\n                }\r\n            }\r\n\r\n            else if (this.SelectCells != null) {\r\n                let list = this.SelectCells.GetCellList();\r\n\r\n                for (let obj in list) {\r\n                    let cell = list[obj] as DataExcelCell;\r\n                    cell.Value = text;\r\n                    cell.Text = text;\r\n                }\r\n                this.emit(Events.CellValueChanged, this, list);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            DataExcelConsole.log(\"dom DoPaste\", ex);\r\n        }\r\n    }\r\n    PasteStyle() {\r\n        try {\r\n            this.PasteValue = false;\r\n            this.PasteCopyCells();\r\n        }\r\n        finally {\r\n            this.PasteValue = true;\r\n        }\r\n\r\n    }\r\n\r\n    SetClipData(text: any, e?: any) {\r\n        if (e != null) {\r\n            let clipboardData = e.clipboardData || window.Clipboard;\r\n            clipboardData.setData('text/plain', text);\r\n        }\r\n        const textarea = document.createElement('textarea')\r\n        document.body.appendChild(textarea)\r\n        // 隐藏此输入框\r\n        textarea.style.display = 'none'\r\n        // 赋值\r\n        textarea.value = text\r\n        // 选中\r\n        textarea.select()\r\n        // 复制\r\n        document.execCommand('copy', true)\r\n        // 移除输入框\r\n        document.body.removeChild(textarea);\r\n    }\r\n    PasteCopyCells() {\r\n        if (this.CopyCells != null) {\r\n            let focusedcell = this.FocusedCell;\r\n            if (focusedcell == null)\r\n                return;\r\n            let cells = this.CopyCells;\r\n            let minrow = cells.MinRow();\r\n            let maxrow = cells.MaxRow();\r\n            let mincolumn = cells.MinColumn();\r\n            let maxcolumn = cells.MaxColumn();\r\n            let rowcount = maxrow - minrow + 1;\r\n            let columncount = maxcolumn - mincolumn + 1;\r\n            let pased = new List<DataExcelCell>();\r\n            if (this.SelectRange.Count > 0) {\r\n                let selectcells = this.GetSelectCells() as List<DataExcelCell>;\r\n\r\n                for (let r = 0; r < selectcells.Count; r++) {\r\n                    let cell = selectcells.get(r);\r\n                    for (let i = 0; i < rowcount; i++) {\r\n                        for (let j = 0; j < columncount; j++) {\r\n\r\n                            let targetcell = this.GetCellByIndex(cell.MaxRowIndex() + i, cell.MaxColumnIndex() + j);\r\n                            if (pased.contains(targetcell)) {\r\n                                continue;\r\n                            }\r\n                            pased.Add(targetcell);\r\n                            let sourcecell = this.GetCellByIndex(minrow + i, mincolumn + j);\r\n                            let row = targetcell.Row;\r\n                            let column = targetcell.Column;\r\n\r\n                            this.PasteCell(sourcecell, targetcell);\r\n                            targetcell.Row = row;\r\n                            targetcell.Column = column;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.SelectCells != null) {\r\n                let minselrow = this.SelectCells.MinRow();\r\n                let minselcolumn = this.SelectCells.MinColumn();\r\n                let maxselrow = this.SelectCells.MaxRow();\r\n                let maxselcolumn = this.SelectCells.MaxColumn();\r\n                if (minselrow == maxselrow) {\r\n                    maxselrow = minselrow + rowcount - 1;\r\n                }\r\n                if (minselcolumn == maxselcolumn) {\r\n                    maxselcolumn = minselcolumn + columncount - 1;\r\n                }\r\n                for (let m = minselrow; m <= maxselrow; m = m + rowcount) {\r\n                    for (let n = minselcolumn; n <= maxselcolumn; n = n + columncount) {\r\n                        let cell = this.GetCellByIndex(m, n);\r\n                        for (let i = 0; i < rowcount; i++) {\r\n                            for (let j = 0; j < columncount; j++) {\r\n\r\n                                let targetcell = this.GetCellByIndex(cell.MaxRowIndex() + i, cell.MaxColumnIndex() + j);\r\n                                if (pased.Contains(targetcell)) {\r\n                                    continue;\r\n                                }\r\n                                if (targetcell.Row.Index > maxselrow) {\r\n                                    continue;\r\n                                }\r\n                                if (targetcell.Column.Index > maxselcolumn) {\r\n                                    continue;\r\n                                }\r\n                                pased.Add(targetcell);\r\n                                let sourcecell = this.GetCellByIndex(minrow + i, mincolumn + j);\r\n                                let row = targetcell.Row;\r\n                                let column = targetcell.Column;\r\n\r\n                                this.PasteCell(sourcecell, targetcell);\r\n                                targetcell.Row = row;\r\n                                targetcell.Column = column;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private PasteValue: boolean = true;\r\n    PasteCell(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n        this.PasteCellMerger(sourcecell, targetcell);\r\n        this.PasteAction(sourcecell, targetcell);\r\n        this.PasteProperty(sourcecell, targetcell);\r\n        this.PasteBorder(sourcecell, targetcell);\r\n        this.PasteCellEdit(sourcecell, targetcell);\r\n        this.PasteCellStyle(sourcecell, targetcell);\r\n        if (this.PasteValue) {\r\n            this.PasteCellValue(sourcecell, targetcell);\r\n            this.PasteExpression(sourcecell, targetcell);\r\n        }\r\n    }\r\n    public PasteCellEdit(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n        targetcell.OwnEditControl = sourcecell.OwnEditControl;\r\n    }\r\n    public PasteExpression(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        //if (targetcell.ReadOnly)\r\n        //    return;\r\n        //if (string.IsNullOrWhiteSpace(targetcell.Expression) && string.IsNullOrWhiteSpace(sourcecell.Expression))\r\n        //    return;\r\n        //targetcell.Expression = sourcecell.Expression;\r\n    }\r\n    public PasteCellValue(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n        targetcell.Value = sourcecell.Value;\r\n        targetcell.Text = sourcecell.Text;\r\n    }\r\n    public PasteCellStyle(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n        targetcell.BackColor = sourcecell.BackColor;\r\n        targetcell.ForeColor = sourcecell.ForeColor;\r\n        targetcell.BackImage = sourcecell.BackImage;\r\n        //targetcell.BackImgeSizeMode = sourcecell.BackImgeSizeMode;\r\n        //targetcell.DisableImage = sourcecell.DisableImage;\r\n        //targetcell.DisableImageSizeMode = sourcecell.DisableImageSizeMode;\r\n        //targetcell.FocusBackColor = sourcecell.FocusBackColor;\r\n        //targetcell.FocusForeColor = sourcecell.FocusForeColor;\r\n        //targetcell.FocusImage = sourcecell.FocusImage;\r\n        //targetcell.FocusImageSizeMode = sourcecell.FocusImageSizeMode;\r\n        //targetcell.MouseDownBackColor = sourcecell.MouseDownBackColor;\r\n        //targetcell.MouseDownForeColor = sourcecell.MouseDownForeColor;\r\n        //targetcell.MouseDownImage = sourcecell.MouseDownImage;\r\n        //targetcell.MouseDownImageSizeMode = sourcecell.MouseDownImageSizeMode;\r\n        //targetcell.MouseOverBackColor = sourcecell.MouseOverBackColor;\r\n        //targetcell.MouseOverForeColor = sourcecell.MouseOverForeColor;\r\n        //targetcell.MouseOverImage = sourcecell.MouseOverImage;\r\n        //targetcell.MouseOverImageSizeMode = sourcecell.MouseOverImageSizeMode;\r\n        //targetcell.ReadOnlyImage = sourcecell.ReadOnlyImage;\r\n        //targetcell.ReadOnlyImageSizeMode = sourcecell.ReadOnlyImageSizeMode;\r\n        //targetcell.SelectBackColor = sourcecell.SelectBackColor;\r\n        //targetcell.SelectBorderColor = sourcecell.SelectBorderColor;\r\n        //targetcell.SelectForceColor = sourcecell.SelectForceColor;\r\n        targetcell.ShowFocusedSelectBorder = sourcecell.ShowFocusedSelectBorder;\r\n        targetcell.Style = JSON.parse(JSON.stringify(sourcecell.Style));\r\n\r\n    }\r\n    public PasteAction(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n        //targetcell.PropertyOnCellEndEdit = sourcecell.PropertyOnCellEndEdit;\r\n        //targetcell.PropertyOnCellInitEdit = sourcecell.PropertyOnCellInitEdit;\r\n        //targetcell.PropertyOnCellValueChanged = sourcecell.PropertyOnCellValueChanged;\r\n        //targetcell.PropertyOnClick = sourcecell.PropertyOnClick;\r\n        //targetcell.PropertyOnDoubleClick = sourcecell.PropertyOnDoubleClick;\r\n        //targetcell.PropertyOnDrawBack = sourcecell.PropertyOnDrawBack;\r\n        //targetcell.PropertyOnDrawCell = sourcecell.PropertyOnDrawCell;\r\n        //targetcell.PropertyOnKeyDown = sourcecell.PropertyOnKeyDown;\r\n        //targetcell.PropertyOnKeyPress = sourcecell.PropertyOnKeyPress;\r\n        //targetcell.PropertyOnKeyUp = sourcecell.PropertyOnKeyUp;\r\n        //targetcell.PropertyOnMouseCaptureChanged = sourcecell.PropertyOnMouseCaptureChanged;\r\n        //targetcell.PropertyOnMouseClick = sourcecell.PropertyOnMouseClick;\r\n        //targetcell.PropertyOnMouseDoubleClick = sourcecell.PropertyOnMouseDoubleClick;\r\n        //targetcell.PropertyOnMouseDown = sourcecell.PropertyOnMouseDown;\r\n        //targetcell.PropertyOnMouseEnter = sourcecell.PropertyOnMouseEnter;\r\n        //targetcell.PropertyOnMouseHover = sourcecell.PropertyOnMouseHover;\r\n        //targetcell.PropertyOnMouseLeave = sourcecell.PropertyOnMouseMove;\r\n        //targetcell.PropertyOnMouseUp = sourcecell.PropertyOnMouseUp;\r\n        //targetcell.PropertyOnMouseWheel = sourcecell.PropertyOnMouseWheel;\r\n        //targetcell.PropertyOnPreviewKeyDown = sourcecell.PropertyOnPreviewKeyDown;\r\n    }\r\n    public PasteProperty(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly)\r\n            return;\r\n        targetcell.BackColor = sourcecell.BackColor;\r\n        targetcell.ForeColor = sourcecell.ForeColor;\r\n        targetcell.FormatType = sourcecell.FormatType;\r\n        targetcell.Format = sourcecell.Format;\r\n        //targetcell.FieldName = sourcecell.FieldName;\r\n        targetcell.Font = sourcecell.Font;\r\n        targetcell.BackImage = sourcecell.BackImage;\r\n        //targetcell.BackImgeSizeMode = sourcecell.BackImgeSizeMode;\r\n        //targetcell.DirectionVertical = sourcecell.DirectionVertical;\r\n        //targetcell.DisableImage = sourcecell.DisableImage;\r\n        //targetcell.DisableImageSizeMode = sourcecell.DisableImageSizeMode;\r\n        //targetcell.DisplayMember = sourcecell.DisplayMember;\r\n        //targetcell.FocusBackColor = sourcecell.FocusBackColor;\r\n        //targetcell.FocusForeColor = sourcecell.FocusForeColor;\r\n        //targetcell.FocusImage = sourcecell.FocusImage;\r\n        //targetcell.FocusImageSizeMode = sourcecell.FocusImageSizeMode;\r\n        //targetcell.FunctionBorder = sourcecell.FunctionBorder;\r\n        targetcell.HorizontalAlignment = sourcecell.HorizontalAlignment;\r\n        //targetcell.InhertReadOnly = sourcecell.InhertReadOnly;\r\n        //targetcell.MouseDownBackColor = sourcecell.MouseDownBackColor;\r\n        //targetcell.MouseDownForeColor = sourcecell.MouseDownForeColor;\r\n        //targetcell.MouseDownImage = sourcecell.MouseDownImage;\r\n        //targetcell.MouseDownImageSizeMode = sourcecell.MouseDownImageSizeMode;\r\n        //targetcell.MouseOverBackColor = sourcecell.MouseOverBackColor;\r\n        //targetcell.MouseOverForeColor = sourcecell.MouseOverForeColor;\r\n        //targetcell.MouseOverImage = sourcecell.MouseOverImage;\r\n        //targetcell.MouseOverImageSizeMode = sourcecell.MouseOverImageSizeMode;\r\n\r\n        targetcell.ReadOnly = sourcecell.ReadOnly;\r\n        //targetcell.ReadOnlyImage = sourcecell.ReadOnlyImage;\r\n        //targetcell.ReadOnlyImageSizeMode = sourcecell.ReadOnlyImageSizeMode;\r\n        //targetcell.SelectBackColor = sourcecell.SelectBackColor;\r\n        //targetcell.SelectBorderColor = sourcecell.SelectBorderColor;\r\n        //targetcell.SelectForceColor = sourcecell.SelectForceColor;\r\n        targetcell.ShowFocusedSelectBorder = sourcecell.ShowFocusedSelectBorder;\r\n        //targetcell.Value = sourcecell.Value;\r\n        //targetcell.ValueMember = sourcecell.ValueMember;\r\n        targetcell.VerticalAlignment = sourcecell.VerticalAlignment;\r\n        targetcell.Visible = sourcecell.Visible;\r\n    }\r\n    public PasteBorder(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n\r\n        targetcell.TopLineStyle = sourcecell.TopLineStyle\r\n        targetcell.BottomLineStyle = sourcecell.BottomLineStyle;\r\n        targetcell.LeftLineStyle = sourcecell.LeftLineStyle;\r\n        targetcell.RightLineStyle = sourcecell.RightLineStyle;\r\n\r\n\r\n    }\r\n    public PasteCellMerger(sourcecell: DataExcelCell, targetcell: DataExcelCell) {\r\n        if (targetcell.ReadOnly == CheckState.Check)\r\n            return;\r\n        if (sourcecell.OwnMergeCell != null) {\r\n            let mcell = sourcecell.OwnMergeCell;\r\n            if (mcell.BeginCell == sourcecell) {\r\n                let minrow = mcell.Row.Index;\r\n                let maxrow = mcell.MaxRowIndex();\r\n                let mincolumn = mcell.Column.Index;\r\n                let maxcolumn = mcell.MaxColumnIndex();\r\n                let rowcount = maxrow - minrow;\r\n                let columncount = maxcolumn - mincolumn;\r\n                let endcell = this.GetCellByIndex(targetcell.MaxRowIndex() + rowcount, targetcell.MaxColumnIndex() + columncount);\r\n                this.MergeCell(targetcell, endcell);\r\n            }\r\n        }\r\n    }\r\n\r\n    SelectModeNullMouseMove(e: MouseEvent, ve: EventView): boolean {\r\n\r\n        let pt = new Point(e.offsetX, e.offsetY);\r\n        let viewlocation = this.PointControlToView(pt);\r\n\r\n        let cell = this.GetCellByPoint(pt);\r\n        if (cell != null) {\r\n            if (cell.OwnMergeCell != null) {\r\n                cell = cell.OwnMergeCell;\r\n            }\r\n            if (cell != null) {\r\n                if (cell.OnMouseMove(this, e, ve)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    SelectModeCellSeletedMouseMove(ve: EventView): boolean {\r\n        let pt = new Point();\r\n        pt.X = ve.offsetPoint.X;\r\n        pt.Y = ve.offsetPoint.Y;\r\n\r\n        let viewloaction = this.PointControlToView(pt);\r\n        let location = viewloaction;\r\n        if (this.SelectCells != null) {\r\n            if (this.SelectCells.BeginCell != null) {\r\n                if (this.SelectCells.BeginCell.Row.Index > 0 && this.SelectCells.BeginCell.Column.Index > 0) {\r\n                    if (!this.ClientBounds.Contains(location)) {\r\n                        if (this.AllowChangedFirstDisplayRow) {\r\n                            location = this.SetFirstShowIndex(location);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let cell = this.GetCellByPoint(pt);\r\n        if (cell != null) {\r\n            if (cell.OwnMergeCell != null) {\r\n                cell = cell.OwnMergeCell;\r\n            }\r\n            if (this.SelectCells != null) {\r\n                if (this.SelectCells.EndCell != cell) {\r\n                    this.SelectCells.EndCell = cell;\r\n                    this.SelectCells.Refresh();\r\n                }\r\n                return true;\r\n\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    SelectModeCellAddSelectedMouseMove(e: MouseEvent): boolean {\r\n        let viewloaction = this.PointControlToView(new Point(e.offsetX, e.offsetY));\r\n        let pt = viewloaction;\r\n        let location = this.SetFirstShowIndex(pt);\r\n        let cell = this.GetCellByPoint(location);\r\n        if (this.SelectAddRectCollection != null) {\r\n            this.SelectAddRectCollection.EndCell = cell;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    SetSelectCellRowSelect() {\r\n        this.SelectRows.Clear();\r\n        this.SelectColumns.Clear();\r\n        if (this.SelectCells != null) {\r\n            let minrow = this.SelectCells.MinRow();\r\n            let maxrow = this.SelectCells.MaxRow();\r\n            let mincolumn = this.SelectCells.MinColumn();\r\n            let maxcolumn = this.SelectCells.MaxColumn();\r\n            if (minrow == 0 && maxrow == 0) {\r\n                for (let i = mincolumn; i <= maxcolumn; i++) {\r\n                    let column = this.Columns.Get(i);\r\n                    if (column != null) {\r\n                        column.Selected = true;\r\n                    }\r\n                }\r\n            }\r\n            if (mincolumn == 0 && maxcolumn == 0) {\r\n                for (let i = minrow; i <= maxrow; i++) {\r\n                    let row = this.Rows.Get(i);\r\n                    if (row != null) {\r\n                        row.Selected = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //merge\r\n    Merge(selectcells: SelectCellCollection) {\r\n        return this.NewMergeCell(this, selectcells);\r\n    }\r\n    MergeCell(cellbegin: DataExcelCell, cellend: DataExcelCell) {\r\n        let model = new DataExcelMergeCell();\r\n        model.Grid = this;\r\n        model.BeginCell = cellbegin;\r\n        model.EndCell = cellend;\r\n        this.MergeCells.Add(model);\r\n        return model;\r\n\r\n    }\r\n    UnMerge(selectcells: SelectCellCollection) {\r\n        let list = selectcells.GetAllCells();\r\n        list.forEach((cell) => {\r\n            if (cell.OwnMergeCell != null) {\r\n                let mergecell = cell.OwnMergeCell as DataExcelMergeCell;\r\n                mergecell.Released = true;\r\n                this.MergeCells.Remove(mergecell);\r\n            }\r\n            cell.OwnMergeCell = null;\r\n        });\r\n    }\r\n    BackCell(selectcells: SelectCellCollection) {\r\n        return this.NewBackCell(this, selectcells);\r\n    }\r\n    BackCell2(cellbegin: DataExcelCell, cellend: DataExcelCell) {\r\n        let model = new DataExcelBackCell();\r\n        model.Grid = this;\r\n        model.BeginCell = cellbegin;\r\n        model.EndCell = cellend;\r\n        this.BackCells.Add(model);\r\n        return model;\r\n\r\n    }\r\n    UnBackCell(selectcells: SelectCellCollection) {\r\n        let list = selectcells.GetAllCells();\r\n        list.forEach((cell) => {\r\n            if (cell.OwnBackCell != null) {\r\n                let mergecell = cell.OwnBackCell as DataExcelBackCell;\r\n                mergecell.Released = true;\r\n                this.BackCells.Remove(mergecell);\r\n            }\r\n            cell.OwnBackCell = null;\r\n        });\r\n    }\r\n    //TOOL\r\n    BeginSetCursor(cursor: string) {\r\n        this.maindom.style.cursor = cursor;\r\n        this.zrendermain.dom.style.cursor = cursor;\r\n    }\r\n    InVisible(cell: DataExcelCell): boolean {\r\n        if (cell == null)\r\n            return false;\r\n        if (cell.Row.Index >= this.FirstDisplayedRowIndex && cell.Row.Index <= this.EndDisplayedRowIndex) {\r\n\r\n            if (cell.Column.Index >= this.FirstDisplayedColumnIndex && cell.Column.Index <= this.EndDisplayedColumnIndex) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    GetRow(rowindex: number) {\r\n        let row = this.Rows.Get(rowindex);\r\n        if (row == null) {\r\n            row = this.NewRow(this, rowindex);\r\n            this.Rows.Add(rowindex, row);\r\n        }\r\n\r\n        return row;\r\n    }\r\n    GetColumn(columnindex: number) {\r\n        let column = this.Columns.Get(columnindex);\r\n        if (column == null) {\r\n            column = this.NewColumn(this, columnindex);\r\n            this.Columns.Add(columnindex, column);\r\n        }\r\n        return column;\r\n    }\r\n    GetCellByIndex(rowindex: number, columnindex: number): DataExcelCell {\r\n        let row = this.Rows.Get(rowindex);\r\n        if (row == null) {\r\n            row = this.NewRow(this, rowindex);\r\n            this.Rows.Add(rowindex, row);\r\n        }\r\n        let column = this.Columns.Get(columnindex);\r\n        if (column == null) {\r\n            column = this.NewColumn(this, columnindex);\r\n            this.Columns.Add(columnindex, column);\r\n        }\r\n        let cell = row.Cells.Get(column);\r\n        if (cell == null) {\r\n            cell = this.NewCell(row, column);\r\n        }\r\n        return cell;\r\n\r\n\r\n    }\r\n\r\n    SetFirstShowIndex(point: Point) {\r\n        let location = point;\r\n        let movestep = 1;\r\n        if (point.X <= this.ContentLeft) {\r\n            location.X = this.ContentLeft + 1;\r\n        }\r\n        if (point.X >= (this.Width - this.ContentRight)) {\r\n            location.X = this.Width - this.ContentRight - 1;\r\n        }\r\n        if (point.Y <= this.ContentTop) {\r\n            location.Y = this.ContentTop + 1;\r\n        }\r\n        if (point.Y >= (this.Height - this.ContentBottom)) {\r\n            location.Y = this.Height - this.ContentBottom - 1;\r\n        }\r\n        let firstcolumnindex = 0;\r\n        if (point.X <= this.ContentLeft) {\r\n            firstcolumnindex = (this.FirstDisplayedColumnIndex - movestep);\r\n            if (firstcolumnindex <= 0) {\r\n                firstcolumnindex = 0;\r\n            }\r\n            if (this.AllowChangedFirstDisplayColumn) {\r\n                this.SetFirstDisplayColumn(firstcolumnindex);\r\n            }\r\n            return location;\r\n        }\r\n        else if (point.X >= (this.Width - this.ContentRight)) {\r\n            firstcolumnindex = (this.FirstDisplayedColumnIndex + movestep);\r\n            if (firstcolumnindex <= 0) {\r\n                firstcolumnindex = 0;\r\n            }\r\n            if (this.AllowChangedFirstDisplayColumn) {\r\n                this.SetFirstDisplayColumn(firstcolumnindex);\r\n            }\r\n            return location;\r\n        }\r\n        if (point.Y <= this.ContentTop) {\r\n            firstcolumnindex = (this.FirstDisplayedRowIndex - movestep);\r\n            if (firstcolumnindex <= 0) {\r\n                firstcolumnindex = 0;\r\n            }\r\n            if (this.AllowChangedFirstDisplayRow) {\r\n                this.SetFirstDisplayRow(firstcolumnindex);\r\n            }\r\n            return location;\r\n        }\r\n        else if (point.Y >= (this.Height - this.ContentBottom)) {\r\n            firstcolumnindex = (this.FirstDisplayedRowIndex + movestep);\r\n            if (firstcolumnindex <= 0) {\r\n                firstcolumnindex = 0;\r\n            }\r\n            if (this.AllowChangedFirstDisplayRow) {\r\n                this.SetFirstDisplayRow(firstcolumnindex);\r\n            }\r\n            return location;\r\n        }\r\n        return location;\r\n    }\r\n\r\n    GetOwnCell(cell: DataExcelCell) {\r\n        if (cell == null)\r\n            return null;\r\n        if (cell.OwnMergeCell != null)\r\n            return cell.OwnMergeCell;\r\n        return cell;\r\n    }\r\n\r\n    GetLeftCell(cell: DataExcelCell): DataExcelCell | null {\r\n        if (cell == null)\r\n            return null;\r\n        let rowindex = cell.Row.Index;\r\n        let columnindex = cell.Column.Index - 1;\r\n        if (columnindex < 1) {\r\n            return null;\r\n        }\r\n        let rescell = this.GetCellByIndex(rowindex, columnindex);\r\n        return rescell;\r\n    }\r\n    GetRightCell(cell: DataExcelCell): DataExcelCell | null {\r\n        if (cell == null)\r\n            return null;\r\n        let rowindex = cell.Row.Index;\r\n        let columnindex = cell.Column.Index + 1;\r\n        if (columnindex < 1) {\r\n            return null;\r\n        }\r\n        let rescell = this.GetCellByIndex(rowindex, columnindex);\r\n        return rescell;\r\n    }\r\n    GetTopCell(cell: DataExcelCell): DataExcelCell | null {\r\n        if (cell == null)\r\n            return null;\r\n        let rowindex = cell.Row.Index - 1;\r\n        let columnindex = cell.Column.Index;\r\n        if (rowindex < 1) {\r\n            return null;\r\n        }\r\n        let rescell = this.GetCellByIndex(rowindex, columnindex);\r\n        return rescell;\r\n    }\r\n    GetBottomCell(cell: DataExcelCell): DataExcelCell | null {\r\n        if (cell == null)\r\n            return null;\r\n        let rowindex = cell.Row.Index + 1;\r\n        let columnindex = cell.Column.Index;\r\n        if (rowindex < 1) {\r\n            return null;\r\n        }\r\n        let rescell = this.GetCellByIndex(rowindex, columnindex);\r\n        return rescell;\r\n    }\r\n    //CommandMethod\r\n    public Clear() {\r\n        //this.BookMarkList.Clear();\r\n        //this.FocsedCellList.Clear();\r\n        this.SelectCells = null;\r\n        this.Selectmode = SelectMode.Null;\r\n        //this._password = string.Empty;\r\n        //this._filename = string.Empty;\r\n        //this.ListFilter = null;\r\n        this.AllowChangedFirstDisplayColumn = true;\r\n        this.AllowChangedFirstDisplayRow = true;\r\n        this.AutoGenerateColumns = true;\r\n        this.AutoGenerateRows = true;\r\n\r\n        this.ShowBorder = true;\r\n        this.ShowColumnHeader = true;\r\n        this.ShowRowHeader = true;\r\n        this.ShowGridLine = true;\r\n        this.FirstDisplayedRowIndex = 1;\r\n        this.EndDisplayedRowIndex = 1;\r\n        this.FirstDisplayedColumnIndex = 1;\r\n        this.EndDisplayedColumnIndex = 1;\r\n        this.ReadOnly = CheckState.Unkown;\r\n        this.TopSideHeight = 0;\r\n        this.Font = \"14px 宋体\";\r\n        //this.BackColor = \"red\";\r\n        this.AutoGenerateRows = true;\r\n        this.MaxRow = 1000000;\r\n        this.FrozenRow = 0;\r\n        this.ContentTop = 0;\r\n        this.ContentBottom = 0;\r\n        this.BackImage = \"\";\r\n        this.BackImageImageLayout = ImageLayout.ZoomClip;\r\n\r\n        this.CopyCells = null\r\n        if (this.MergeCells != null) {\r\n            this.MergeCells.Clear();\r\n        }\r\n        if (this.BackCells != null) {\r\n            this.BackCells.Clear();\r\n        }\r\n        if (this.Charts != null) {\r\n            this.Charts.Clear();\r\n        }\r\n        if (this.Primitives != null) {\r\n            this.Primitives.Clear();\r\n        }\r\n        if (this.Rows != null) {\r\n            this.Rows.Clear();\r\n        }\r\n        if (this.Columns != null) {\r\n            this.Columns.Clear();\r\n        }\r\n        //if (this.FunctionCells != null)\r\n        //{\r\n        //    this.FunctionCells.Clear();\r\n        //}\r\n        //if (this.ListExtendCells != null)\r\n        //{\r\n        //    this.ListExtendCells.Clear();\r\n        //}\r\n        //if (this.FieldCells != null)\r\n        //{\r\n        //    this.FieldCells.Clear();\r\n        //}\r\n        this.IDCells.Clear();\r\n        //this.BackgroundImage = null;\r\n        //this._code = string.Empty;\r\n        //    this.ExtensData.Clear();\r\n        this.CurrentEdit = null;\r\n        this._CellEvent = null;\r\n        //this.CellSaveEdits.Clear();\r\n        //this._DataSource = null;\r\n        //this._datamember = null;\r\n        this.FirstDisplayedRowIndex = 1;\r\n        this.FirstDisplayedColumnIndex = 1;\r\n        //this._showgridcolumnline = true;\r\n        //this._showgridrowline = true;\r\n        this.ShowSelectBorder = true;\r\n        //this._showselectaddrect = true;\r\n        //this._password = string.Empty;\r\n        //this._maxRow = int.MaxValue;\r\n        //this._maxColumn = MAXCOLUMNINDEX; \r\n        this.ShowRowHeader = true;\r\n        this.ShowGridLine = true;\r\n        this.ShowColumnHeader = true;\r\n        this._focusedcell = null;\r\n        this.VisibleColumns.Clear();\r\n        this.VisibleRows.Clear();\r\n    }\r\n    OpenFile(file: any) {\r\n        try {\r\n            let read = new FileReader();\r\n            let grid = this;\r\n            read.onload = function readf() {\r\n                let txt = read.result as string;\r\n                let data = JSON.parse(txt);\r\n                grid.SetData(data);\r\n                grid.InitChart();\r\n                grid.RefreshZrender();\r\n                grid.Refresh();\r\n                grid.RePaint();\r\n                grid.Charts.Refresh();\r\n                grid.emit(\"OpenFile\", this, data);\r\n            };\r\n            read.readAsText(file);\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"OpenFile\", e);\r\n        }\r\n\r\n\r\n    }\r\n    //Command\r\n    CommandNew() {\r\n        this.Clear();\r\n        this.Refresh();\r\n    }\r\n    CommandBackGroudColor(color: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            cell.BackColor = color;\r\n        }\r\n    }\r\n    CommandForeColor(color: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            cell.ForeColor = color;\r\n        }\r\n    }\r\n    CommandFontName(fontname: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            cell.Style.fontFamily = fontname;\r\n        }\r\n    }\r\n    CommandFontSize(fontsize: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            cell.Style.fontSize = fontsize;\r\n        }\r\n    }\r\n    CommandFontSizeAdd(num: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            let fontsize = cell.Style.fontSize as string;\r\n            if (fontsize == null) {\r\n                fontsize = '14px';\r\n            }\r\n            fontsize = fontsize.replace(\"px\", \"\");\r\n            let size = Number(fontsize)\r\n            cell.Style.fontSize = (size + num) + \"px\";\r\n        }\r\n    }\r\n    CommandFontWeight(fontweight: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            cell.Style.fontWeight = fontweight;\r\n        }\r\n    }\r\n    CommandFontStyle(fontstyle: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            if (fontstyle == \"bold\") {\r\n                cell.Style.fontWeight = fontstyle;\r\n            }\r\n            else {\r\n                cell.Style.fontStyle = fontstyle;\r\n            }\r\n            if (fontstyle == \"normal\") {\r\n                cell.Style.fontWeight = fontstyle;\r\n                cell.Style.fontStyle = fontstyle;\r\n            }\r\n        }\r\n    }\r\n    CommandCellBorder(border: any) {\r\n        let list = this.GetSelectCells();\r\n        let style = { stroke: \"black\" };\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            switch (border) {\r\n                case Border.all:\r\n                    let leftcell = this.GetLeftCell(cell);\r\n                    if (leftcell != null) {\r\n                        leftcell = this.GetOwnCell(leftcell);\r\n                        if (leftcell != null) {\r\n                            if (leftcell.RightLineStyle == null) {\r\n                                cell.LeftLineStyle = style;\r\n                            }\r\n                        }\r\n                    }\r\n                    let topcell = this.GetTopCell(cell);\r\n                    if (topcell != null) {\r\n                        topcell = this.GetOwnCell(topcell);\r\n                        if (topcell != null) {\r\n                            if (topcell.BottomLineStyle == null) {\r\n                                cell.TopLineStyle = style;\r\n                            }\r\n                        }\r\n                    }\r\n                    cell.RightLineStyle = style;\r\n                    cell.BottomLineStyle = style;\r\n                    break;\r\n                case Border.left:\r\n                    cell.LeftLineStyle = style;\r\n                    break;\r\n                case Border.right:\r\n                    cell.RightLineStyle = style;\r\n                    break;\r\n                case Border.top:\r\n                    cell.TopLineStyle = style;\r\n                    break;\r\n                case Border.bottom:\r\n                    cell.BottomLineStyle = style;\r\n                    break;\r\n\r\n                default:\r\n            }\r\n        }\r\n    }\r\n    CommandTextAlign(algin: any) {\r\n        let list = this.GetSelectCells();\r\n        for (let i in list) {\r\n            let cell = list[i] as DataExcelCell;\r\n            cell.Style.align = algin;\r\n        }\r\n    }\r\n    //Script\r\n    ExecScript(txt: string) {\r\n        eval(txt);\r\n    }\r\n    //Test\r\n    Test() {\r\n        if (this.FocusedCell != null) {\r\n            this.FocusedCell.BackImage = \"\";\r\n        }\r\n    }\r\n\r\n    //Add Select\r\n    public UpdataSelectAdd() {\r\n\r\n        let selectionadd = this.SelectAddRectCollection;\r\n\r\n        if (selectionadd == null)\r\n            return;\r\n        if (selectionadd.SelectCellCollection == null)\r\n            return;\r\n        if (selectionadd.EndCell == null)\r\n            return;\r\n        let target = selectionadd.EndCell;\r\n        let selminrowindex = selectionadd.SelectCellCollection.MinRow();\r\n        let selmincolumnindex = selectionadd.SelectCellCollection.MinColumn();\r\n\r\n        let selmaxrowindex = selectionadd.SelectCellCollection.MaxRow();\r\n        let selmaxcolumnindex = selectionadd.SelectCellCollection.MaxColumn();\r\n\r\n        let targetrowindex = selectionadd.EndCell.Row.Index;\r\n        let targetcolumnindex = selectionadd.EndCell.Column.Index;\r\n        let rowcount = targetrowindex - selmaxrowindex;\r\n        let columncount = targetcolumnindex - selmaxcolumnindex;\r\n\r\n        if (rowcount >= 0) {\r\n            if (columncount >= 0) {\r\n                if (rowcount >= columncount) {\r\n                    this.UpdataSelectRowsDown(selectionadd, target);\r\n                }\r\n                else {\r\n                    this.UpdataSelectColumnsRight(selectionadd, target);\r\n                }\r\n            }\r\n            else {\r\n                columncount = selmincolumnindex - targetcolumnindex;\r\n                if (rowcount >= columncount) {\r\n                    this.UpdataSelectRowsDown(selectionadd, target);\r\n                }\r\n                else {\r\n                    this.UpdataSelectColumnsLeft(selectionadd, target);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            rowcount = selminrowindex - targetrowindex;\r\n            if (columncount >= 0) {\r\n                if (rowcount >= columncount) {\r\n                    this.UpdataSelectRowsUp(selectionadd, target);\r\n                }\r\n                else {\r\n                    this.UpdataSelectColumnsRight(selectionadd, target);\r\n                }\r\n            }\r\n            else {\r\n                columncount = selmincolumnindex - targetcolumnindex;\r\n                if (rowcount >= columncount) {\r\n                    this.UpdataSelectRowsUp(selectionadd, target);\r\n                }\r\n                else {\r\n                    this.UpdataSelectColumnsLeft(selectionadd, target);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        rowcount = targetrowindex - selminrowindex;\r\n        columncount = targetcolumnindex - selmincolumnindex;\r\n\r\n        this.EndEdit();\r\n    }\r\n    public UpdataSelectRowsUp(selectionadd: any, target: any) {\r\n        let selminrowindex = selectionadd.SelectCellCollection.MinRow();\r\n        let selmincolumnindex = selectionadd.SelectCellCollection.MinColumn();\r\n\r\n        let selmaxrowindex = selectionadd.SelectCellCollection.MaxRow();\r\n        let selmaxcolumnindex = selectionadd.SelectCellCollection.MaxColumn();\r\n\r\n        let targetrowindex = selectionadd.EndCell.Row.Index;\r\n        let targetcolumnindex = selectionadd.EndCell.Column.Index;\r\n\r\n        for (let i = selmincolumnindex; i <= selmaxcolumnindex; i++) {\r\n            let cellend = this.GetCellByIndex(selminrowindex, i);\r\n            let cellbegin = this.GetCellByIndex(selmaxrowindex, i);\r\n            let target2 = this.GetCellByIndex(targetrowindex, i);\r\n            this.UpdataSelectRowsUp2(cellbegin, cellend, target2);\r\n        }\r\n    }\r\n    public UpdataSelectRowsDown(selectionadd: any, target: any) {\r\n        let selminrowindex = selectionadd.SelectCellCollection.MinRow();\r\n        let selmincolumnindex = selectionadd.SelectCellCollection.MinColumn();\r\n\r\n        let selmaxrowindex = selectionadd.SelectCellCollection.MaxRow();\r\n        let selmaxcolumnindex = selectionadd.SelectCellCollection.MaxColumn();\r\n\r\n        let targetrowindex = selectionadd.EndCell.Row.Index;\r\n        let targetcolumnindex = selectionadd.EndCell.Column.Index;\r\n\r\n        for (let i = selmincolumnindex; i <= selmaxcolumnindex; i++) {\r\n            let cellbegin = this.GetCellByIndex(selminrowindex, i);\r\n            let cellend = this.GetCellByIndex(selmaxrowindex, i);\r\n            let target2 = this.GetCellByIndex(targetrowindex, i);\r\n            this.UpdataSelectRowsDown2(cellbegin, cellend, target2);\r\n        }\r\n\r\n    }\r\n    public UpdataSelectColumnsRight(selectionadd: any, target: any) {\r\n        let selminrowindex = selectionadd.SelectCellCollection.MinRow();\r\n        let selmincolumnindex = selectionadd.SelectCellCollection.MinColumn();\r\n\r\n        let selmaxrowindex = selectionadd.SelectCellCollection.MaxRow();\r\n        let selmaxcolumnindex = selectionadd.SelectCellCollection.MaxColumn();\r\n\r\n        let targetrowindex = selectionadd.EndCell.Row.Index;\r\n        let targetcolumnindex = selectionadd.EndCell.Column.Index;\r\n\r\n        for (let i = selminrowindex; i <= selmaxrowindex; i++) {\r\n            let cellbegin = this.GetCellByIndex(i, selmincolumnindex);\r\n            let cellend = this.GetCellByIndex(i, selmaxcolumnindex);\r\n            let target2 = this.GetCellByIndex(i, targetcolumnindex);\r\n            this.UpdataSelectColumnsDown2(cellbegin, cellend, target2);\r\n        }\r\n\r\n    }\r\n    public UpdataSelectColumnsLeft(selectionadd: any, target: any) {\r\n\r\n        let selminrowindex = selectionadd.SelectCellCollection.MinRow();\r\n        let selmincolumnindex = selectionadd.SelectCellCollection.MinColumn();\r\n\r\n        let selmaxrowindex = selectionadd.SelectCellCollection.MaxRow();\r\n        let selmaxcolumnindex = selectionadd.SelectCellCollection.MaxColumn();\r\n\r\n        let targetrowindex = selectionadd.EndCell.Row.Index;\r\n        let targetcolumnindex = selectionadd.EndCell.Column.Index;\r\n\r\n        for (let i = selminrowindex; i <= selmaxrowindex; i++) {\r\n            let cellend = this.GetCellByIndex(i, selmincolumnindex);\r\n            let cellbegin = this.GetCellByIndex(i, selmaxcolumnindex);\r\n            let target2 = this.GetCellByIndex(i, targetcolumnindex);\r\n            this.UpdataSelectColumnsLeft2(cellbegin, cellend, target2);\r\n        }\r\n    }\r\n\r\n\r\n    public ADDVALUE = 1;\r\n    public DateType = 4;\r\n    public DateLen = 1;\r\n\r\n\r\n    private GetSelectDataTimeAdd(dt: any, DateType: any, i: any, DateLen: any) {\r\n        let len = i * DateLen;\r\n        switch (DateType) {\r\n            case 1:\r\n                dt = dt.AddSeconds(len);\r\n                break;\r\n            case 2:\r\n                dt = dt.AddMinutes(len);\r\n                break;\r\n            case 3:\r\n                dt = dt.AddHours(len);\r\n                break;\r\n            case 4:\r\n                dt = dt.AddDays(len);\r\n                break;\r\n            case 5:\r\n                dt = dt.AddDays(len * 7);\r\n                break;\r\n            case 6:\r\n                dt = dt.AddMonths(len);\r\n                break;\r\n            case 7:\r\n                dt = dt.AddYears(len);\r\n                break;\r\n            default:\r\n                dt = dt.AddDays(i * 1);\r\n                break;\r\n        }\r\n        return dt;\r\n    }\r\n\r\n    public UpdataSelectRowsDown2(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        //if (System.Windows.Forms.Control.ModifierKeys == Keys.Control)\r\n        //{\r\n        this.UpdataSelectRows2DownAdd(cellbegin, cellend, target, false);\r\n        //}\r\n        //else\r\n        //{\r\n        //this.UpdataSelectRows2DownAdd(cellbegin, cellend, target, true);\r\n        //}\r\n    }\r\n    public UpdataSelectRows2DownAdd(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any, copy: any) {\r\n        let minrow = cellbegin.Row.Index;\r\n        let maxrow = cellend.MaxRowIndex();\r\n        let targetrow = target.Row.Index;\r\n        let tcolumn = cellbegin.Column.Index;\r\n        let targetcount = targetrow - maxrow;\r\n        let scount = maxrow - minrow + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        let hasSet = false;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let trow = maxrow + i * scount + j + 1;\r\n                let srow = minrow + j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(srow, tcolumn);\r\n                this.PasteCell(scell, tcell);\r\n                let num = (i + 1) * this.ADDVALUE;\r\n                this.setUpdataCellValue(tcell, scell, num)\r\n                //if (!copy)\r\n                //{\r\n                //if (!string.IsNullOrWhiteSpace(scell.Expression))\r\n                //{\r\n                //    tcell.Expression = Function.GetNextRowExpress(scell.Expression, i + 1);\r\n                //    continue;\r\n                //}\r\n                //DateTime ? dt = Feng.Utils.ConvertHelper.ToDateTimeNullable(scell.Value);\r\n                //if (dt.HasValue)\r\n                //{\r\n                //    if (hasSet)\r\n                //    {\r\n                //        if (System.Windows.Forms.Control.ModifierKeys == Keys.Shift)\r\n                //        {\r\n                //            SetSelectDateTimeAddType(ref DateType, ref DateLen);\r\n                //        }\r\n                //    }\r\n                //        DateTime dttime = dt.Value;\r\n                //    tcell.Value = GetSelectDataTimeAdd(dttime, DateType, (i + 1), DateLen);\r\n                //    continue;\r\n                //}\r\n\r\n                //decimal ? dvalue = Feng.Utils.ConvertHelper.ToDecimalNullable(scell.Value);\r\n                //if (dvalue.HasValue)\r\n                //{\r\n                //    if (hasSet)\r\n                //    {\r\n                //        if (System.Windows.Forms.Control.ModifierKeys == Keys.Shift)\r\n                //        {\r\n                //            SetSelectDecimalAddType(ref DateType, ref DateLen);\r\n                //        }\r\n                //    }\r\n                //        decimal value = dvalue.Value + (i + 1) * ADDVALUE;\r\n                //    tcell.Value = value;\r\n                //    continue;\r\n                //}\r\n                //tcell.Value = scell.Value;\r\n                //}\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public UpdataSelectRowsUp2(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        //if (System.Windows.Forms.Control.ModifierKeys == Keys.Control)\r\n        //{\r\n        this.UpdataSelectRows2UpAdd(cellbegin, cellend, target);\r\n        //}\r\n        //else\r\n        //{\r\n        //    UpdataSelectRows2UpCopy(cellbegin, cellend, target);\r\n        //}\r\n    }\r\n    public UpdataSelectRows2UpAdd(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        let minrow = cellend.Row.Index;\r\n        let maxrow = cellbegin.MaxRowIndex();\r\n        let targetrow = target.Row.Index;\r\n        let tcolumn = cellbegin.Column.Index;\r\n        let targetcount = maxrow - targetrow;\r\n        let scount = maxrow - minrow + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        let hasSet = false;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let trow = maxrow - i * scount - j - 1;\r\n                let srow = minrow - j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(srow, tcolumn);\r\n                this.PasteCell(scell, tcell);\r\n                let num = -1 * (i + 1) * this.ADDVALUE;\r\n                this.setUpdataCellValue(tcell, scell, num)\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    public UpdataSelectRows2UpCopy(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        let minrow = cellend.MaxRowIndex();\r\n        let maxrow = cellbegin.Row.Index;\r\n        let targetrow = target.Row.Index;\r\n        let tcolumn = cellbegin.Column.Index;\r\n        let targetcount = maxrow - targetrow;\r\n        let scount = maxrow - minrow + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let trow = minrow - i * scount - j - 1;\r\n                let srow = maxrow - j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(srow, tcolumn);\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                this.PasteCell(scell, tcell);\r\n            }\r\n        }\r\n    }\r\n\r\n    public UpdataSelectColumnsDown2(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        //if (System.Windows.Forms.Control.ModifierKeys == Keys.Control)\r\n        //{\r\n        this.UpdataSelectColumns2DownAdd(cellbegin, cellend, target);\r\n        //}\r\n        //else\r\n        //{\r\n        //    UpdataSelectColumns2DownCopy(cellbegin, cellend, target);\r\n        //}\r\n    }\r\n    public UpdataSelectColumns2DownAdd(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        let minrow = cellbegin.Column.Index;\r\n        let maxrow = cellend.MaxColumnIndex();\r\n        let targetrow = target.Column.Index;\r\n        let trow = cellbegin.Row.Index;\r\n        let targetcount = targetrow - maxrow;\r\n        let scount = maxrow - minrow + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        let hasSet = false;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let tcolumn = maxrow + i * scount + j + 1;\r\n                let srow = minrow + j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(trow, srow);\r\n                this.PasteCell(scell, tcell);\r\n                let num = (i + 1) * this.ADDVALUE;\r\n                this.setUpdataCellValue(tcell, scell, num)\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    public UpdataSelectColumns2DownCopy(cellbegin: DataExcelCell, cellend: DataExcelCell, target: any) {\r\n        let mincolumn = cellbegin.Column.Index;\r\n        let maxcolumn = cellend.MaxColumnIndex();\r\n        let targetcolumn = target.Column.Index;\r\n        let trow = cellbegin.Row.Index;\r\n        let targetcount = targetcolumn - maxcolumn;\r\n        let scount = maxcolumn - mincolumn + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let tcolumn = maxcolumn + i * scount + j + 1;\r\n                let srow = mincolumn + j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(trow, srow);\r\n\r\n                this.PasteCell(scell, tcell);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public UpdataSelectColumnsLeft2(cellbegin: DataExcelCell, cellend: any, target: any) {\r\n        //if (System.Windows.Forms.Control.ModifierKeys == Keys.Control)\r\n        //{\r\n        this.UpdataSelectColumns2UpAdd(cellbegin, cellend, target);\r\n        //}\r\n        //else\r\n        //{\r\n        //    UpdataSelectColumns2UpCopy(cellbegin, cellend, target);\r\n        //}\r\n    }\r\n    public UpdataSelectColumns2UpAdd(cellbegin: DataExcelCell, cellend: any, target: any) {\r\n        let minrow = cellend.Column.Index;\r\n        let maxrow = cellbegin.MaxColumnIndex();\r\n        let targetrow = target.Column.Index;\r\n        let trow = cellbegin.Row.Index;\r\n        let targetcount = maxrow - targetrow;\r\n        let scount = maxrow - minrow + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        let hasSet = false;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let tcolumn = maxrow - i * scount - j - 1;\r\n                let srow = minrow - j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(trow, srow);\r\n                this.PasteCell(scell, tcell);\r\n                let num = -1 * (i + 1) * this.ADDVALUE;\r\n                this.setUpdataCellValue(tcell, scell, num)\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n    private setUpdataCellValue(tcell: DataExcelCell, scell: DataExcelCell, value: number) {\r\n        let isnum = ConvertHelper.IsNumber(scell.Value);\r\n        if (tcell.ReadOnly == CheckState.Check) {\r\n            return;\r\n        }\r\n        if (isnum) {\r\n            let num = parseInt(scell.Value)\r\n            let tvalue = num + value;\r\n            tcell.Value = tvalue;\r\n            tcell.Text = tvalue.toString();\r\n        }\r\n        else {\r\n            tcell.Value = scell.Value;\r\n            tcell.Text = scell.Text;\r\n        }\r\n    }\r\n    public UpdataSelectColumns2UpCopy(cellbegin: DataExcelCell, cellend: any, target: any) {\r\n        let minrow = cellend.MaxColumnIndex;\r\n        let maxrow = cellbegin.Column.Index;\r\n        let targetrow = target.Column.Index;\r\n        let trow = cellbegin.Row.Index;\r\n        let targetcount = maxrow - targetrow;\r\n        let scount = maxrow - minrow + 1;\r\n        if (scount < 1)\r\n            return;\r\n        let count = targetcount / scount;\r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < scount; j++) {\r\n                let tcolumn = minrow - i * scount - j - 1;\r\n                let srow = maxrow - j;\r\n                if (tcolumn < 1 || trow < 1) {\r\n                    return;\r\n                }\r\n                let tcell = this.GetCellByIndex(trow, tcolumn);\r\n                let scell = this.GetCellByIndex(trow, srow);\r\n                this.PasteCell(scell, tcell);\r\n            }\r\n        }\r\n    }\r\n\r\n    private UpdateSelectAddRect() {\r\n        this.UpdataSelectAdd();\r\n    }\r\n\r\n    MoveFocusedCellToNextCell(nct: any, initedit: any) {\r\n        let cell = this.FocusedCell;\r\n        if (this.FocusedCell == null) {\r\n            cell = this.GetCellByIndex(1, 1);\r\n        }\r\n        if (cell == null)\r\n            return;\r\n        let rindex = cell.Row.Index;\r\n        let cindex = cell.Column.Index;\r\n        this.ClearSelect();\r\n        this.EndEdit();\r\n        if (this.FocusedCell != null) {\r\n            switch (nct) {\r\n                case NextType.Left:\r\n                    rindex = cell.Row.Index;\r\n                    cindex = cell.Column.Index;\r\n                    if (cindex > 1) {\r\n                        cindex = cindex - 1;\r\n                        cell = this.GetCellByIndex(rindex, cindex);\r\n                        if (cell.OwnMergeCell != null) {\r\n                            cell = cell.OwnMergeCell;\r\n                        }\r\n                    }\r\n                    break;\r\n                case NextType.Up:\r\n                    rindex = cell.Row.Index;\r\n                    cindex = cell.Column.Index;\r\n                    if (rindex > 1) {\r\n                        rindex = rindex - 1;\r\n                        cell = this.GetCellByIndex(rindex, cindex);\r\n                        if (cell.OwnMergeCell != null) {\r\n                            cell = cell.OwnMergeCell;\r\n                        }\r\n                    }\r\n                    break;\r\n                case NextType.Right:\r\n                    rindex = cell.Row.Index;\r\n                    cindex = cell.MaxColumnIndex();\r\n                    cindex = cindex + 1;\r\n                    cell = this.GetCellByIndex(rindex, cindex);\r\n                    if (cell.OwnMergeCell != null) {\r\n                        cell = cell.OwnMergeCell;\r\n                    }\r\n                    break;\r\n                case NextType.Down:\r\n                    rindex = cell.MaxRowIndex();\r\n                    cindex = cell.Column.Index;\r\n                    rindex = rindex + 1;\r\n                    cell = this.GetCellByIndex(rindex, cindex);\r\n                    if (cell.OwnMergeCell != null) {\r\n                        cell = cell.OwnMergeCell;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.ShowAndFocusedCell(cell);\r\n            //this.FocusedCell = cell;\r\n            if (initedit) {\r\n                this.FocusedCell.InitEdit(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    MoveFocusedCellToLeftCell() {\r\n        this.MoveFocusedCellToNextCell(NextType.Left, false);\r\n    }\r\n    MoveFocusedCellToUpCell() {\r\n        this.MoveFocusedCellToNextCell(NextType.Up, false);\r\n    }\r\n    MoveFocusedCellToRightCell() {\r\n        this.MoveFocusedCellToNextCell(NextType.Right, false);\r\n    }\r\n    MoveFocusedCellToDownCell() {\r\n        this.MoveFocusedCellToNextCell(NextType.Down, false);\r\n    }\r\n\r\n    ShowAndFocusedCell(cell: any) {\r\n        if (cell == this.FocusedCell)\r\n            return;\r\n        let precell = this.FocusedCell;\r\n        this.CurrentEvent = cell;\r\n        this.FocusedCell = cell;\r\n        this.SetSelectCells(cell);\r\n        this.ShowCell(precell, this.FocusedCell);\r\n        this.emit(Events.FocusedCellChanged, this, this.FocusedCell);\r\n    }\r\n    ShowCell(precell: any, nextcell: any) {\r\n        if (precell == null) {\r\n            precell = this.GetCellByIndex(1, 1);\r\n        }\r\n        if (nextcell == null) {\r\n            return;\r\n        }\r\n        if (precell == nextcell) {\r\n            return;\r\n        }\r\n        if (precell.Row.Index == nextcell.Row.Index) {\r\n            if ((precell.Column.Index - nextcell.Column.Index) == 1) {\r\n                if (this.FirstDisplayedColumnIndex > nextcell.Column.Index) {\r\n                    this.SetFirstDisplayColumn(this.FirstDisplayedColumnIndex - 1);\r\n                }\r\n            }\r\n            else if ((precell.Column.Index - nextcell.Column.Index) == -1) {\r\n                if (this.VisibleColumns != null) {\r\n                    if (this.VisibleColumns.Count > 0) {\r\n                        if ((this.VisibleColumns[this.VisibleColumns.Count - 1].Index) < nextcell.Column.Index) {\r\n                            this.SetFirstDisplayColumn(this.FirstDisplayedColumnIndex + 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        else {\r\n            if ((precell.Row.Index - nextcell.Row.Index) == 1) {\r\n                if (this.FirstDisplayedRowIndex > nextcell.Row.Index) {\r\n                    this.SetFirstDisplayRow(this.FirstDisplayedRowIndex - 1);\r\n                }\r\n            }\r\n            else if ((precell.Row.Index - nextcell.Row.Index) == -1) {\r\n                if (this.VisibleRows != null) {\r\n                    if (this.VisibleRows.Count > 0) {\r\n                        if ((this.VisibleRows[this.VisibleRows.Count - 1].Index) < nextcell.Row.Index) {\r\n                            this.SetFirstDisplayRow(this.FirstDisplayedRowIndex + 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    CellMoveUp(cells: SelectCellCollection, step: number) {\r\n        if (cells != null) {\r\n            let minrow = cells.MinRow();\r\n            let maxrow = cells.MaxRow();\r\n            let mincolumn = cells.MinColumn();\r\n            let maxcolumn = cells.MaxColumn();\r\n\r\n            for (let i = minrow; i <= maxrow; i++) {\r\n                for (let j = mincolumn; j <= maxcolumn; j++) {\r\n                    if (i < 2) {\r\n                        return;\r\n                    }\r\n                    let scell = this.GetCellByIndex(i - step, j);\r\n                    let tcell = this.GetCellByIndex(i, j);\r\n                    if (tcell.ReadOnly == CheckState.Check) {\r\n                        continue;\r\n                    }\r\n                    this.Swap(scell, tcell);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CellMoveDown(cells: SelectCellCollection, step: number) {\r\n        if (cells != null) {\r\n            let minrow = cells.MinRow();\r\n            let maxrow = cells.MaxRow();\r\n            let mincolumn = cells.MinColumn();\r\n            let maxcolumn = cells.MaxColumn();\r\n\r\n            for (let i = maxrow; i >= minrow; i--) {\r\n                for (let j = mincolumn; j <= maxcolumn; j++) {\r\n                    let scell = this.GetCellByIndex(i + step, j);\r\n                    let tcell = this.GetCellByIndex(i, j);\r\n                    if (tcell.ReadOnly == CheckState.Check) {\r\n                        continue;\r\n                    }\r\n                    this.Swap(scell, tcell);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CellMoveLeft(cells: SelectCellCollection, step: number) {\r\n        if (cells != null) {\r\n            let minrow = cells.MinRow();\r\n            let maxrow = cells.MaxRow();\r\n            let mincolumn = cells.MinColumn();\r\n            let maxcolumn = cells.MaxColumn();\r\n\r\n            for (let i = minrow; i <= maxrow; i++) {\r\n                for (let j = mincolumn; j <= maxcolumn; j++) {\r\n                    if (j < 2) {\r\n                        return;\r\n                    }\r\n                    let scell = this.GetCellByIndex(i, j - step);\r\n                    let tcell = this.GetCellByIndex(i, j);\r\n                    if (tcell.ReadOnly == CheckState.Check) {\r\n                        continue;\r\n                    }\r\n                    this.Swap(scell, tcell);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    CellMoveRight(cells: SelectCellCollection, step: number) {\r\n        if (cells != null) {\r\n            let minrow = cells.MinRow();\r\n            let maxrow = cells.MaxRow();\r\n            let mincolumn = cells.MinColumn();\r\n            let maxcolumn = cells.MaxColumn();\r\n\r\n            for (let i = minrow; i <= maxrow; i++) {\r\n                for (let j = maxcolumn; j >= mincolumn; j--) {\r\n\r\n                    let scell = this.GetCellByIndex(i, j + step);\r\n                    let tcell = this.GetCellByIndex(i, j);\r\n                    if (tcell.ReadOnly == CheckState.Check) {\r\n                        continue;\r\n                    }\r\n                    this.Swap(scell, tcell);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Swap(cell1: DataExcelCell, cell2: DataExcelCell) {\r\n        let column1 = cell1.Column;\r\n        let column2 = cell2.Column;\r\n\r\n\r\n        let row1 = cell1.Row;\r\n        let row2 = cell2.Row;\r\n\r\n        cell1.Row.Cells.Remove(cell1.Column);\r\n        cell2.Row.Cells.Remove(cell2.Column);\r\n\r\n\r\n        cell1.Column = column2;\r\n        cell2.Column = column1;\r\n\r\n\r\n        cell1.Row = row2;\r\n        cell2.Row = row1;\r\n\r\n        row1.Cells.Add(cell2);\r\n        row2.Cells.Add(cell1);\r\n    }\r\n\r\n    //zoom\r\n    SetZoom(zoom: Zoom) {\r\n        this.Zoom = zoom;\r\n        this.ClearSelect();\r\n        this.DefaultColumnWidth = this.DefaultColumnWidth * zoom.Width;\r\n        this.DefaultRowHeight = this.DefaultRowHeight * zoom.Height;\r\n        this.Rows.forEach((value: DataExcelRow) => {\r\n            value.SetZoom(zoom);\r\n        });\r\n        this.Columns.forEach((value: DataExcelColumn) => {\r\n            value.SetZoom(zoom);\r\n        });\r\n\r\n        this.Charts.forEach((value: Chart) => {\r\n            value.SetZoom(zoom);\r\n        });\r\n\r\n        this.Primitives.forEach((value: Primitive) => {\r\n            value.SetZoom(zoom);\r\n        });\r\n    }\r\n\r\n    SetZoomNormal() {\r\n        if (this.Zoom != null) {\r\n            let zoomwidth = 72 / this.DefaultColumnWidth;\r\n            let zooheight = 20 / this.DefaultRowHeight;\r\n            let zoom = {\r\n                Type: this.Zoom.Type,\r\n                Width: zoomwidth,\r\n                Height: zooheight,\r\n            };\r\n            this.SetZoom(zoom);\r\n        }\r\n    }\r\n} ","﻿import { GridLineStyle } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { DataExcelDefaultValue } from \"../Base/MouseButtons\";\r\nimport { StringAlignment } from \"../Base/StringAlignment\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcelRow } from \"../export\";\r\nimport { DataExcel } from \"./DataExcel\";\r\nimport { DataExcelCell } from \"./DataExcelCell\";\r\nimport { DataExcelColumn } from \"./DataExcelColumn\";\r\n\r\nexport class DataExcelMergeCell extends DataExcelCell {\r\n\r\n    public get Row(): DataExcelRow {\r\n        return this._begincell.Row;\r\n    }\r\n    public set Row(cell: DataExcelRow) {\r\n        this.Grid = cell.Grid;\r\n        this._begincell.Row = cell;\r\n    }\r\n    public get Column(): DataExcelColumn {\r\n        return this._begincell.Column;\r\n    }\r\n    public set Column(cell: DataExcelColumn) {\r\n        this._begincell.Column = cell;\r\n    }\r\n\r\n    public Selected: boolean;\r\n    private _Released: boolean = false;\r\n    public get Released(): boolean {\r\n        return this._Released;\r\n    }\r\n    public set Released(value: boolean) {\r\n        this._Released = value;\r\n    }\r\n    public Grid: DataExcel;\r\n    private _begincell: DataExcelCell;\r\n    public get BeginCell(): DataExcelCell {\r\n        return this._begincell;\r\n    }\r\n    public set BeginCell(cell: DataExcelCell) {\r\n        this.Grid = cell.Grid;\r\n        this._begincell = cell;\r\n    }\r\n\r\n    private _endcell: DataExcelCell;\r\n    public get EndCell(): DataExcelCell {\r\n        return this._endcell;\r\n    }\r\n    public set EndCell(cell: DataExcelCell) {\r\n        this._endcell = cell;\r\n        let firstcell = this._begincell;\r\n        let endcell = this._endcell;\r\n        if (firstcell == null || endcell == null)\r\n            return;\r\n        let rmin = Math.min(firstcell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(firstcell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(firstcell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(firstcell.Column.Index, endcell.Column.Index);\r\n        this._begincell = firstcell.Grid.GetCellByIndex(rmin, cmin);\r\n        this._begincell.VerticalAlignment = StringAlignment.Center;\r\n        this._begincell.HorizontalAlignment = StringAlignment.Center;\r\n        this._endcell = firstcell.Grid.GetCellByIndex(rmax, cmax);\r\n        this.Refresh();\r\n        this.ReSetCellParent();\r\n    }\r\n\r\n\r\n    public MaxRowIndex(): number {\r\n        return this.EndCell.Row.Index;\r\n    }\r\n    public MaxColumnIndex(): number {\r\n        return this.EndCell.Column.Index;\r\n    }\r\n\r\n    public get Visible(): boolean {\r\n        return this._begincell.Visible;\r\n    }\r\n    public set Visible(value: boolean) {\r\n        this._begincell.Visible = value;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this._begincell.Text;\r\n    }\r\n    public set Text(value: string) {\r\n        this._begincell.Text = value;\r\n    }\r\n\r\n    public get Value(): object {\r\n        return this._begincell.Value;\r\n    }\r\n    public set Value(value: object) {\r\n        this._begincell.Value = value;\r\n    }\r\n\r\n    public get AutoMultiline(): boolean {\r\n        return this._begincell.AutoMultiline;\r\n    }\r\n    public set AutoMultiline(value: boolean) {\r\n        this._begincell.AutoMultiline = value;\r\n    }\r\n\r\n    public get LeftLineStyle(): any {\r\n        return this.BeginCell.LeftLineStyle;\r\n    }\r\n    public set LeftLineStyle(value: any) {\r\n        this.BeginCell.LeftLineStyle = value;\r\n    }\r\n    public get TopLineStyle(): any {\r\n        return this.BeginCell.TopLineStyle;\r\n    }\r\n    public set TopLineStyle(value: any) {\r\n        this.BeginCell.TopLineStyle = value;\r\n    }\r\n    public get RightLineStyle(): any {\r\n        return this.BeginCell.RightLineStyle;\r\n    }\r\n    public set RightLineStyle(value: any) {\r\n        this.BeginCell.RightLineStyle = value;\r\n    }\r\n    public get BottomLineStyle(): any {\r\n        return this.BeginCell.BottomLineStyle;\r\n    }\r\n    public set BottomLineStyle(value: any) {\r\n        this.BeginCell.BottomLineStyle = value;\r\n    }\r\n\r\n    public get VerticalAlignment(): StringAlignment {\r\n        return this._begincell.VerticalAlignment;\r\n    }\r\n    public set VerticalAlignment(value: StringAlignment) {\r\n        this._begincell.VerticalAlignment = value;\r\n    }\r\n\r\n    public get HorizontalAlignment(): StringAlignment {\r\n        return this._begincell.HorizontalAlignment;\r\n    }\r\n    public set HorizontalAlignment(value: StringAlignment) {\r\n        this._begincell.HorizontalAlignment = value;\r\n    }\r\n\r\n    public GetData() {\r\n        let data = {\r\n            begincellrowindex: this.BeginCell.Row.Index,\r\n            begincellcolumnindex: this.BeginCell.Column.Index,\r\n            endcellrowindex: this.EndCell.Row.Index,\r\n            endcellcolumnindex: this.EndCell.Column.Index,\r\n        };\r\n        return data;\r\n    }\r\n    public SetData(grid: DataExcel, data: any) {\r\n        let begincell = grid.GetCellByIndex(data.begincellrowindex, data.begincellcolumnindex);\r\n        let endcell = grid.GetCellByIndex(data.endcellrowindex, data.endcellcolumnindex);\r\n        this.BeginCell = begincell;\r\n        this.EndCell = endcell;\r\n    }\r\n\r\n    Refresh() {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        this.Top = begincell.Top;\r\n        this.Left = begincell.Left;\r\n        let width = 0;\r\n        for (let i = begincell.Column.Index; i <= endcell.Column.Index; i++) {\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column != null) {\r\n                if (column.Visible) {\r\n                    width = column.Width + width;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.Width = width;\r\n        let heigth = 0;\r\n        for (let i = begincell.Row.Index; i <= endcell.Row.Index; i++) {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row != null) {\r\n                if (row.Visible) {\r\n                    heigth = row.Height + heigth;\r\n                }\r\n            }\r\n        }\r\n        this.Height = heigth;\r\n\r\n        let rmin = begincell.Row.Index;\r\n        let cmin = begincell.Column.Index;\r\n        let rmax = endcell.Row.Index;\r\n        let cmax = endcell.Column.Index;\r\n\r\n        rmin = Math.max(rmin, this.Grid.FirstDisplayedRowIndex);\r\n        cmin = Math.max(cmin, this.Grid.FirstDisplayedColumnIndex);\r\n        rmax = Math.min(rmax, this.Grid.EndDisplayedRowIndex);\r\n        cmax = Math.min(cmax, this.Grid.EndDisplayedColumnIndex);\r\n\r\n        this.VisableTop = this.Top;\r\n        this.VisableLeft = this.Left;\r\n        this.freshVisableSize(rmin, cmin, rmax, cmax);\r\n        this.freshVisablePointTop(begincell.Row.Index, this.Grid.FirstDisplayedRowIndex);\r\n        this.freshVisablePointLeft(begincell.Column.Index, this.Grid.FirstDisplayedColumnIndex);\r\n\r\n    }\r\n    private freshVisablePointTop(rindex: any, findex: any) {\r\n        if (rindex >= findex) {\r\n            let row = this.Grid.Rows.Get(rindex);\r\n            if (row == null) {\r\n                this.VisableTop = DataExcelDefaultValue.dafaultRowHeight;\r\n                this.Top = DataExcelDefaultValue.dafaultRowHeight;\r\n            }\r\n            else {\r\n                this.VisableTop = row.Top;\r\n                this.Top = row.Top;\r\n            }\r\n        }\r\n        else {\r\n            let row = this.Grid.Rows.Get(findex);\r\n            let top = 0;\r\n            if (row == null) {\r\n                this.VisableTop = DataExcelDefaultValue.dafaultRowHeight;\r\n                top = DataExcelDefaultValue.dafaultRowHeight;\r\n            }\r\n            else {\r\n                this.VisableTop = row.Top;\r\n                top = row.Top;\r\n            }\r\n            for (let i = findex - 1; i >= rindex; i--) {\r\n                row = this.Grid.Rows.Get(i);\r\n                if (row != null) {\r\n                    if (row.Visible) {\r\n                        top = top - row.Height;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Top = top;\r\n        }\r\n    }\r\n    private freshVisablePointLeft(cindex: any, findex: any) {\r\n        if (cindex >= findex) {\r\n            let column = this.Grid.Columns.Get(cindex);\r\n            if (column == null) {\r\n                this.VisableLeft = DataExcelDefaultValue.defaultColumnWidth;\r\n                this.Left = DataExcelDefaultValue.defaultColumnWidth;\r\n            }\r\n            else {\r\n                this.VisableLeft = column.Left;\r\n                this.Left = column.Left;\r\n            }\r\n        }\r\n        else {\r\n            let column = this.Grid.Columns.Get(findex);\r\n            let left = 0;\r\n            if (column == null) {\r\n                this.VisableLeft = DataExcelDefaultValue.defaultColumnWidth;\r\n                left = DataExcelDefaultValue.defaultColumnWidth;\r\n            }\r\n            else {\r\n                this.VisableLeft = column.Left;\r\n                left = column.Left;\r\n            }\r\n            for (let i = findex - 1; i >= cindex; i--) {\r\n                column = this.Grid.Columns.Get(i);\r\n                if (column != null) {\r\n                    if (column.Visible) {\r\n                        left = left - column.Width;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Left = left;\r\n        }\r\n    }\r\n    private freshVisableSize(rmin: any, cmin: any, rmax: any, cmax: any) {\r\n        let width = 0;\r\n        for (let i = cmin; i <= cmax; i++) {\r\n            let column = this.Grid.Columns.Get(i);\r\n            if (column != null) {\r\n                if (column.Visible) {\r\n                    width = column.Width + width;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.VisableWidth = width;\r\n\r\n        let heigth = 0;\r\n        for (let i = rmin; i <= rmax; i++) {\r\n            let row = this.Grid.Rows.Get(i);\r\n            if (row != null) {\r\n                if (row.Visible) {\r\n                    heigth = row.Height + heigth;\r\n                }\r\n            }\r\n        }\r\n        this.VisableHeight = heigth;\r\n    }\r\n    public get OwnEditControl() {\r\n        return this.BeginCell.OwnEditControl;\r\n    }\r\n    public set OwnEditControl(value) {\r\n        this.BeginCell.OwnEditControl = value;\r\n    }\r\n    private _left: number = 0;\r\n    private _top: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    public get Left() {\r\n        return this._left;\r\n    }\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public get Width() {\r\n        return this._width;\r\n    }\r\n    public get Height() {\r\n        return this._height;\r\n    }\r\n    public set Left(value: number) {\r\n        this._left = value;\r\n    }\r\n    public set Top(value: number) {\r\n        this._top = value;\r\n    }\r\n    public set Width(value: number) {\r\n        this._width = value;\r\n    }\r\n    public set Height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    private _VisableWidth: number = 0;\r\n    public get VisableWidth(): number {\r\n        return this._VisableWidth;\r\n    }\r\n    public set VisableWidth(value: number) {\r\n        this._VisableWidth = value;\r\n    }\r\n    private _VisableHeight: number = 0;\r\n    public get VisableHeight(): number {\r\n        return this._VisableHeight;\r\n    }\r\n    public set VisableHeight(value: number) {\r\n        this._VisableHeight = value;\r\n    }\r\n    private _VisableLeft: number = 0;\r\n    public get VisableLeft(): number {\r\n        return this._VisableLeft;\r\n    }\r\n    public set VisableLeft(value: number) {\r\n        this._VisableLeft = value;\r\n    }\r\n    private _VisableTop: number = 0;\r\n    public get VisableTop(): number {\r\n        return this._VisableTop;\r\n    }\r\n    public set VisableTop(value: number) {\r\n        this._VisableTop = value;\r\n    }\r\n\r\n    public get Style(): any {\r\n        return this.BeginCell.Style;\r\n    }\r\n\r\n    public set Style(value: any) {\r\n        this.BeginCell.Style = value;\r\n    }\r\n    public get Font(): FontFace {\r\n        return this.BeginCell.Font;\r\n    }\r\n    public set Font(value: FontFace) {\r\n        this.BeginCell.Font = value;\r\n    }\r\n    public get ForeColor(): any {\r\n        return this.BeginCell.ForeColor;\r\n\r\n    }\r\n    public set ForeColor(value: any) {\r\n        this.BeginCell.ForeColor = value;\r\n    }\r\n    public get BackColor(): any {\r\n        return this.BeginCell.BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this.BeginCell.BackColor = value;\r\n    }\r\n\r\n    public get Format(): string {\r\n        return this.BeginCell.Format;\r\n    }\r\n    public set Format(value: string) {\r\n        this.BeginCell.Format = value;\r\n    }\r\n\r\n    public get FormatType(): string {\r\n        return this.BeginCell.FormatType;\r\n    }\r\n    public set FormatType(value: string) {\r\n        this.BeginCell.FormatType = value;\r\n    }\r\n\r\n    public get BackImage(): string {\r\n        return this.BeginCell.BackImage;\r\n    }\r\n    public set BackImage(value: string) {\r\n        this.BeginCell.BackImage = value;\r\n    }\r\n    public get BackImageImageLayout(): number {\r\n        return this.BeginCell.BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number) {\r\n        this.BeginCell.BackImageImageLayout = value;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private ondrawtimes: number = 0;\r\n    OnDraw(sender: any, g: Graphics) {\r\n        if (this.ondrawtimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.ondrawtimes = g.drawTimes;\r\n        if (!this.Visible)\r\n            return;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (this.OwnEditControl != null) {\r\n            let res = this.OwnEditControl.OnDraw(sender, g);\r\n            if (res)\r\n                return;\r\n        }\r\n        //g.FillRect(this.ForeColor, this.Left, this.Top, this.Column.Width, this.Row.Height);\r\n        var text = \"\";// this.Row.Index + \"\" + this.Column.Index;\r\n        if (this.Text != null) {\r\n            text = this.Text;\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.Format)) {\r\n            text = ConvertHelper.GetFromatString(this.Value, this.Format, this.FormatType);\r\n        }\r\n        let style = {} as any;\r\n\r\n        style = this.Style;\r\n        //text = this.ondrawtimes + \":\" + text;\r\n        style.text = text;\r\n        style.font = this.Font;\r\n        style.fill = this.ForeColor;\r\n        style.overflow = '';\r\n        if (this.AutoMultiline) {\r\n            style.overflow = 'break';\r\n        }\r\n\r\n        if (this.AutoMultiline) {\r\n            style.overflow = \"break\";\r\n        }\r\n        else {\r\n            style.overflow = \"\";\r\n        }\r\n        g.DrawTextClipRectStyle2(text, this.Left, this.Top, this.Width, this.Height, this.VisableLeft, this.VisableTop, this.VisableWidth, this.VisableHeight, style);\r\n    }\r\n\r\n    private ondrawbacktimes: number = 0;\r\n    OnDrawBack(sender: any, g: Graphics) {\r\n        if (this.ondrawbacktimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.ondrawbacktimes = g.drawTimes;\r\n        if (!this.Visible)\r\n            return;\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n        if (this.OwnEditControl != null) {\r\n            let res = this.OwnEditControl.OnDrawBack(sender, g);\r\n            if (res)\r\n                return;\r\n        }\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, this.VisableLeft, this.VisableTop, this.VisableWidth, this.VisableHeight);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n    }\r\n    private ondrawbordertimes: number = 0;\r\n    OnDrawBorder(sender: any, g: Graphics) {\r\n        if (this.ondrawbordertimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.Debug(this);\r\n        this.ondrawbordertimes = g.drawTimes;\r\n        let left = this.VisableLeft;\r\n        let right = this.VisableLeft + this.VisableWidth;\r\n        let top = this.VisableTop;\r\n        let bottom = this.VisableTop + this.VisableHeight;\r\n        if (this.LeftLineStyle != null) {\r\n            g.DrawLineStyle(this.LeftLineStyle, left, top, left, bottom);\r\n        }\r\n\r\n        if (this.TopLineStyle != null) {\r\n            g.DrawLineStyle(this.TopLineStyle, left, top, right, top);\r\n        }\r\n\r\n        if (this.RightLineStyle != null) {\r\n            g.DrawLineStyle(this.RightLineStyle, right, top, right, bottom);\r\n        }\r\n\r\n        if (this.BottomLineStyle != null) {\r\n            g.DrawLineStyle(this.BottomLineStyle, left, bottom, right, bottom);\r\n        }\r\n\r\n    }\r\n    private ondrawgridlinetimes: number = 0;\r\n    OnDrawGridLine(sender: any, g: Graphics) {\r\n        if (this.ondrawgridlinetimes >= g.drawTimes) {\r\n            return;\r\n        }\r\n        this.Debug(this);\r\n        this.ondrawgridlinetimes = g.drawTimes;\r\n        let left = this.VisableLeft;\r\n        let right = this.VisableLeft + this.VisableWidth;\r\n        let top = this.VisableTop;\r\n        let bottom = this.VisableTop + this.VisableHeight;\r\n\r\n        if (this.RightLineStyle == null) {\r\n            g.DrawLine(GridLineStyle.stroke, right, top, right, bottom);\r\n        }\r\n\r\n        if (this.BottomLineStyle == null) {\r\n            g.DrawLine(GridLineStyle.stroke, left, bottom, right, bottom);\r\n        }\r\n\r\n    }\r\n\r\n    OnInput(e: any): void {\r\n        let cell = this[\"cell\"] as DataExcelCell;\r\n        cell.Text = this[\"value\"];\r\n        cell.Grid.graphic.Clear();\r\n        cell.Grid.RePaint(e);\r\n    }\r\n    OnChange(e: Event) {\r\n        //var cell = this[\"cell\"];\r\n        //cell.Text = this[\"value\"];\r\n        //cell.Grid.Context.clearRect(0, 0, cell.Grid.Control.width, cell.Grid.Control.height);\r\n        //cell.Grid.RePaint();\r\n    }\r\n\r\n    ReSetCellParent() {\r\n        let begincell = this._begincell;\r\n        let endcell = this._endcell;\r\n        let rmin = Math.min(begincell.Row.Index, endcell.Row.Index);\r\n        let cmin = Math.min(begincell.Column.Index, endcell.Column.Index);\r\n        let rmax = Math.max(begincell.Row.Index, endcell.Row.Index);\r\n        let cmax = Math.max(begincell.Column.Index, endcell.Column.Index);\r\n        if (this._begincell == null) {\r\n            return;\r\n        }\r\n        if (this._endcell == null) {\r\n            return;\r\n        }\r\n        for (let i = rmin; i <= rmax; i++) {\r\n            for (let j = cmin; j <= cmax; j++) {\r\n                let cell = this.Grid.GetCellByIndex(i, j);\r\n                if (cell !== null) {\r\n                    cell.OwnMergeCell = this;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ConvertHelper } from \"../../Base/ConvertHelper\";\r\nimport { Cursors } from \"../../Base/Cursors\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { ImageLayout } from \"../../Base/ImageLayout\";\r\nimport { Point, Rect, Size, Zoom } from \"../../Base/Point\";\r\nimport { IViewEvent, IZoom } from \"../../Control/IViewEvent\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { StateMode } from \"../../View/MoveView\";\r\nimport { SizeChangMode } from \"../../View/ReSizeView\";\r\nimport { Primitive } from \"../Primitive\";\r\n\r\nexport class Displayable implements IViewEvent, IZoom\r\n{\r\n    private _Grid: DataExcel;\r\n    public get Grid(): DataExcel\r\n    {\r\n        return this._Grid;\r\n    }\r\n    public set Grid(value: DataExcel)\r\n    {\r\n        this._Grid = value;\r\n    }\r\n    private _Primitive: Primitive;\r\n    public get Primitive(): Primitive\r\n    {\r\n        return this._Primitive;\r\n    }\r\n    public set Primitive(value: Primitive)\r\n    {\r\n        this._Primitive = value;\r\n    }\r\n\r\n    public get TypeName(): string\r\n    {\r\n        return \"\";\r\n    }\r\n    private _Name: string;\r\n    public get Name(): string\r\n    {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string)\r\n    {\r\n        this._Name = value;\r\n    }\r\n\r\n    protected _height = 0;\r\n    public get Height()\r\n    {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value)\r\n    {\r\n        this._height = value;\r\n    }\r\n    public get Right()\r\n    {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom()\r\n    {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left()\r\n    {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value)\r\n    {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n    public get Top()\r\n    {\r\n        return this._top;\r\n    }\r\n    public set Top(value)\r\n    {\r\n        this._top = value;\r\n    }\r\n    protected _width = 0;\r\n\r\n    public get Width()\r\n    {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value)\r\n    {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    public get Bound(): Rect\r\n    {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any\r\n    {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any)\r\n    {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string\r\n    {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string)\r\n    {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number\r\n    {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number)\r\n    {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point\r\n    {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point)\r\n    {\r\n        this._MouseDownPoint = value;\r\n    }\r\n\r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size\r\n    {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size)\r\n    {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode\r\n    {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode)\r\n    {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: number = 6;\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode\r\n    {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode)\r\n    {\r\n        this._StateMode_1 = value;\r\n    }\r\n\r\n    private _Selected: boolean;\r\n    public get Selected(): boolean {\r\n        return this._Selected;\r\n    }\r\n    public set Selected(value: boolean) {\r\n        this._Selected = value;\r\n    }\r\n\r\n\r\n    private _DesignMode: boolean = false;\r\n    public get DesignMode(): boolean\r\n    {\r\n        return this._DesignMode;\r\n    }\r\n    public set DesignMode(value: boolean)\r\n    {\r\n        this._DesignMode = value;\r\n    }\r\n\r\n    public get TopLeft(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect\r\n    {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect\r\n    {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect\r\n    {\r\n        let rectf = new Rect(\r\n            this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect\r\n    {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect\r\n    {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public GetData()\r\n    {\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n    }\r\n    constructor()\r\n    {\r\n    }\r\n    Refresh()\r\n    {\r\n        this.Grid.RePaint();\r\n    }\r\n    OnDraw(sender:any, g:Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    DoDraw(sender:any, g:Graphics): boolean\r\n    {\r\n        return false;\r\n    }\r\n    DoDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n\r\n        if (this.BackColor != null)\r\n        {\r\n            g.FillRect(this.BackColor, this.Left, this.Top, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage))\r\n        {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n        if (this.Selected)\r\n        {\r\n            g.FillRectangleColor(\"gray\", this.TopLeft, Cursors.nw_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomRight, Cursors.nw_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.TopRight, Cursors.ne_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomLeft, Cursors.ne_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidRight, Cursors.e_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidLeft, Cursors.e_resize);\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidTop, Cursors.n_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidBottom, Cursors.n_resize);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    OnMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    OnMouseUp(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender:any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender:any, e:KeyboardEvent, ve:EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender:any, e: TouchEvent, ve: EventView): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    Clone()\r\n    {\r\n\r\n    }\r\n    DoMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n\r\n        if (this.MouseDownSizeChanged(ve))\r\n        {\r\n            this.StateMode = StateMode.SIZE;\r\n            return true;\r\n        }\r\n\r\n        if (this.MouseDownMove(ve))\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    DoMouseUp(sender:any, e:MouseEvent, ve:EventView): boolean\r\n    {\r\n\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    DoMouseMove(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.StateMode == StateMode.SIZE)\r\n        {\r\n            this.ChangedSize(ve);\r\n            this.Grid.RePaint();\r\n        }\r\n\r\n        if (this.StateMode == StateMode.MOVE)\r\n        {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            let ptorg = new Point(this.Left, this.Top);\r\n            this.Left = this.MouseDownSize.Width + x;\r\n            this.Top = this.MouseDownSize.Height + y;\r\n            let pttar = new Point(this.Left, this.Top);\r\n            this.LocationChanged(ptorg, pttar);\r\n            this.Grid.RePaint();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    MouseDownSizeChanged(ve: EventView)\r\n    {\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        this.MouseDownPoint = pt;\r\n        this.MouseDownSize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt))\r\n        {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    MouseDownMove(ve: EventView): boolean\r\n    {\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (this.Bound.Contains(pt))\r\n        {\r\n            this.MouseDownPoint = pt;\r\n            this.MouseDownSize = new Size(this.Left, this.Top);\r\n            this.StateMode = StateMode.MOVE;\r\n            this.Grid.ClearSelect();\r\n            this.Selected = true;\r\n            this.Grid.RePaint();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ChangedSize(ve: EventView)\r\n    {\r\n        let location = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n        let ptorg = new Point(this.Left, this.Top);\r\n        let szieorg = new Size(this.Width, this.Height);\r\n        switch (this.SizeChangMode)\r\n        {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                let w1 = this.MouseDownSize.Width - sf.Width;\r\n                let h1 = this.MouseDownSize.Height - sf.Height;\r\n                if (w1 > 10 && h1 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width - sf.Width;\r\n                    this.Height = this.MouseDownSize.Height - sf.Height;\r\n                    this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                    this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                let w2 = this.MouseDownSize.Width + sf.Width;\r\n                let h2 = this.MouseDownSize.Height - sf.Height;\r\n                if (w2 > 10 && h2 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width + sf.Width;\r\n                    this.Height = this.MouseDownSize.Height - sf.Height;\r\n                    this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                let w3 = this.MouseDownSize.Width - sf.Width;\r\n                if (w3 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width - sf.Width;\r\n                    this.Left = this.MouseDownPoint.X + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                let w4 = this.MouseDownSize.Width + sf.Width;\r\n                if (w4 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                let w5 = this.MouseDownSize.Width - sf.Width;\r\n                let h5 = this.MouseDownSize.Height + sf.Height;\r\n                if (w5 > 10 && h5 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width - sf.Width;\r\n                    this.Height = this.MouseDownSize.Height + sf.Height;\r\n                    this.Left = this.MouseDownPoint.X + sf.Width;\r\n                }\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n                let w6 = this.MouseDownSize.Width + sf.Width;\r\n                let h6 = this.MouseDownSize.Height + sf.Height;\r\n                if (w6 > 10 && h6 > 10)\r\n                {\r\n                    this.Width = this.MouseDownSize.Width + sf.Width;\r\n                    this.Height = this.MouseDownSize.Height + sf.Height;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                let h7 = this.MouseDownSize.Height - sf.Height;\r\n                if (h7 > 10)\r\n                {\r\n                    this.Height = this.MouseDownSize.Height - sf.Height;\r\n                    this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                }\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                let h8 = this.MouseDownSize.Height + sf.Height;\r\n                if (h8 > 10)\r\n                {\r\n                    this.Height = this.MouseDownSize.Height + sf.Height;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let pttar = new Point(this.Left, this.Top);\r\n        this.LocationChanged(ptorg, pttar);\r\n        let szietar = new Size(this.Width, this.Height);\r\n        this.SizeChanged(szieorg, szietar);\r\n    }\r\n    //OnTimerInterval(): boolean\r\n    //{\r\n    //    this.Primitive.CloseTime();\r\n    //    return false;\r\n    //}\r\n    LocationChanged(ptorg: Point, pttar: Point)\r\n    {\r\n\r\n    }\r\n    SizeChanged(sizeorg: Size, sizetar: Size)\r\n    {\r\n\r\n    }\r\n    LocationOffset(x:any,y:any)\r\n    {\r\n        //let ptorg = new Point(this.Left, this.Top);\r\n        //this.Left = this.Left + x;\r\n        //this.Top = this.Top + y;\r\n        //let pttar = new Point(this.Left, this.Top);\r\n        //this.LocationChanged(ptorg, pttar);\r\n    }\r\n    SizeOffset(x:any, y:any)\r\n    {\r\n\r\n    }\r\n    SetZoom(zoom: Zoom): boolean\r\n    { \r\n        return false;\r\n    }\r\n    GetZoom(): Zoom\r\n    {\r\n        return null;\r\n    }\r\n\r\n\r\n}\r\n","import { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\n\r\nexport class DisplayableCircle extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.circ;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: { fill: '#33AECC', lineWidth: 5 },\r\n                shape: { r: 30, cx: 200, cy: 200 },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { fill: 'white' }, animate:\r\n                        { interval: 6000, value: { fill: '#33AECC' } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { r: 60 }, animate:\r\n                        { interval: 6000, value: { r: 30 } }\r\n                }]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n\r\n            this.DSC.style.option.shape.cx = this.Left + this.Width / 2;\r\n            this.DSC.style.option.shape.cy = this.Top + this.Width / 2;\r\n            this.DSC.style.option.shape.r = Math.abs(this.Width / 2);\r\n\r\n            g.DrawPrimitiveCircle(this.DSC.style);\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableCircle OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","\r\nimport { List } from \"../../Base/ArrayList\";\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { MouseButtons } from \"../../Base/MouseButtons\";\r\nimport { Point, Size, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableLine extends Displayable {\r\n    public Points: List<Point>;\r\n    private lastpoint: Point | null = null;\r\n    //private lasttime: Date;\r\n\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.line;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n            points: [] as any[],\r\n        };\r\n        let points: any[] = [];\r\n        if (this.Points != null) {\r\n            this.Points.forEach((point) => {\r\n                points.push([point.X, point.Y]);\r\n            });\r\n        }\r\n        data.points = points;\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n\r\n        let len = data.points.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let itemdata = data.points[i];\r\n            let x = itemdata[0];\r\n            let y = itemdata[1];\r\n            if (this.Points != null) {\r\n                this.Points.add(new Point(x, y));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.Points = new List<Point>();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                },\r\n                shape: {\r\n                    points: [] as any[],\r\n                    smooth: 0\r\n                },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 2500, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: { interval: 5000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\" } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { smooth: 1 },\r\n                    animate: { interval: 6000, value: { smooth: 0 } }\r\n                }\r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            let points: any[] = [];\r\n            let zoomx = 1;\r\n            let zoomy = 1;\r\n            if (this.Points != null) {\r\n                this.Points.forEach((point) => {\r\n                    points.push([(point.X * zoomx), (point.Y * zoomy)]);\r\n                });\r\n            }\r\n            if (this.DesignMode) {\r\n                if (this.lastpoint != null) {\r\n                    points.push([(this.lastpoint.X * zoomx), (this.lastpoint.Y * zoomy)]);\r\n                }\r\n            }\r\n            this.DSC.style.option.shape.points = points;\r\n            g.DrawPolyline(this.DSC.style);\r\n\r\n\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableLine OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (e.button == MouseButtons.Right) {\r\n            if (this.DesignMode) {\r\n                this.DesignMode = false;\r\n                this.RefreshRectSize();\r\n                return true;\r\n            }\r\n        }\r\n        if (this.init) {\r\n            this.init = false;\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            if (this.Points != null) {\r\n                this.Points.Add(pt);\r\n            }\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            if (this.Points != null) {\r\n                this.Points.Add(pt);\r\n            }\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            this.lastpoint = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DesignMode) {\r\n            this.DesignMode = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    RefreshRectSize() {\r\n        //let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        //this.Points.Add(pt);\r\n        let minx = 100000000;\r\n        let miny = 100000000;\r\n        let maxx = 0;\r\n        let maxy = 0;\r\n        let width = 0;\r\n        let height = 0;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            if (minx > pt.X) {\r\n                minx = pt.X;\r\n            }\r\n            if (miny > pt.Y) {\r\n                miny = pt.Y;\r\n            }\r\n\r\n            if (maxx < pt.X) {\r\n                maxx = pt.X;\r\n            }\r\n            if (maxy < pt.Y) {\r\n                maxy = pt.Y;\r\n            }\r\n        }\r\n        width = maxx - minx;\r\n        if (width < 6) {\r\n            width = 6;\r\n        }\r\n        height = maxy - miny;\r\n        if (height < 6) {\r\n            height = 6;\r\n        }\r\n        this.Left = minx;\r\n        this.Top = miny;\r\n        this.Width = width;\r\n        this.Height = height;\r\n    }\r\n\r\n    LocationChanged(ptorg: Point, pttar: Point) {\r\n        let w = pttar.X - ptorg.X;\r\n        let h = pttar.Y - ptorg.Y;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = pt.X + w;\r\n            pt.Y = pt.Y + h;\r\n        }\r\n    }\r\n    SizeChanged(sizeorg: Size, sizetar: Size) {\r\n        let w = sizetar.Width / sizeorg.Width;\r\n        let h = sizetar.Height / sizeorg.Height;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = (pt.X - this.Left) * w + this.Left;\r\n            pt.Y = (pt.Y - this.Top) * h + this.Top;\r\n        }\r\n    }\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            for (var i = 0; i < this.Points.Count; i++) {\r\n                let pt = this.Points.get(i);\r\n                pt.X = pt.X * zoom.Width;\r\n                pt.Y = pt.Y * zoom.Height;\r\n            }\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n    //public static timeuse = 600;\r\n    //OnTimerInterval(): boolean\r\n    //{\r\n    //    if (this.DesignMode)\r\n    //    {\r\n    //        if (this.lastpoint != null)\r\n    //        {\r\n    //            let time = (new Date().getTime() - this.lasttime.getTime());\r\n    //            if (time > DisplayableLine.timeuse)\r\n    //            {\r\n    //                let pt = this.lastpoint;\r\n    //                this.Points.Add(pt);\r\n    //                this.lasttime = new Date();\r\n    //                this.lastpoint = null;\r\n    //                this.Grid.RePaint();\r\n    //            }\r\n    //        }\r\n    //        return true;\r\n    //    }\r\n    //    this.Primitive.CloseTime();\r\n    //    return false;\r\n    //}\r\n\r\n}\r\n","\r\n\r\nimport { List } from \"../../Base/ArrayList\";\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { MouseButtons } from \"../../Base/MouseButtons\";\r\nimport { Point, Size, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayablePolygon extends Displayable {\r\n    public Points: List<Point>;\r\n    private lastpoint: Point | null = null;\r\n    //private lasttime: Date;\r\n\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.line;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n            points: [] as any[],\r\n        };\r\n        let points: any[] = [];\r\n        this.Points.forEach((point) => {\r\n            points.push([point.X, point.Y]);\r\n        });\r\n        data.points = points;\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n\r\n        let len = data.points.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let itemdata = data.points[i];\r\n            let x = itemdata[0];\r\n            let y = itemdata[1];\r\n            this.Points.add(new Point(x, y));\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.Points = new List<Point>();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                },\r\n                shape: {\r\n                    points: [] as any[],\r\n                    smooth: 0\r\n                },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 2500, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: { interval: 5000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\" } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { smooth: 1 },\r\n                    animate: { interval: 6000, value: { smooth: 0 } }\r\n                }\r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            let points: any[] = [];\r\n            let zoomx = 1;\r\n            let zoomy = 1;\r\n            this.Points.forEach((point) => {\r\n                points.push([(point.X * zoomx), (point.Y * zoomy)]);\r\n            });\r\n            if (this.DesignMode) {\r\n                if (this.lastpoint != null) {\r\n                    points.push([(this.lastpoint.X * zoomx), (this.lastpoint.Y * zoomy)]);\r\n                }\r\n            }\r\n            this.DSC.style.option.shape.points = points;\r\n            g.DrawPolyPolygon(this.DSC.style);\r\n\r\n\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DrawPolyPolygon OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (e.button == MouseButtons.Right) {\r\n            if (this.DesignMode) {\r\n                this.DesignMode = false;\r\n                this.RefreshRectSize();\r\n                return true;\r\n            }\r\n        }\r\n        if (this.init) {\r\n            this.init = false;\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Points.Add(pt);\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Points.Add(pt);\r\n            this.DesignMode = true;\r\n            //this.lasttime = new Date();\r\n            //this.Primitive.OpenTime();\r\n            this.lastpoint = null;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            this.lastpoint = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DesignMode) {\r\n            this.DesignMode = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    RefreshRectSize() {\r\n        //let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        //this.Points.Add(pt);\r\n        let minx = 100000000;\r\n        let miny = 100000000;\r\n        let maxx = 0;\r\n        let maxy = 0;\r\n        let width = 0;\r\n        let height = 0;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            if (minx > pt.X) {\r\n                minx = pt.X;\r\n            }\r\n            if (miny > pt.Y) {\r\n                miny = pt.Y;\r\n            }\r\n\r\n            if (maxx < pt.X) {\r\n                maxx = pt.X;\r\n            }\r\n            if (maxy < pt.Y) {\r\n                maxy = pt.Y;\r\n            }\r\n        }\r\n        width = maxx - minx;\r\n        if (width < 6) {\r\n            width = 6;\r\n        }\r\n        height = maxy - miny;\r\n        if (height < 6) {\r\n            height = 6;\r\n        }\r\n        this.Left = minx;\r\n        this.Top = miny;\r\n        this.Width = width;\r\n        this.Height = height;\r\n    }\r\n\r\n    LocationChanged(ptorg: Point, pttar: Point) {\r\n        let w = pttar.X - ptorg.X;\r\n        let h = pttar.Y - ptorg.Y;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = pt.X + w;\r\n            pt.Y = pt.Y + h;\r\n        }\r\n    }\r\n    SizeChanged(sizeorg: Size, sizetar: Size) {\r\n        let w = sizetar.Width / sizeorg.Width;\r\n        let h = sizetar.Height / sizeorg.Height;\r\n        for (var i = 0; i < this.Points.Count; i++) {\r\n            let pt = this.Points.get(i);\r\n            pt.X = (pt.X - this.Left) * w + this.Left;\r\n            pt.Y = (pt.Y - this.Top) * h + this.Top;\r\n        }\r\n    }\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            for (var i = 0; i < this.Points.Count; i++) {\r\n                let pt = this.Points.get(i);\r\n                pt.X = pt.X * zoom.Width;\r\n                pt.Y = pt.Y * zoom.Height;\r\n            }\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n    //public static timeuse = 600;\r\n    //OnTimerInterval(): boolean\r\n    //{\r\n    //    if (this.DesignMode)\r\n    //    {\r\n    //        if (this.lastpoint != null)\r\n    //        {\r\n    //            let time = (new Date().getTime() - this.lasttime.getTime());\r\n    //            if (time > DisplayableLine.timeuse)\r\n    //            {\r\n    //                let pt = this.lastpoint;\r\n    //                this.Points.Add(pt);\r\n    //                this.lasttime = new Date();\r\n    //                this.lastpoint = null;\r\n    //                this.Grid.RePaint();\r\n    //            }\r\n    //        }\r\n    //        return true;\r\n    //    }\r\n    //    this.Primitive.CloseTime();\r\n    //    return false;\r\n    //}\r\n\r\n}\r\n","\r\n\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableRect extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.rect;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                    fill: 'rgba(255, 255, 255, 0)',\r\n                },\r\n                shape: {\r\n                    x: 110,\r\n                    y: 10,\r\n                    width: 101,\r\n                    height: 100,\r\n                    smooth: 1,\r\n                    r: 10\r\n                },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: {\r\n                        interval: 6000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\", }\r\n                    }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { smooth: 0 },\r\n                    animate: { interval: 6000, value: { smooth: 1 } },\r\n                }\r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            if (this.DSC == null) {\r\n                this.DSC = {\r\n                    data: {\r\n\r\n                    },\r\n                    style: {\r\n                        option: {\r\n                            shape: {}\r\n                        }\r\n                    },\r\n                    controller: {\r\n\r\n                    },\r\n                };\r\n            }\r\n            this.DSC.style.option.shape.x = this.Left;\r\n            this.DSC.style.option.shape.y = this.Top;\r\n            this.DSC.style.option.shape.width = this.Width;\r\n            this.DSC.style.option.shape.height = this.Height;\r\n            g.DrawPrimitiveRect(this.DSC.style);\r\n\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableLine OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","\r\n\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableSector extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.sect;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: { fill: '#33AECC', lineWidth: 5 },\r\n                shape: { r: 30, r0: 20, cx: 200, cy: 200, startAngle: 3.14, endAngle: 6.14 },\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { fill: 'white' }, animate:\r\n                        { interval: 6000, value: { fill: '#33AECC' } }\r\n                },\r\n                {\r\n                    type: \"shape\", interval: 3000, value: { r: 60 }, animate:\r\n                        { interval: 6000, value: { r: 30 } }\r\n                }]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n\r\n            this.DSC.style.option.shape.cx = this.Left + this.Width / 2;\r\n            this.DSC.style.option.shape.cy = this.Top + this.Width / 2;\r\n            this.DSC.style.option.shape.r = Math.abs(this.Width / 2);\r\n\r\n            g.DrawPrimitiveSector(this.DSC.style);\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableCircle OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        if (this.DesignMode) {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","\r\n\r\nimport { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableText extends Displayable {\r\n    public get TypeName(): string {\r\n        return DisplayableBuild.text;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.DSC.style.option.style.text;\r\n    }\r\n    public set Text(value: string) {\r\n        this.DSC.style.option.style.text = value;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                rotation: 0,\r\n                position: [600, 120],\r\n                style: {\r\n                    text: '',\r\n                    fill: '#ffe',\r\n                    font: '18px Arial',\r\n                    padding: [10, 10, 10, 10],\r\n                    backgroundColor: 'rgba(124, 0, 123, 0.4)',\r\n                    borderColor: '#112233',\r\n                    borderWidth: 2,\r\n                    borderRadius: 5,\r\n                    textShadowBlur: 2,\r\n                    textShadowColor: '#893e95',\r\n                    textShadowOffsetX: 2,\r\n                    textShadowOffsetY: 4,\r\n                    boxShadowBlur: 5,\r\n                    boxShadowColor: '#1099ee',\r\n                    boxShadowOffsetX: 5,\r\n                    boxShadowOffsetY: 10\r\n                }\r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { textShadowBlur: 15, textShadowColor: \"white\", borderColor: 'white', },\r\n                    animate: { type: \"style\", interval: 6000, value: { textShadowBlur: 15, textShadowColor: \"#ffe\", borderColor: '#112233', } }\r\n                }]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.DSC.style = style;\r\n        this.Width = 200;\r\n        this.Height = 30;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        try {\r\n            if (this.DoDrawBack(sender, g)) {\r\n                return true;\r\n            }\r\n            if (this.Selected) {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n\r\n            this.DSC.style.option.position = [this.Left, this.Top];\r\n            this.DSC.style.option.style.text = this.Text;\r\n            g.DrawPrimitiveText(this.DSC.style);// this.Animation); \r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DisplayableCircle OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseDown(sender, e, ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint)) {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init) {\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseUp(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.DoMouseMove(sender, e, ve)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n","import { Displayable } from \"./Displayable\";\r\nimport { DisplayableCircle } from \"./DisplayableCircle\";\r\nimport { DisplayableImage } from \"./DisplayableImage\";\r\nimport { DisplayableLine } from \"./DisplayableLine\";\r\nimport { DisplayablePolygon } from \"./DisplayablePolygon\";\r\nimport { DisplayableRect } from \"./DisplayableRect\";\r\nimport { DisplayableSector } from \"./DisplayableSector\";\r\nimport { DisplayableText } from \"./DisplayableText\";\r\n\r\nvar DisplayableBuild =\r\n{\r\n    line: \"line\",\r\n    rect: \"rect\",\r\n    text: \"text\",\r\n    circ: \"circ\",\r\n    imag: \"imag\",\r\n    sect: \"sect\",\r\n    poly: \"poly\",\r\n    build: function (typename: string): Displayable {\r\n        let model: Displayable;\r\n        switch (typename) {\r\n            case DisplayableBuild.line:\r\n                model = new DisplayableLine();\r\n                break;\r\n            case DisplayableBuild.rect:\r\n                model = new DisplayableRect();\r\n                break;\r\n            case DisplayableBuild.text:\r\n                model = new DisplayableText();\r\n                break;\r\n            case DisplayableBuild.circ:\r\n                model = new DisplayableCircle();\r\n                break;\r\n            case DisplayableBuild.imag:\r\n                model = new DisplayableImage();\r\n                break;\r\n            case DisplayableBuild.imag:\r\n                model = new DisplayableSector();\r\n                break;\r\n            case DisplayableBuild.poly:\r\n                model = new DisplayablePolygon();\r\n                break;\r\n            default:\r\n                model = new DisplayableRect();\r\n                break;\r\n        }\r\n        return model;\r\n    }\r\n\r\n}\r\nexport { DisplayableBuild }","import { Palette } from \"../../Base/CellHeaderStyle\";\r\nimport { DataExcelConsole } from \"../../Base/DataExcelConsole\";\r\nimport { EventView } from \"../../Base/EventView\";\r\nimport { Point, Zoom } from \"../../Base/Point\";\r\nimport { Events } from \"../../Control/Events\";\r\nimport { Graphics } from \"../../Drawing/Graphics\";\r\nimport { DataExcel } from \"../../main/DataExcel\";\r\nimport { Displayable } from \"./Displayable\";\r\nimport { DisplayableBuild } from \"./DisplayableBuild\";\r\nexport class DisplayableImage extends Displayable   \r\n{\r\n    public get TypeName(): string\r\n    {\r\n        return DisplayableBuild.imag;\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any\r\n    {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any)\r\n    {\r\n        this._dsc = value;\r\n    }\r\n\r\n    public GetData()\r\n    {\r\n        let data = {\r\n            typename: this.TypeName,\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            dsc: this.DSC,\r\n        };\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data:any)\r\n    {\r\n\r\n        this.init = false;\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        this.DSC = data.dsc;\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        let style = {\r\n            option: {\r\n                style: {\r\n                    lineDash: [10, 10],\r\n                    stroke: 'rgba(220, 20, 60, 0.8)',\r\n                    lineWidth: 1,\r\n                    shadowBlur: 8,\r\n                    shadowColor: 'rgba(255, 255, 255, 0.8)',\r\n                    fill: 'rgba(255, 255, 255, 0)',\r\n                    image: './image/test/test.png',\r\n                } \r\n            },\r\n            animate: [\r\n                {\r\n                    type: \"style\", interval: 3000, value: { lineWidth: 7, shadowBlur: 18, stroke: \"white\" },\r\n                    animate: {\r\n                        interval: 6000, value: { lineWidth: 1, shadowBlur: 8, stroke: \"rgba(220, 20, 60, 0.8)\", }\r\n                    }\r\n                } \r\n            ]\r\n        };\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n        this.Width = 20;\r\n        this.Height = 20;\r\n        this.DSC.style = style;\r\n    }\r\n\r\n    OnDrawBack(sender:any, g: Graphics): boolean\r\n    {\r\n        try\r\n        {\r\n            if (this.DoDrawBack(sender, g))\r\n            {\r\n                return true;\r\n            }\r\n            if (this.Selected)\r\n            {\r\n                g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n            }\r\n            if (this.DSC == null)\r\n            {\r\n                this.DSC = {\r\n                    data: {\r\n\r\n                    },\r\n                    style: {\r\n                        option: {\r\n                            shape: {}\r\n                        }\r\n                    },\r\n                    controller: {\r\n\r\n                    },\r\n                };\r\n            }\r\n            this.DSC.style.option.style.x = this.Left;\r\n            this.DSC.style.option.style.y = this.Top;\r\n            this.DSC.style.option.style.width = this.Width;\r\n            this.DSC.style.option.style.height = this.Height;\r\n            g.DrawPrimitiveImage(this.DSC.style);\r\n\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"DisplayableLine OnDisplayDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n    private init = true;\r\n    OnMouseDown(sender:any, e:MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.DoMouseDown(sender, e, ve))\r\n        {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n        if (!this.Primitive.Rect.Contains(ve.offsetPoint))\r\n        {\r\n            this.DesignMode = false;\r\n            return false;\r\n        }\r\n        if (this.init)\r\n        {\r\n            this.DesignMode = true;\r\n            this.Left = pt.X;\r\n            this.Top = pt.Y;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.init = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender:any, e: MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.DoMouseUp(sender, e, ve))\r\n        {\r\n            return true;\r\n        }\r\n        if (this.DesignMode)\r\n        {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            this.DesignMode = false;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseMove(sender:any, e: MouseEvent, ve: EventView): boolean\r\n    {\r\n        if (this.DoMouseMove(sender, e, ve))\r\n        {\r\n            return true;\r\n        }\r\n        if (this.DesignMode)\r\n        {\r\n            let pt = new Point(ve.offsetPoint.X, ve.offsetPoint.Y);\r\n            this.Width = pt.X - this.Left;\r\n            this.Height = pt.Y - this.Top;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom ;\r\n    SetZoom(zoom: Zoom): boolean\r\n    {\r\n        try\r\n        {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e)\r\n        {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom\r\n    {\r\n        return this._zoom;\r\n    }\r\n}\r\n","﻿import { Palette } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { Point, Rect, Size, Zoom } from \"../Base/Point\";\r\nimport { Events } from \"../Control/Events\";\r\nimport { IViewEvent, IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcel } from \"../main/DataExcel\";\r\nimport { StateMode } from \"../View/MoveView\";\r\nimport { SizeChangMode } from \"../View/ReSizeView\";\r\n\r\ndeclare var echarts: any;\r\nexport class Chart implements IViewEvent, IZoom {\r\n    public Grid: DataExcel;\r\n    private _Name: string;\r\n    public get Name(): string {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string) {\r\n        this._Name = value;\r\n    }\r\n    private _offsetX: number = 0;\r\n    public get offsetX(): number {\r\n        return this._offsetX;\r\n    }\r\n    public set offsetX(value: number) {\r\n        this._offsetX = value;\r\n    }\r\n    private _offsetY: number = 0;\r\n    public get offsetY(): number {\r\n        return this._offsetY;\r\n    }\r\n    public set offsetY(value: number) {\r\n        this._offsetY = value;\r\n    }\r\n\r\n    protected _height = 0;\r\n    public get Height() {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value) {\r\n        this._height = value;\r\n    }\r\n    public get Right() {\r\n        return this.Left + this.Width;\r\n    }\r\n\r\n    public get Bottom() {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left() {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value) {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public set Top(value) {\r\n        this._top = value;\r\n    }\r\n    protected _width = 0;\r\n\r\n    public get Width() {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value) {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left + this.offsetX;\r\n        rect.Y = this.Top + this.offsetY;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    public get Bound(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string) {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number) {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point) {\r\n        this._MouseDownPoint = value;\r\n    }\r\n\r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size) {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode) {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: number = 6;\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode) {\r\n        this._StateMode_1 = value;\r\n    }\r\n\r\n    public Selected: boolean;\r\n    public get TopLeft(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.offsetY - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect {\r\n        let rectf = new Rect(this.Right + this.offsetX + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.offsetY - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Bottom + this.offsetY + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect {\r\n        let rectf = new Rect(this.Right + this.offsetX + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Bottom + this.offsetY + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect {\r\n        let rectf = new Rect(\r\n            this.Left + this.offsetX + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Top + this.offsetY - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Bottom + this.offsetY + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect {\r\n        let rectf = new Rect(this.Left + this.offsetX - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.offsetY + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect {\r\n        let rectf = new Rect(this.Right + this.offsetX + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.offsetY + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n    private _dsc: any;\r\n    public get DSC(): any {\r\n        return this._dsc;\r\n    }\r\n    public set DSC(value: any) {\r\n        this._dsc = value;\r\n    }\r\n\r\n\r\n    public GetData() {\r\n        try {\r\n            let data = {\r\n                name: this.Name,\r\n                backcolor: this.BackColor,\r\n                backimage: this.BackImage,\r\n                backimageimagelayout: this.BackImageImageLayout,\r\n                height: this.Height,\r\n                left: this.Left,\r\n                top: this.Top,\r\n                width: this.Width,\r\n                offsetx: this.offsetX,\r\n                offsety: this.offsetY,\r\n                chartdata: this.DSC\r\n            };\r\n            return data;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"dataexcelcell GetData\", e);\r\n        }\r\n        return {};\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        try {\r\n            this.Name = data.name;\r\n            this.BackColor = data.backcolor;\r\n            this.BackImage = data.backimage;\r\n            this.BackImageImageLayout = data.backimageimagelayout;\r\n            this.Height = data.height;\r\n            this.Left = data.left;\r\n            this.Top = data.top;\r\n            this.Width = data.width;\r\n            this.DSC = data.chartdata;\r\n\r\n            this.offsetX = data.offsetx;\r\n            this.offsetY = data.offsety;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"dataexcelcell SetData\", e);\r\n        }\r\n\r\n    }\r\n    constructor() {\r\n        this._SelectBorderWidth = 6;\r\n        this.DSC = {\r\n            data: {\r\n\r\n            },\r\n            style: {\r\n                option: {}\r\n            },\r\n            controller: {\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n\r\n    //Init\r\n    dom: HTMLDivElement;\r\n    chart: any;\r\n    Init() {\r\n        if (this.dom == null) {\r\n            this.dom = document.createElement(\"div\");\r\n            this.dom.style.position = \"absolute\";\r\n            this.dom.style.left = this.Left + \"px\";\r\n            this.dom.style.top = this.Top + \"px\";\r\n            this.dom.style.width = this.Width + \"px\";\r\n            this.dom.style.height = this.Height + \"px\";\r\n            this.Grid.maindom.appendChild(this.dom);\r\n\r\n            this.dom[\"chart\"] = this;\r\n            //this.dom.addEventListener(\"mousedown\", this.DoOnMouseDown);\r\n            //this.dom.addEventListener(\"mouseup\", this.DoOnMouseUp);\r\n            //this.dom.addEventListener(\"mousemove\", this.DoOnMouseMove);\r\n            //window[\"chart\"] = this;\r\n            //window.addEventListener(\"mousemove\", this.DoOnMouseMove);\r\n            this.chart = echarts.init(this.dom);\r\n\r\n            let option = this.DSC.style.option;\r\n            this.chart.setOption(option);\r\n        }\r\n    }\r\n    InitDefaultOption() {\r\n        let option;\r\n        option = {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n                    type: 'line',\r\n                    smooth: true\r\n                }\r\n            ]\r\n        };\r\n        this.DSC.style.option = option;\r\n        this.chart.setOption(option);\r\n    }\r\n    Refresh() {\r\n        this.offsetX = this.Grid.ContentLeft;\r\n        this.offsetY = this.Grid.ContentTop;\r\n\r\n        this.dom.style.left = this.offsetX + this.Left + \"px\";\r\n        this.dom.style.top = this.offsetY + this.Top + \"px\";\r\n        this.dom.style.width = this.Width + \"px\";\r\n        this.dom.style.height = this.Height + \"px\";\r\n        let option = this.DSC.style.option;\r\n        this.chart.setOption(option, true);\r\n        this.chart.resize();\r\n    }\r\n    RefreshData() {\r\n\r\n    }\r\n    Clear() {\r\n        try {\r\n            if (this.dom != null) {\r\n                this.Grid.maindom.removeChild(this.dom);\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"Chart Clear\", e);\r\n        }\r\n\r\n    }\r\n    //DoOnMouseDown(evt: MouseEvent): void\r\n    //{\r\n    //    let obj2 = this[\"chart\"] as any;\r\n    //    let obj = obj2 as Chart;\r\n    //    let ev = new EventView();\r\n    //    try\r\n    //    {\r\n    //        ev.Canvas = evt.target;\r\n    //        let dom = evt.target as HTMLElement;\r\n    //        ev.Dom = dom;\r\n    //        let vertex = dom.getBoundingClientRect();\r\n    //        let x = evt.offsetX;\r\n    //        let y = evt.offsetY;\r\n    //        ev.Point = new Point(x, y);\r\n    //        obj.OnChartMouseDown(this, evt, ev);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"dom.OnMouseDown\", ex);\r\n    //    }\r\n    //    finally\r\n    //    {\r\n\r\n    //    }\r\n    //}\r\n    //DoOnMouseUp(evt: MouseEvent): void\r\n    //{\r\n    //    let obj2 = this[\"chart\"] as any;\r\n    //    let obj = obj2 as Chart;\r\n    //    let ev = new EventView();\r\n    //    try\r\n    //    {\r\n    //        ev.Canvas = evt.target;\r\n    //        let dom = evt.target as HTMLElement;\r\n    //        ev.Dom = dom;\r\n    //        let x = evt.offsetX;\r\n    //        let y = evt.offsetY;\r\n    //        ev.Point = new Point(x, y);\r\n    //        obj.OnChartMouseUp(this, evt, ev);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"dom.OnMouseUp\", ex);\r\n    //    }\r\n    //    finally\r\n    //    {\r\n\r\n    //    }\r\n    //}\r\n    //DoOnMouseMove(evt: MouseEvent): void\r\n    //{\r\n    //    let obj2 = this[\"chart\"] as any;\r\n    //    let obj = obj2 as Chart;\r\n    //    let ev = new EventView();\r\n    //    try\r\n    //    {\r\n    //        ev.Canvas = evt.target;\r\n    //        let dom = evt.target as HTMLElement;\r\n    //        ev.Dom = dom;\r\n    //        let x = evt.offsetX;\r\n    //        let y = evt.offsetY;\r\n    //        ev.Point = new Point(x, y);\r\n    //        obj.OnChartMouseMove(this, evt, ev);\r\n    //    }\r\n    //    catch (ex)\r\n    //    {\r\n    //        DataExcelConsole.log(\"dom.click\", ex);\r\n    //    }\r\n    //    finally\r\n    //    {\r\n\r\n    //    }\r\n    //}\r\n\r\n    //OnChartMouseDown(sender: any, e: any, ve: EventView): boolean\r\n    //{\r\n    //    if (this.Bound.Contains(ve.Point))\r\n    //    {\r\n    //        this.MouseDownPoint = ve.Point; \r\n    //        this.StateMode = StateMode.MOVE;\r\n    //        this.Grid.ClearSelect();\r\n    //        this.Selected = true;\r\n    //        this.Grid.CellEvent = this;\r\n    //        this.Grid.RePaint();\r\n    //        return true;\r\n    //    }\r\n    //    return false;\r\n    //}\r\n    //OnChartMouseUp(sender: any, e: any, ve: EventView): boolean\r\n    //{\r\n    //    this.StateMode = StateMode.NULL;\r\n    //    return false;\r\n    //}\r\n    //OnChartMouseMove(sender: any, e: any, ve: EventView): boolean\r\n    //{ \r\n    //    if (this.StateMode == StateMode.MOVE)\r\n    //    {\r\n    //        let x = ve.Point.X - this.MouseDownPoint.X;\r\n    //        let y = ve.Point.Y - this.MouseDownPoint.Y;\r\n    //        this.Left = this.Left + x;\r\n    //        this.Top = this.Top + y;\r\n    //        this.dom.style.left = this.Left + \"px\";\r\n    //        this.dom.style.top = this.Top + \"px\";\r\n    //        this.Refresh();\r\n    //        this.Grid.RePaint();\r\n    //        return true;\r\n    //    } \r\n    //    return false;\r\n    //}\r\n    //Over\r\n    OnMouseDown(sender: any, e: any, ve: EventView): boolean {\r\n        if (this.Rect.Contains(ve.offsetPoint)) {\r\n            this.MouseDownPoint = ve.offsetPoint;\r\n            this.MouseDownSize = new Size(this.Left, this.Top);\r\n            this.StateMode = StateMode.MOVE;\r\n            this.Grid.ClearSelect();\r\n            this.Selected = true;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        if (this.SizeChangedMouseDown(ve)) {\r\n            this.StateMode = StateMode.SIZE;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            this.Grid.emit(Events.SelectChanged, this.Grid, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: any, ve: EventView): boolean {\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: any, ve: EventView): boolean {\r\n        if (this.StateMode == StateMode.MOVE) {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            this.Left = this.MouseDownSize.Width + x;\r\n            this.Top = this.MouseDownSize.Height + y;\r\n            this.dom.style.left = this.offsetX + this.Left + \"px\";\r\n            this.dom.style.top = this.offsetY + this.Top + \"px\";\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.StateMode == StateMode.SIZE) {\r\n            this.ChangedSize(ve);\r\n            this.dom.style.left = this.offsetX + this.Left + \"px\";\r\n            this.dom.style.top = this.offsetY + this.Top + \"px\";\r\n            this.dom.style.width = this.Width + \"px\";\r\n            this.dom.style.height = this.Height + \"px\";\r\n            this.chart.resize();\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        else if (this.SizeChangedMouseDown(ve)) {\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    SetCursor(cursor: any) {\r\n        this.Grid.maindom.style.cursor = cursor;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: any, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnKeyPress(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n\r\n    OnDrawBack(sender: any, g: Graphics) {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, this.Left + this.offsetX, this.Top, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRect(Palette.A3399FF80, this.Left + this.offsetX, this.Top + this.offsetY, this.Width, this.Height);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRectangleColor(\"gray\", this.TopLeft, Cursors.nw_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomRight, Cursors.nw_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.TopRight, Cursors.ne_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomLeft, Cursors.ne_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidRight, Cursors.e_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidLeft, Cursors.e_resize);\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidTop, Cursors.n_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidBottom, Cursors.n_resize);\r\n        }\r\n    }\r\n    SizeChangedMouseDown(ve: EventView) {\r\n        let pt = ve.offsetPoint;\r\n        this.MouseDownPoint = ve.offsetPoint;\r\n        this.MouseDownSize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            this.SetCursor(Cursors.nw_resize);\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            this.SetCursor(Cursors.ne_resize);\r\n\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            this.SetCursor(Cursors.ne_resize);\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            this.SetCursor(Cursors.nw_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            this.SetCursor(Cursors.n_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            this.SetCursor(Cursors.n_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            this.SetCursor(Cursors.e_resize);\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            this.SetCursor(Cursors.e_resize);\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    ChangedSize(ve: EventView) {\r\n        let location = ve.offsetPoint;// e.Location;\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n\r\n        switch (this.SizeChangMode) {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}","import { List } from \"../../Base/ArrayList\";\r\nimport { Displayable } from \"./Displayable\";\r\n\r\n \r\n export class DisplayableList extends List<Displayable>\r\n{ \r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n \r\n    Clear()\r\n    {\r\n        this.clear();\r\n    }\r\n    Remove(row:any)\r\n    {\r\n        this.remove(row);\r\n    }\r\n \r\n    Get(index:any): Displayable\r\n    {\r\n        return this.get(index);\r\n    }\r\n\r\n}\r\n","import { Palette } from \"../Base/CellHeaderStyle\";\r\nimport { ConvertHelper } from \"../Base/ConvertHelper\";\r\nimport { Cursors } from \"../Base/Cursors\";\r\nimport { DataExcelConsole } from \"../Base/DataExcelConsole\";\r\nimport { EventView } from \"../Base/EventView\";\r\nimport { ImageLayout } from \"../Base/ImageLayout\";\r\nimport { Point, Rect, Size, Zoom } from \"../Base/Point\";\r\nimport { IViewEvent, IZoom } from \"../Control/IViewEvent\";\r\nimport { Graphics } from \"../Drawing/Graphics\";\r\nimport { DataExcel } from \"../main/DataExcel\";\r\nimport { StateMode } from \"../View/MoveView\";\r\nimport { SizeChangMode } from \"../View/ReSizeView\";\r\nimport { Displayable } from \"./Displayable/Displayable\";\r\nimport { DisplayableBuild } from \"./Displayable/DisplayableBuild\";\r\nimport { DisplayableCircle } from \"./Displayable/DisplayableCircle\";\r\nimport { DisplayableImage } from \"./Displayable/DisplayableImage\";\r\nimport { DisplayableLine } from \"./Displayable/DisplayableLine\";\r\nimport { DisplayableList } from \"./Displayable/DisplayableList\";\r\nimport { DisplayablePolygon } from \"./Displayable/DisplayablePolygon\";\r\nimport { DisplayableRect } from \"./Displayable/DisplayableRect\";\r\nimport { DisplayableSector } from \"./Displayable/DisplayableSector\";\r\nimport { DisplayableText } from \"./Displayable/DisplayableText\";\r\n\r\nexport class Primitive implements IViewEvent, IZoom {\r\n    public Grid: DataExcel;\r\n    private _Name: string;\r\n    public get Name(): string {\r\n        return this._Name;\r\n    }\r\n    public set Name(value: string) {\r\n        this._Name = value;\r\n    }\r\n\r\n    protected _height = 0;\r\n    public get Height() {\r\n\r\n        return this._height;\r\n    }\r\n    public set Height(value) {\r\n        this._height = value;\r\n    }\r\n    public get Right() {\r\n        return this._left + this.Width;\r\n    }\r\n\r\n    public get Bottom() {\r\n        return this.Top + this.Height;\r\n    }\r\n\r\n    protected _left = 0;\r\n    public get Left() {\r\n\r\n        return this._left;\r\n    }\r\n    public set Left(value) {\r\n        this._left = value;\r\n    }\r\n\r\n    protected _top = 0;\r\n    public get Top() {\r\n        return this._top;\r\n    }\r\n    public set Top(value) {\r\n        this._top = value;\r\n    }\r\n    protected _width = 0;\r\n\r\n    public get Width() {\r\n\r\n        return this._width;\r\n    }\r\n    public set Width(value) {\r\n        this._width = value;\r\n    }\r\n    public get Rect(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    public get Bound(): Rect {\r\n        let rect = new Rect(0, 0, 0, 0);\r\n        rect.X = this.Left;\r\n        rect.Y = this.Top;\r\n        rect.Width = this.Width;\r\n        rect.Height = this.Height;\r\n        return rect;\r\n    }\r\n    private _BackColor: any;\r\n    public get BackColor(): any {\r\n        //if (this._BackColor == null)\r\n        //{\r\n        //    return this.Grid.BackColor;\r\n        //}\r\n        return this._BackColor;\r\n    }\r\n    public set BackColor(value: any) {\r\n        this._BackColor = value;\r\n    }\r\n\r\n    private _BackImage: string = \"\";\r\n    public get BackImage(): string {\r\n        return this._BackImage;\r\n    }\r\n    public set BackImage(value: string) {\r\n        this._BackImage = value;\r\n    }\r\n    private _BackImageImageLayout: number = ImageLayout.ZoomClip;\r\n    public get BackImageImageLayout(): number {\r\n        return this._BackImageImageLayout;\r\n    }\r\n    public set BackImageImageLayout(value: number) {\r\n        this._BackImageImageLayout = value;\r\n    }\r\n    private _MouseDownPoint: Point;\r\n    public get MouseDownPoint(): Point {\r\n        return this._MouseDownPoint;\r\n    }\r\n    public set MouseDownPoint(value: Point) {\r\n        this._MouseDownPoint = value;\r\n    }\r\n\r\n    private _MouseDownSize: Size;\r\n    public get MouseDownSize(): Size {\r\n        return this._MouseDownSize;\r\n    }\r\n    public set MouseDownSize(value: Size) {\r\n        this._MouseDownSize = value;\r\n    }\r\n\r\n\r\n    private _SizeChangMode: SizeChangMode;\r\n    public get SizeChangMode(): SizeChangMode {\r\n        return this._SizeChangMode;\r\n    }\r\n    public set SizeChangMode(value: SizeChangMode) {\r\n        this._SizeChangMode = value;\r\n    }\r\n\r\n\r\n    private _SelectBorderWidth: number = 6;\r\n    private _StateMode_1: StateMode;\r\n    public get StateMode(): StateMode {\r\n        return this._StateMode_1;\r\n    }\r\n    public set StateMode(value: StateMode) {\r\n        this._StateMode_1 = value;\r\n    }\r\n\r\n    public Selected: boolean;\r\n    public get TopLeft(): Rect {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth, this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get TopRight(): Rect {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomLeft(): Rect {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n\r\n    }\r\n\r\n    public get BottomRight(): Rect {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    public get MidTop(): Rect {\r\n        let rectf = new Rect(\r\n            this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Top - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this._SelectBorderWidth,\r\n            this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidBottom(): Rect {\r\n        let rectf = new Rect(this.Left + this.Width / 2 - this._SelectBorderWidth / 2,\r\n            this.Bottom + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public get MidLeft(): Rect {\r\n        let rectf = new Rect(this.Left - this._SelectBorderWidth - this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n    }\r\n\r\n    get MidRight(): Rect {\r\n        let rectf = new Rect(this.Right + this._SelectBorderWidth + this._SelectBorderWidth,\r\n            this.Top + this.Height / 2 - this._SelectBorderWidth / 2,\r\n            this._SelectBorderWidth, this._SelectBorderWidth);\r\n        return rectf;\r\n\r\n    }\r\n\r\n    public Displayables: DisplayableList;\r\n\r\n    public GetData() {\r\n        let data = {\r\n            name: this.Name,\r\n            height: this.Height,\r\n            left: this.Left,\r\n            top: this.Top,\r\n            width: this.Width,\r\n            backcolor: this.BackColor,\r\n            backimage: this.BackImage,\r\n            backimageimagelayout: this.BackImageImageLayout,\r\n            displayables: [] as any[],\r\n\r\n        };\r\n        this.Displayables.forEach((chart: Displayable) => {\r\n            data.displayables.push(chart.GetData());\r\n        });\r\n        return data;\r\n    }\r\n\r\n    public SetData(grid: DataExcel, data: any) {\r\n        this.Name = data.name;\r\n        this.Height = data.height;\r\n        this.Left = data.left;\r\n        this.Top = data.top;\r\n        this.Width = data.width;\r\n        this.BackColor = data.backcolor;\r\n        this.BackImage = data.backimage;\r\n        this.BackImageImageLayout = data.backimageimagelayout;\r\n        let len = data.displayables.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let itemdata = data.displayables[i];\r\n            let item = DisplayableBuild.build(itemdata.typename);\r\n            if (item != null) {\r\n                item.Grid = grid;\r\n                item.Primitive = this;\r\n                item.SetData(grid, itemdata);\r\n                this.Displayables.Add(item);\r\n            }\r\n        }\r\n    }\r\n    constructor() {\r\n        this.Displayables = new DisplayableList();\r\n    }\r\n    Mixin(obj: any) {\r\n\r\n    }\r\n\r\n    OnDraw(sender: any, g: Graphics): boolean {\r\n        return false;\r\n    }\r\n    OnDrawBack(sender: any, g: Graphics): boolean {\r\n        if (this.Grid == null)\r\n            console.log(\"this.Grid == null\");\r\n\r\n        if (this.BackColor != null) {\r\n            g.FillRect(this.BackColor, this.Left, this.Top, this.Width, this.Height);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRect(Palette.A3399FF80, this.Left, this.Top, this.Width, this.Height);\r\n        }\r\n        if (!ConvertHelper.StringIsNullOrEmpty(this.BackImage)) {\r\n            g.FillRectangleImage(this.BackImage, this.Rect, this.BackImageImageLayout, null, 1);\r\n        }\r\n        if (this.Selected) {\r\n            g.FillRectangleColor(\"gray\", this.TopLeft, Cursors.nw_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomRight, Cursors.nw_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.TopRight, Cursors.ne_resize);\r\n            g.FillRectangleColor(\"gray\", this.BottomLeft, Cursors.ne_resize);\r\n\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidRight, Cursors.e_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidLeft, Cursors.e_resize);\r\n\r\n            g.FillRectangleColor(\"gray\", this.MidTop, Cursors.n_resize);\r\n            g.FillRectangleColor(\"gray\", this.MidBottom, Cursors.n_resize);\r\n        }\r\n        try {\r\n            for (var i = 0; i < this.Displayables.Count; i++) {\r\n                let display = this.Displayables.Get(i);\r\n                display.OnDrawBack(sender, g);\r\n\r\n            }\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"OnDrawBack\", e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    OnMouseDown(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseDown(sender, e, ve);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        for (var i = 0; i < this.Displayables.Count; i++) {\r\n            let disp = this.Displayables.Get(i);\r\n            if (disp == null) {\r\n                DataExcelConsole.log(\"Primitive OnMouseDown error\", e);\r\n                continue;\r\n            }\r\n            let res = disp.OnMouseDown(sender, e, ve);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        if (this.SizeChangedMouseDown(ve)) {\r\n            this.StateMode = StateMode.SIZE;\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        if (this.Bound.Contains(ve.offsetPoint)) {\r\n            this.MouseDownPoint = ve.offsetPoint;\r\n            this.MouseDownSize = new Size(this.Left, this.Top);\r\n            this.StateMode = StateMode.MOVE;\r\n            this.Grid.ClearSelect();\r\n            this.Selected = true;\r\n\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseUp(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseUp(sender, e, ve);\r\n            if (res) {\r\n                ve.NeedRePaint = true;\r\n                ve.CurrentEvent = this;\r\n                return res;\r\n            }\r\n        }\r\n        this.CurrentDiaplay = null;\r\n        this.StateMode = StateMode.NULL;\r\n        return false;\r\n    }\r\n    OnMouseMove(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseMove(sender, e, ve);\r\n            if (res) {\r\n                ve.NeedRePaint = true;\r\n                ve.CurrentEvent = this;\r\n                return res;\r\n            }\r\n        }\r\n        if (this.StateMode == StateMode.SIZE) {\r\n            this.ChangedSize(ve);\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n\r\n        if (this.StateMode == StateMode.MOVE) {\r\n            let x = ve.offsetPoint.X - this.MouseDownPoint.X;\r\n            let y = ve.offsetPoint.Y - this.MouseDownPoint.Y;\r\n            this.Left = this.MouseDownSize.Width + x;\r\n            this.Top = this.MouseDownSize.Height + y;\r\n            this.Displayables.forEach((item: Displayable) => { item.LocationOffset(x, y) });\r\n            ve.NeedRePaint = true;\r\n            ve.CurrentEvent = this;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    OnMouseDoubleClick(sender: any, e: MouseEvent, ve: EventView): boolean {\r\n        if (this.CurrentDiaplay != null) {\r\n            ve.offsetPoint.X = ve.offsetPoint.X - this.Left;\r\n            ve.offsetPoint.Y = ve.offsetPoint.Y - this.Top;\r\n            let res = this.CurrentDiaplay.OnMouseDoubleClick(sender, e, ve);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    OnKeyPress(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnKeyDown(sender: any, e: KeyboardEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchStart(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchMove(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n    OnTouchEnd(sender: any, e: TouchEvent, ve: EventView): boolean {\r\n        return false;\r\n    }\r\n\r\n    Clear() {\r\n        try {\r\n            this.CurrentDiaplay = null;\r\n            this.Displayables.Clear();\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"Primitive Clear\", e);\r\n        }\r\n\r\n    }\r\n    Clone() {\r\n\r\n    }\r\n    SizeChangedMouseDown(ve: EventView) {\r\n        let pt = ve.offsetPoint;\r\n        this.MouseDownPoint = ve.offsetPoint;\r\n        this.MouseDownSize = new Size(this.Width, this.Height);\r\n\r\n        let result = false;\r\n        if (this.TopLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopLeft;\r\n            result = true;\r\n        }\r\n        else if (this.TopRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.TopRight;\r\n            result = true;\r\n        }\r\n        else if (this.BottomLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomLeft;\r\n            result = true;\r\n        }\r\n        else if (this.BottomRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.BoomRight;\r\n            result = true;\r\n        }\r\n        else if (this.MidTop.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidTop;\r\n            result = true;\r\n        }\r\n        else if (this.MidBottom.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidBoom;\r\n            result = true;\r\n        }\r\n        else if (this.MidLeft.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidLeft;\r\n            result = true;\r\n        }\r\n        else if (this.MidRight.Contains(pt)) {\r\n            this.SizeChangMode = SizeChangMode.MidRight;\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    ChangedSize(ve: EventView) {\r\n        let location = ve.offsetPoint;// e.Location;\r\n        let sf = new Size(location.X - this.MouseDownPoint.X, location.Y - this.MouseDownPoint.Y);\r\n\r\n        switch (this.SizeChangMode) {\r\n            case SizeChangMode.Null:\r\n                break;\r\n            case SizeChangMode.TopLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n                this.Left = location.X;// this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.TopRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = location.Y;// this.MouseDownPoint.Y + sf.Height;\r\n\r\n                break;\r\n            case SizeChangMode.MidLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n                break;\r\n            case SizeChangMode.MidRight:\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                break;\r\n            case SizeChangMode.BoomLeft:\r\n                this.Width = this.MouseDownSize.Width - sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                this.Left = this.MouseDownPoint.X + sf.Width;\r\n\r\n                break;\r\n            case SizeChangMode.BoomRight:\r\n\r\n                this.Width = this.MouseDownSize.Width + sf.Width;\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidTop:\r\n                this.Height = this.MouseDownSize.Height - sf.Height;\r\n                this.Top = this.MouseDownPoint.Y + sf.Height;\r\n                break;\r\n            case SizeChangMode.MidBoom:\r\n                this.Height = this.MouseDownSize.Height + sf.Height;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public CurrentDiaplay: Displayable | null = null;\r\n    //private timeid: number = -1;\r\n    //timer\r\n    //OpenTime()\r\n    //{\r\n    //    if (this.timeid > -1)\r\n    //    {\r\n    //        return;\r\n    //    }\r\n    //    this.timeid = setInterval(this.OnTimerInterval, 100,this);\r\n    //}\r\n    //CloseTime()\r\n    //{\r\n    //    try\r\n    //    {\r\n    //        if (this.timeid==-1)\r\n    //        {\r\n    //            return;\r\n    //        }\r\n    //        clearInterval(this.timeid);\r\n    //        this.timeid = -1;\r\n    //    } catch (e)\r\n    //    {\r\n    //        DataExcelConsole.log(\"CloseTime\", e);     \r\n    //    }\r\n    //}\r\n    //OnTimerInterval(obj)\r\n    //{\r\n    //    try\r\n    //    {\r\n    //        let pri = obj as Primitive;\r\n    //        if (pri.CurrentDiaplay != null)\r\n    //        {\r\n    //            let res = pri.CurrentDiaplay.OnTimerInterval();\r\n    //            if (res)\r\n    //            {\r\n    //                return res;\r\n    //            }\r\n    //        }\r\n    //        pri.CloseTime();\r\n    //    } catch (e)\r\n    //    {\r\n    //        DataExcelConsole.log(\"OnTimerInterval\", e);\r\n    //    } \r\n    //}\r\n    //displayable\r\n    NewDiaplayLine() {\r\n        let item = new DisplayableLine();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDiaplayRect() {\r\n        let item = new DisplayableRect();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDiaplayText() {\r\n        let item = new DisplayableText();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDiaplayCircle() {\r\n        let item = new DisplayableCircle();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDisplayableImage() {\r\n        let item = new DisplayableImage();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDisplayablePolygon() {\r\n        let item = new DisplayablePolygon();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n    NewDisplayableSector() {\r\n        let item = new DisplayableSector();\r\n        item.Grid = this.Grid;\r\n        item.Primitive = this;\r\n        this.Displayables.Add(item);\r\n        this.CurrentDiaplay = item;\r\n        this.Grid.CurrentEvent = this.CurrentDiaplay;\r\n        return item;\r\n    }\r\n\r\n    //Zoom\r\n    private _zoom: Zoom;\r\n    SetZoom(zoom: Zoom): boolean {\r\n        try {\r\n            this.Left = this.Left * zoom.Width;\r\n            this.Top = this.Top * zoom.Height;\r\n            this.Height = this.Height * zoom.Height;\r\n            this.Width = this.Width * zoom.Width;\r\n            this._zoom = zoom;\r\n            this.Displayables.forEach((value: Displayable) => {\r\n                value.SetZoom(zoom);\r\n            });\r\n        } catch (e) {\r\n            DataExcelConsole.log(\"DataExcelRow SetZoom\", e);\r\n        }\r\n        return false;\r\n    }\r\n    GetZoom(): Zoom {\r\n        return this._zoom;\r\n    }\r\n}\r\n"],"names":["DataExcelMergeCell","Displayable","DisplayableCircle","DisplayableBuild","DisplayableLine","DisplayablePolygon","DisplayableRect","DisplayableSector","DisplayableText","DisplayableImage","Chart","DisplayableList","Primitive"],"mappings":"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"}